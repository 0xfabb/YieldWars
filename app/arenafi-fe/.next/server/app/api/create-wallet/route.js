(()=>{var a={};a.id=356,a.ids=[356],a.modules={261:a=>{"use strict";a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{"use strict";a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},8160:(a,b)=>{"use strict";Object.defineProperty(b,"__esModule",{value:!0}),b.add5L=b.add5H=b.add4H=b.add4L=b.add3H=b.add3L=b.add=b.rotlBL=b.rotlBH=b.rotlSL=b.rotlSH=b.rotr32L=b.rotr32H=b.rotrBL=b.rotrBH=b.rotrSL=b.rotrSH=b.shrSL=b.shrSH=b.toBig=b.split=b.fromBig=void 0;let c=BigInt(0x100000000-1),d=BigInt(32);function e(a,b=!1){return b?{h:Number(a&c),l:Number(a>>d&c)}:{h:0|Number(a>>d&c),l:0|Number(a&c)}}function f(a,b=!1){let c=new Uint32Array(a.length),d=new Uint32Array(a.length);for(let f=0;f<a.length;f++){let{h:g,l:h}=e(a[f],b);[c[f],d[f]]=[g,h]}return[c,d]}b.fromBig=e,b.split=f;let g=(a,b)=>BigInt(a>>>0)<<d|BigInt(b>>>0);b.toBig=g;let h=(a,b,c)=>a>>>c;b.shrSH=h;let i=(a,b,c)=>a<<32-c|b>>>c;b.shrSL=i;let j=(a,b,c)=>a>>>c|b<<32-c;b.rotrSH=j;let k=(a,b,c)=>a<<32-c|b>>>c;b.rotrSL=k;let l=(a,b,c)=>a<<64-c|b>>>c-32;b.rotrBH=l;let m=(a,b,c)=>a>>>c-32|b<<64-c;b.rotrBL=m;let n=(a,b)=>b;b.rotr32H=n;let o=(a,b)=>a;b.rotr32L=o;let p=(a,b,c)=>a<<c|b>>>32-c;b.rotlSH=p;let q=(a,b,c)=>b<<c|a>>>32-c;b.rotlSL=q;let r=(a,b,c)=>b<<c-32|a>>>64-c;b.rotlBH=r;let s=(a,b,c)=>a<<c-32|b>>>64-c;function t(a,b,c,d){let e=(b>>>0)+(d>>>0);return{h:a+c+(e/0x100000000|0)|0,l:0|e}}b.rotlBL=s,b.add=t;let u=(a,b,c)=>(a>>>0)+(b>>>0)+(c>>>0);b.add3L=u;let v=(a,b,c,d)=>b+c+d+(a/0x100000000|0)|0;b.add3H=v;let w=(a,b,c,d)=>(a>>>0)+(b>>>0)+(c>>>0)+(d>>>0);b.add4L=w;let x=(a,b,c,d,e)=>b+c+d+e+(a/0x100000000|0)|0;b.add4H=x;let y=(a,b,c,d,e)=>(a>>>0)+(b>>>0)+(c>>>0)+(d>>>0)+(e>>>0);b.add5L=y;let z=(a,b,c,d,e,f)=>b+c+d+e+f+(a/0x100000000|0)|0;b.add5H=z,b.default={fromBig:e,split:f,toBig:g,shrSH:h,shrSL:i,rotrSH:j,rotrSL:k,rotrBH:l,rotrBL:m,rotr32H:n,rotr32L:o,rotlSH:p,rotlSL:q,rotlBH:r,rotlBL:s,add:t,add3L:u,add3H:v,add4L:w,add4H:x,add5H:z,add5L:y}},10846:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},14734:a=>{"use strict";a.exports=JSON.parse('["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"]')},19121:a=>{"use strict";a.exports=require("next/dist/server/app-render/action-async-storage.external.js")},21312:a=>{"use strict";a.exports=JSON.parse('["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]')},22853:(a,b,c)=>{"use strict";let d;Object.defineProperty(b,"__esModule",{value:!0});let e={};b.wordlists=e,b._default=d;try{b._default=d=c(93891),e.czech=d}catch(a){}try{b._default=d=c(14734),e.chinese_simplified=d}catch(a){}try{b._default=d=c(61958),e.chinese_traditional=d}catch(a){}try{b._default=d=c(49068),e.korean=d}catch(a){}try{b._default=d=c(94128),e.french=d}catch(a){}try{b._default=d=c(50984),e.italian=d}catch(a){}try{b._default=d=c(21312),e.spanish=d}catch(a){}try{b._default=d=c(59763),e.japanese=d,e.JA=d}catch(a){}try{b._default=d=c(91997),e.portuguese=d}catch(a){}try{b._default=d=c(64696),e.english=d,e.EN=d}catch(a){}},26507:(a,b,c)=>{"use strict";Object.defineProperty(b,"__esModule",{value:!0}),b.pbkdf2Async=b.pbkdf2=void 0;let d=c(38543),e=c(56461),f=c(52441);function g(a,b,c,g){(0,d.hash)(a);let{c:h,dkLen:i,asyncTick:j}=(0,f.checkOpts)({dkLen:32,asyncTick:10},g);if((0,d.number)(h),(0,d.number)(i),(0,d.number)(j),h<1)throw Error("PBKDF2: iterations (c) should be >= 1");let k=(0,f.toBytes)(b),l=(0,f.toBytes)(c),m=new Uint8Array(i),n=e.hmac.create(a,k),o=n._cloneInto().update(l);return{c:h,dkLen:i,asyncTick:j,DK:m,PRF:n,PRFSalt:o}}function h(a,b,c,d,e){return a.destroy(),b.destroy(),d&&d.destroy(),e.fill(0),c}b.pbkdf2=function(a,b,c,d){let e,{c:i,dkLen:j,DK:k,PRF:l,PRFSalt:m}=g(a,b,c,d),n=new Uint8Array(4),o=(0,f.createView)(n),p=new Uint8Array(l.outputLen);for(let a=1,b=0;b<j;a++,b+=l.outputLen){let c=k.subarray(b,b+l.outputLen);o.setInt32(0,a,!1),(e=m._cloneInto(e)).update(n).digestInto(p),c.set(p.subarray(0,c.length));for(let a=1;a<i;a++){l._cloneInto(e).update(p).digestInto(p);for(let a=0;a<c.length;a++)c[a]^=p[a]}}return h(l,m,k,e,p)},b.pbkdf2Async=async function(a,b,c,d){let e,{c:i,dkLen:j,asyncTick:k,DK:l,PRF:m,PRFSalt:n}=g(a,b,c,d),o=new Uint8Array(4),p=(0,f.createView)(o),q=new Uint8Array(m.outputLen);for(let a=1,b=0;b<j;a++,b+=m.outputLen){let c=l.subarray(b,b+m.outputLen);p.setInt32(0,a,!1),(e=n._cloneInto(e)).update(o).digestInto(q),c.set(q.subarray(0,c.length)),await (0,f.asyncLoop)(i-1,k,()=>{m._cloneInto(e).update(q).digestInto(q);for(let a=0;a<c.length;a++)c[a]^=q[a]})}return h(m,n,l,e,q)}},29019:(a,b,c)=>{"use strict";let d=c(73333),e=c(59840),f=c(26507);(c(52441),c(22853))._default;function g(a){return(a||"").normalize("NFKD")}b.kw=function(a,b){let c=Uint8Array.from(Buffer.from(g(a),"utf8")),d=Uint8Array.from(Buffer.from("mnemonic"+(g(b)||""),"utf8")),h=f.pbkdf2(e.sha512,c,d,{c:2048,dkLen:64});return Buffer.from(h)};c(22853).wordlists},29127:(a,b,c)=>{"use strict";c.r(b),c.d(b,{handler:()=>eM,patchFetch:()=>eL,routeModule:()=>eH,serverHooks:()=>eK,workAsyncStorage:()=>eI,workUnitAsyncStorage:()=>eJ});var d,e,f,g,h,i,j={};c.r(j),c.d(j,{OG:()=>bc,My:()=>a3,Ph:()=>a6,lX:()=>a7,Id:()=>bb,fg:()=>bf,qj:()=>ba,aT:()=>a5,lq:()=>a8,z:()=>a9,Q5:()=>bh});var k={};c.r(k),c.d(k,{POST:()=>eG});var l=c(95736),m=c(9117),n=c(4044),o=c(39326),p=c(32324),q=c(261),r=c(54290),s=c(85328),t=c(38928),u=c(46595),v=c(3421),w=c(17679),x=c(41681),y=c(63446),z=c(86439),A=c(51356),B=c(10641),C=c(55511);let D="6.15.0";async function E(a){let b=Object.keys(a);return(await Promise.all(b.map(b=>Promise.resolve(a[b])))).reduce((a,c,d)=>(a[b[d]]=c,a),{})}function F(a,b,c){for(let d in b){let e=b[d],f=c?c[d]:null;f&&function(a,b,c){let d=b.split("|").map(a=>a.trim());for(let c=0;c<d.length;c++)switch(b){case"any":return;case"bigint":case"boolean":case"number":case"string":if(typeof a===b)return}let e=Error(`invalid value for type ${b}`);throw e.code="INVALID_ARGUMENT",e.argument=`value.${c}`,e.value=a,e}(e,f,d),Object.defineProperty(a,d,{enumerable:!0,value:e,writable:!1})}}function G(a,b){if(null==a)return"null";if(null==b&&(b=new Set),"object"==typeof a){if(b.has(a))return"[Circular]";b.add(a)}if(Array.isArray(a))return"[ "+a.map(a=>G(a,b)).join(", ")+" ]";if(a instanceof Uint8Array){let b="0123456789abcdef",c="0x";for(let d=0;d<a.length;d++)c+=b[a[d]>>4],c+=b[15&a[d]];return c}if("object"==typeof a&&"function"==typeof a.toJSON)return G(a.toJSON(),b);switch(typeof a){case"boolean":case"number":case"symbol":return a.toString();case"bigint":return BigInt(a).toString();case"string":return JSON.stringify(a);case"object":{let c=Object.keys(a);return c.sort(),"{ "+c.map(c=>`${G(c,b)}: ${G(a[c],b)}`).join(", ")+" }"}}return"[ COULD NOT SERIALIZE ]"}function H(a,b,c){let d,e=a;{let d=[];if(c){if("message"in c||"code"in c||"name"in c)throw Error(`value will overwrite populated values: ${G(c)}`);for(let a in c){if("shortMessage"===a)continue;let b=c[a];d.push(a+"="+G(b))}}d.push(`code=${b}`),d.push(`version=${D}`),d.length&&(a+=" ("+d.join(", ")+")")}switch(b){case"INVALID_ARGUMENT":d=TypeError(a);break;case"NUMERIC_FAULT":case"BUFFER_OVERRUN":d=RangeError(a);break;default:d=Error(a)}return F(d,{code:b}),c&&Object.assign(d,c),null==d.shortMessage&&F(d,{shortMessage:e}),d}function I(a,b,c,d){if(!a)throw H(b,c,d)}function J(a,b,c,d){I(a,b,"INVALID_ARGUMENT",{argument:c,value:d})}let K=["NFD","NFC","NFKD","NFKC"].reduce((a,b)=>{try{if("test"!=="test".normalize(b))throw Error("bad");if("NFD"===b){let a=String.fromCharCode(233).normalize("NFD"),b=String.fromCharCode(101,769);if(a!==b)throw Error("broken")}a.push(b)}catch(a){}return a},[]);function L(a){I(K.indexOf(a)>=0,"platform missing String.prototype.normalize","UNSUPPORTED_OPERATION",{operation:"String.prototype.normalize",info:{form:a}})}function M(a,b,c){if(null==c&&(c=""),a!==b){let a=c,b="new";c&&(a+=".",b+=" "+c),I(!1,`private constructor; use ${a}from* methods`,"UNSUPPORTED_OPERATION",{operation:b})}}function N(a,b,c){if(a instanceof Uint8Array)return c?new Uint8Array(a):a;if("string"==typeof a&&a.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)){let b=new Uint8Array((a.length-2)/2),c=2;for(let d=0;d<b.length;d++)b[d]=parseInt(a.substring(c,c+2),16),c+=2;return b}J(!1,"invalid BytesLike value",b||"value",a)}function O(a,b){return N(a,b,!1)}function P(a,b){return N(a,b,!0)}function Q(a,b){return"string"==typeof a&&!!a.match(/^0x[0-9A-Fa-f]*$/)&&("number"!=typeof b||a.length===2+2*b)&&(!0!==b||a.length%2==0)}function R(a){return Q(a,!0)||a instanceof Uint8Array}let S="0123456789abcdef";function T(a){let b=O(a),c="0x";for(let a=0;a<b.length;a++){let d=b[a];c+=S[(240&d)>>4]+S[15&d]}return c}function U(a){return"0x"+a.map(a=>T(a).substring(2)).join("")}function V(a){return Q(a,!0)?(a.length-2)/2:O(a).length}function W(a,b,c){let d=O(a);return null!=c&&c>d.length&&I(!1,"cannot slice beyond data bounds","BUFFER_OVERRUN",{buffer:d,length:d.length,offset:c}),T(d.slice(null==b?0:b,null==c?d.length:c))}function X(a,b){let c=O(a);I(b>=c.length,"padding exceeds data length","BUFFER_OVERRUN",{buffer:new Uint8Array(c),length:b,offset:b+1});let d=new Uint8Array(b);return d.fill(0),d.set(c,b-c.length),T(d)}let Y=function(a){return(0,C.createHash)("sha256").update(a).digest()},Z=function(a){return(0,C.createHash)("sha512").update(a).digest()},$=Y,_=Z,aa=!1,ab=!1;function ac(a){let b=O(a,"data");return T($(b))}function ad(a){let b=O(a,"data");return T(_(b))}ac._=Y,ac.lock=function(){aa=!0},ac.register=function(a){if(aa)throw Error("sha256 is locked");$=a},Object.freeze(ac),ad._=Z,ad.lock=function(){ab=!0},ad.register=function(a){if(ab)throw Error("sha512 is locked");_=a},Object.freeze(ac);let ae=!1,af=function(a,b,c){return(0,C.createHmac)(a,b).update(c).digest()},ag=af;function ah(a,b,c){let d=O(b,"key"),e=O(c,"data");return T(ag(a,d,e))}function ai(a){if(!Number.isSafeInteger(a)||a<0)throw Error(`Wrong positive integer: ${a}`)}function aj(a,...b){if(!(a instanceof Uint8Array))throw Error("Expected Uint8Array");if(b.length>0&&!b.includes(a.length))throw Error(`Expected Uint8Array of length ${b}, not of length=${a.length}`)}function ak(a){if("function"!=typeof a||"function"!=typeof a.create)throw Error("Hash should be wrapped by utils.wrapConstructor");ai(a.outputLen),ai(a.blockLen)}function al(a,b=!0){if(a.destroyed)throw Error("Hash instance has been destroyed");if(b&&a.finished)throw Error("Hash#digest() has already been called")}function am(a,b){aj(a);let c=b.outputLen;if(a.length<c)throw Error(`digestInto() expects output buffer of length at least ${c}`)}ah._=af,ah.lock=function(){ae=!0},ah.register=function(a){if(ae)throw Error("computeHmac is locked");ag=a},Object.freeze(ah);var an=c(77598),ao=c.t(an,2);let ap=ao&&"object"==typeof ao&&"webcrypto"in ao?an.webcrypto:void 0,aq=a=>new Uint32Array(a.buffer,a.byteOffset,Math.floor(a.byteLength/4)),ar=a=>new DataView(a.buffer,a.byteOffset,a.byteLength),as=(a,b)=>a<<32-b|a>>>b;if(68!==new Uint8Array(new Uint32Array([0x11223344]).buffer)[0])throw Error("Non little-endian hardware is not supported");let at=async()=>{};async function au(a,b,c){let d=Date.now();for(let e=0;e<a;e++){c(e);let a=Date.now()-d;a>=0&&a<b||(await at(),d+=a)}}function av(a){if("string"==typeof a&&(a=function(a){if("string"!=typeof a)throw Error(`utf8ToBytes expected string, got ${typeof a}`);return new Uint8Array(new TextEncoder().encode(a))}(a)),!(a instanceof Uint8Array))throw Error(`expected Uint8Array, got ${typeof a}`);return a}class aw{clone(){return this._cloneInto()}}let ax={}.toString;function ay(a,b){if(void 0!==b&&"[object Object]"!==ax.call(b))throw Error("Options should be object or undefined");return Object.assign(a,b)}function az(a){let b=b=>a().update(av(b)).digest(),c=a();return b.outputLen=c.outputLen,b.blockLen=c.blockLen,b.create=()=>a(),b}function aA(a=32){if(ap&&"function"==typeof ap.getRandomValues)return ap.getRandomValues(new Uint8Array(a));throw Error("crypto.getRandomValues must be defined")}class aB extends aw{constructor(a,b,c,d){super(),this.blockLen=a,this.outputLen=b,this.padOffset=c,this.isLE=d,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(a),this.view=ar(this.buffer)}update(a){al(this);let{view:b,buffer:c,blockLen:d}=this,e=(a=av(a)).length;for(let f=0;f<e;){let g=Math.min(d-this.pos,e-f);if(g===d){let b=ar(a);for(;d<=e-f;f+=d)this.process(b,f);continue}c.set(a.subarray(f,f+g),this.pos),this.pos+=g,f+=g,this.pos===d&&(this.process(b,0),this.pos=0)}return this.length+=a.length,this.roundClean(),this}digestInto(a){al(this),am(a,this),this.finished=!0;let{buffer:b,view:c,blockLen:d,isLE:e}=this,{pos:f}=this;b[f++]=128,this.buffer.subarray(f).fill(0),this.padOffset>d-f&&(this.process(c,0),f=0);for(let a=f;a<d;a++)b[a]=0;!function(a,b,c,d){if("function"==typeof a.setBigUint64)return a.setBigUint64(b,c,d);let e=BigInt(32),f=BigInt(0xffffffff),g=Number(c>>e&f),h=Number(c&f),i=4*!!d,j=4*!d;a.setUint32(b+i,g,d),a.setUint32(b+j,h,d)}(c,d-8,BigInt(8*this.length),e),this.process(c,0);let g=ar(a),h=this.outputLen;if(h%4)throw Error("_sha2: outputLen should be aligned to 32bit");let i=h/4,j=this.get();if(i>j.length)throw Error("_sha2: outputLen bigger than state");for(let a=0;a<i;a++)g.setUint32(4*a,j[a],e)}digest(){let{buffer:a,outputLen:b}=this;this.digestInto(a);let c=a.slice(0,b);return this.destroy(),c}_cloneInto(a){a||(a=new this.constructor),a.set(...this.get());let{blockLen:b,buffer:c,length:d,finished:e,destroyed:f,pos:g}=this;return a.length=d,a.pos=g,a.finished=e,a.destroyed=f,d%b&&a.buffer.set(c),a}}let aC=new Uint8Array([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),aD=Uint8Array.from({length:16},(a,b)=>b),aE=aD.map(a=>(9*a+5)%16),aF=[aD],aG=[aE];for(let a=0;a<4;a++)for(let b of[aF,aG])b.push(b[a].map(a=>aC[a]));let aH=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map(a=>new Uint8Array(a)),aI=aF.map((a,b)=>a.map(a=>aH[b][a])),aJ=aG.map((a,b)=>a.map(a=>aH[b][a])),aK=new Uint32Array([0,0x5a827999,0x6ed9eba1,0x8f1bbcdc,0xa953fd4e]),aL=new Uint32Array([0x50a28be6,0x5c4dd124,0x6d703ef3,0x7a6d76e9,0]),aM=(a,b)=>a<<b|a>>>32-b;function aN(a,b,c,d){return 0===a?b^c^d:1===a?b&c|~b&d:2===a?(b|~c)^d:3===a?b&d|c&~d:b^(c|~d)}let aO=new Uint32Array(16);class aP extends aB{constructor(){super(64,20,8,!0),this.h0=0x67452301,this.h1=-0x10325477,this.h2=-0x67452302,this.h3=0x10325476,this.h4=-0x3c2d1e10}get(){let{h0:a,h1:b,h2:c,h3:d,h4:e}=this;return[a,b,c,d,e]}set(a,b,c,d,e){this.h0=0|a,this.h1=0|b,this.h2=0|c,this.h3=0|d,this.h4=0|e}process(a,b){for(let c=0;c<16;c++,b+=4)aO[c]=a.getUint32(b,!0);let c=0|this.h0,d=c,e=0|this.h1,f=e,g=0|this.h2,h=g,i=0|this.h3,j=i,k=0|this.h4,l=k;for(let a=0;a<5;a++){let b=4-a,m=aK[a],n=aL[a],o=aF[a],p=aG[a],q=aI[a],r=aJ[a];for(let b=0;b<16;b++){let d=aM(c+aN(a,e,g,i)+aO[o[b]]+m,q[b])+k|0;c=k,k=i,i=0|aM(g,10),g=e,e=d}for(let a=0;a<16;a++){let c=aM(d+aN(b,f,h,j)+aO[p[a]]+n,r[a])+l|0;d=l,l=j,j=0|aM(h,10),h=f,f=c}}this.set(this.h1+g+j|0,this.h2+i+l|0,this.h3+k+d|0,this.h4+c+f|0,this.h0+e+h|0)}roundClean(){aO.fill(0)}destroy(){this.destroyed=!0,this.buffer.fill(0),this.set(0,0,0,0,0)}}let aQ=az(()=>new aP),aR=!1,aS=function(a){return aQ(a)},aT=aS;function aU(a){let b=O(a,"data");return T(aT(b))}aU._=aS,aU.lock=function(){aR=!0},aU.register=function(a){if(aR)throw TypeError("ripemd160 is locked");aT=a},Object.freeze(aU);let aV=(a,b,c)=>a&b^~a&c,aW=(a,b,c)=>a&b^a&c^b&c,aX=new Uint32Array([0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5,0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5,0xd807aa98,0x12835b01,0x243185be,0x550c7dc3,0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174,0xe49b69c1,0xefbe4786,0xfc19dc6,0x240ca1cc,0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da,0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7,0xc6e00bf3,0xd5a79147,0x6ca6351,0x14292967,0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13,0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85,0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3,0xd192e819,0xd6990624,0xf40e3585,0x106aa070,0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5,0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3,0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208,0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2]),aY=new Uint32Array([0x6a09e667,0xbb67ae85,0x3c6ef372,0xa54ff53a,0x510e527f,0x9b05688c,0x1f83d9ab,0x5be0cd19]),aZ=new Uint32Array(64);class a$ extends aB{constructor(){super(64,32,8,!1),this.A=0|aY[0],this.B=0|aY[1],this.C=0|aY[2],this.D=0|aY[3],this.E=0|aY[4],this.F=0|aY[5],this.G=0|aY[6],this.H=0|aY[7]}get(){let{A:a,B:b,C:c,D:d,E:e,F:f,G:g,H:h}=this;return[a,b,c,d,e,f,g,h]}set(a,b,c,d,e,f,g,h){this.A=0|a,this.B=0|b,this.C=0|c,this.D=0|d,this.E=0|e,this.F=0|f,this.G=0|g,this.H=0|h}process(a,b){for(let c=0;c<16;c++,b+=4)aZ[c]=a.getUint32(b,!1);for(let a=16;a<64;a++){let b=aZ[a-15],c=aZ[a-2],d=as(b,7)^as(b,18)^b>>>3,e=as(c,17)^as(c,19)^c>>>10;aZ[a]=e+aZ[a-7]+d+aZ[a-16]|0}let{A:c,B:d,C:e,D:f,E:g,F:h,G:i,H:j}=this;for(let a=0;a<64;a++){let b=j+(as(g,6)^as(g,11)^as(g,25))+aV(g,h,i)+aX[a]+aZ[a]|0,k=(as(c,2)^as(c,13)^as(c,22))+aW(c,d,e)|0;j=i,i=h,h=g,g=f+b|0,f=e,e=d,d=c,c=b+k|0}c=c+this.A|0,d=d+this.B|0,e=e+this.C|0,f=f+this.D|0,g=g+this.E|0,h=h+this.F|0,i=i+this.G|0,j=j+this.H|0,this.set(c,d,e,f,g,h,i,j)}roundClean(){aZ.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}let a_=az(()=>new a$);BigInt(0);let a0=BigInt(1),a1=BigInt(2),a2=Array.from({length:256},(a,b)=>b.toString(16).padStart(2,"0"));function a3(a){if(!(a instanceof Uint8Array))throw Error("Uint8Array expected");let b="";for(let c=0;c<a.length;c++)b+=a2[a[c]];return b}function a4(a){if("string"!=typeof a)throw Error("hex string expected, got "+typeof a);return BigInt(""===a?"0":`0x${a}`)}function a5(a){if("string"!=typeof a)throw Error("hex string expected, got "+typeof a);let b=a.length;if(b%2)throw Error("padded hex string expected, got unpadded hex of length "+b);let c=new Uint8Array(b/2);for(let b=0;b<c.length;b++){let d=2*b,e=Number.parseInt(a.slice(d,d+2),16);if(Number.isNaN(e)||e<0)throw Error("Invalid byte sequence");c[b]=e}return c}function a6(a){return a4(a3(a))}function a7(a){if(!(a instanceof Uint8Array))throw Error("Uint8Array expected");return a4(a3(Uint8Array.from(a).reverse()))}function a8(a,b){return a5(a.toString(16).padStart(2*b,"0"))}function a9(a,b){return a8(a,b).reverse()}function ba(a,b,c){let d;if("string"==typeof b)try{d=a5(b)}catch(c){throw Error(`${a} must be valid hex string, got "${b}". Cause: ${c}`)}else if(b instanceof Uint8Array)d=Uint8Array.from(b);else throw Error(`${a} must be hex string or Uint8Array`);let e=d.length;if("number"==typeof c&&e!==c)throw Error(`${a} expected ${c} bytes, got ${e}`);return d}function bb(...a){let b=new Uint8Array(a.reduce((a,b)=>a+b.length,0)),c=0;return a.forEach(a=>{if(!(a instanceof Uint8Array))throw Error("Uint8Array expected");b.set(a,c),c+=a.length}),b}let bc=a=>(a1<<BigInt(a-1))-a0,bd=a=>new Uint8Array(a),be=a=>Uint8Array.from(a);function bf(a,b,c){if("number"!=typeof a||a<2)throw Error("hashLen must be a number");if("number"!=typeof b||b<2)throw Error("qByteLen must be a number");if("function"!=typeof c)throw Error("hmacFn must be a function");let d=bd(a),e=bd(a),f=0,g=()=>{d.fill(1),e.fill(0),f=0},h=(...a)=>c(e,d,...a),i=(a=bd())=>{e=h(be([0]),a),d=h(),0!==a.length&&(e=h(be([1]),a),d=h())},j=()=>{if(f++>=1e3)throw Error("drbg: tried 1000 values");let a=0,c=[];for(;a<b;){let b=(d=h()).slice();c.push(b),a+=d.length}return bb(...c)};return(a,b)=>{let c;for(g(),i(a);!(c=b(j()));)i();return g(),c}}let bg={bigint:a=>"bigint"==typeof a,function:a=>"function"==typeof a,boolean:a=>"boolean"==typeof a,string:a=>"string"==typeof a,stringOrUint8Array:a=>"string"==typeof a||a instanceof Uint8Array,isSafeInteger:a=>Number.isSafeInteger(a),array:a=>Array.isArray(a),field:(a,b)=>b.Fp.isValid(a),hash:a=>"function"==typeof a&&Number.isSafeInteger(a.outputLen)};function bh(a,b,c={}){let d=(b,c,d)=>{let e=bg[c];if("function"!=typeof e)throw Error(`Invalid validator "${c}", expected function`);let f=a[b];if((!d||void 0!==f)&&!e(f,a))throw Error(`Invalid param ${String(b)}=${f} (${typeof f}), expected ${c}`)};for(let[a,c]of Object.entries(b))d(a,c,!1);for(let[a,b]of Object.entries(c))d(a,b,!0);return a}let bi=BigInt(0),bj=BigInt(1),bk=BigInt(2),bl=BigInt(3),bm=BigInt(4),bn=BigInt(5),bo=BigInt(8);function bp(a,b){let c=a%b;return c>=bi?c:b+c}function bq(a,b,c){let d=a;for(;b-- >bi;)d*=d,d%=c;return d}function br(a,b){if(a===bi||b<=bi)throw Error(`invert: expected positive integers, got n=${a} mod=${b}`);let c=bp(a,b),d=b,e=bi,f=bj,g=bj,h=bi;for(;c!==bi;){let a=d/c,b=d%c,i=e-g*a,j=f-h*a;d=c,c=b,e=g,f=h,g=i,h=j}if(d!==bj)throw Error("invert: does not exist");return bp(e,b)}BigInt(9),BigInt(16);let bs=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function bt(a,b){let c=void 0!==b?b:a.toString(2).length,d=Math.ceil(c/8);return{nBitLength:c,nByteLength:d}}function bu(a){if("bigint"!=typeof a)throw Error("field order must be bigint");return Math.ceil(a.toString(2).length/8)}function bv(a){let b=bu(a);return b+Math.ceil(b/2)}class bw extends aw{constructor(a,b){super(),this.finished=!1,this.destroyed=!1,ak(a);let c=av(b);if(this.iHash=a.create(),"function"!=typeof this.iHash.update)throw Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let d=this.blockLen,e=new Uint8Array(d);e.set(c.length>d?a.create().update(c).digest():c);for(let a=0;a<e.length;a++)e[a]^=54;this.iHash.update(e),this.oHash=a.create();for(let a=0;a<e.length;a++)e[a]^=106;this.oHash.update(e),e.fill(0)}update(a){return al(this),this.iHash.update(a),this}digestInto(a){al(this),aj(a,this.outputLen),this.finished=!0,this.iHash.digestInto(a),this.oHash.update(a),this.oHash.digestInto(a),this.destroy()}digest(){let a=new Uint8Array(this.oHash.outputLen);return this.digestInto(a),a}_cloneInto(a){a||(a=Object.create(Object.getPrototypeOf(this),{}));let{oHash:b,iHash:c,finished:d,destroyed:e,blockLen:f,outputLen:g}=this;return a.finished=d,a.destroyed=e,a.blockLen=f,a.outputLen=g,a.oHash=b._cloneInto(a.oHash),a.iHash=c._cloneInto(a.iHash),a}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}let bx=(a,b,c)=>new bw(a,b).update(c).digest();bx.create=(a,b)=>new bw(a,b);let by=BigInt(0),bz=BigInt(1);function bA(a){return bh(a.Fp,bs.reduce((a,b)=>(a[b]="function",a),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"})),bh(a,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...bt(a.n,a.nBitLength),...a,...{p:a.Fp.ORDER}})}let{Ph:bB,aT:bC}=j,bD={Err:class extends Error{constructor(a=""){super(a)}},_parseInt(a){let{Err:b}=bD;if(a.length<2||2!==a[0])throw new b("Invalid signature integer tag");let c=a[1],d=a.subarray(2,c+2);if(!c||d.length!==c)throw new b("Invalid signature integer: wrong length");if(128&d[0])throw new b("Invalid signature integer: negative");if(0===d[0]&&!(128&d[1]))throw new b("Invalid signature integer: unnecessary leading zero");return{d:bB(d),l:a.subarray(c+2)}},toSig(a){let{Err:b}=bD,c="string"==typeof a?bC(a):a;if(!(c instanceof Uint8Array))throw Error("ui8a expected");let d=c.length;if(d<2||48!=c[0])throw new b("Invalid signature tag");if(c[1]!==d-2)throw new b("Invalid signature: incorrect length");let{d:e,l:f}=bD._parseInt(c.subarray(2)),{d:g,l:h}=bD._parseInt(f);if(h.length)throw new b("Invalid signature: left bytes after parsing");return{r:e,s:g}},hexFromSig(a){let b=a=>8&Number.parseInt(a[0],16)?"00"+a:a,c=a=>{let b=a.toString(16);return 1&b.length?`0${b}`:b},d=b(c(a.s)),e=b(c(a.r)),f=d.length/2,g=e.length/2,h=c(f),i=c(g);return`30${c(g+f+4)}02${i}${e}02${h}${d}`}},bE=BigInt(0),bF=BigInt(1),bG=(BigInt(2),BigInt(3));BigInt(4);let bH=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),bI=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),bJ=BigInt(1),bK=BigInt(2),bL=(a,b)=>(a+b/bK)/b,bM=function(a,b,c=!1,d={}){if(a<=bi)throw Error(`Expected Field ORDER > 0, got ${a}`);let{nBitLength:e,nByteLength:f}=bt(a,b);if(f>2048)throw Error("Field lengths over 2048 bytes are not supported");let g=function(a){if(a%bm===bl){let b=(a+bj)/bm;return function(a,c){let d=a.pow(c,b);if(!a.eql(a.sqr(d),c))throw Error("Cannot find square root");return d}}if(a%bo===bn){let b=(a-bn)/bo;return function(a,c){let d=a.mul(c,bk),e=a.pow(d,b),f=a.mul(c,e),g=a.mul(a.mul(f,bk),e),h=a.mul(f,a.sub(g,a.ONE));if(!a.eql(a.sqr(h),c))throw Error("Cannot find square root");return h}}return function(a){let b,c,d,e=(a-bj)/bk;for(b=a-bj,c=0;b%bk===bi;b/=bk,c++);for(d=bk;d<a&&function(a,b,c){if(c<=bi||b<bi)throw Error("Expected power/modulo > 0");if(c===bj)return bi;let d=bj;for(;b>bi;)b&bj&&(d=d*a%c),a=a*a%c,b>>=bj;return d}(d,e,a)!==a-bj;d++);if(1===c){let b=(a+bj)/bm;return function(a,c){let d=a.pow(c,b);if(!a.eql(a.sqr(d),c))throw Error("Cannot find square root");return d}}let f=(b+bj)/bk;return function(a,g){if(a.pow(g,e)===a.neg(a.ONE))throw Error("Cannot find square root");let h=c,i=a.pow(a.mul(a.ONE,d),b),j=a.pow(g,f),k=a.pow(g,b);for(;!a.eql(k,a.ONE);){if(a.eql(k,a.ZERO))return a.ZERO;let b=1;for(let c=a.sqr(k);b<h&&!a.eql(c,a.ONE);b++)c=a.sqr(c);let c=a.pow(i,bj<<BigInt(h-b-1));i=a.sqr(c),j=a.mul(j,c),k=a.mul(k,i),h=b}return j}}(a)}(a),h=Object.freeze({ORDER:a,BITS:e,BYTES:f,MASK:bc(e),ZERO:bi,ONE:bj,create:b=>bp(b,a),isValid:b=>{if("bigint"!=typeof b)throw Error(`Invalid field element: expected bigint, got ${typeof b}`);return bi<=b&&b<a},is0:a=>a===bi,isOdd:a=>(a&bj)===bj,neg:b=>bp(-b,a),eql:(a,b)=>a===b,sqr:b=>bp(b*b,a),add:(b,c)=>bp(b+c,a),sub:(b,c)=>bp(b-c,a),mul:(b,c)=>bp(b*c,a),pow:(a,b)=>(function(a,b,c){if(c<bi)throw Error("Expected power > 0");if(c===bi)return a.ONE;if(c===bj)return b;let d=a.ONE,e=b;for(;c>bi;)c&bj&&(d=a.mul(d,e)),e=a.sqr(e),c>>=bj;return d})(h,a,b),div:(b,c)=>bp(b*br(c,a),a),sqrN:a=>a*a,addN:(a,b)=>a+b,subN:(a,b)=>a-b,mulN:(a,b)=>a*b,inv:b=>br(b,a),sqrt:d.sqrt||(a=>g(h,a)),invertBatch:a=>(function(a,b){let c=Array(b.length),d=b.reduce((b,d,e)=>a.is0(d)?b:(c[e]=b,a.mul(b,d)),a.ONE),e=a.inv(d);return b.reduceRight((b,d,e)=>a.is0(d)?b:(c[e]=a.mul(b,c[e]),a.mul(b,d)),e),c})(h,a),cmov:(a,b,c)=>c?b:a,toBytes:a=>c?a9(a,f):a8(a,f),fromBytes:a=>{if(a.length!==f)throw Error(`Fp.fromBytes: expected ${f}, got ${a.length}`);return c?a7(a):a6(a)}});return Object.freeze(h)}(bH,void 0,void 0,{sqrt:function(a){let b=BigInt(3),c=BigInt(6),d=BigInt(11),e=BigInt(22),f=BigInt(23),g=BigInt(44),h=BigInt(88),i=a*a*a%bH,j=i*i*a%bH,k=bq(j,b,bH)*j%bH,l=bq(k,b,bH)*j%bH,m=bq(l,bK,bH)*i%bH,n=bq(m,d,bH)*m%bH,o=bq(n,e,bH)*n%bH,p=bq(o,g,bH)*o%bH,q=bq(p,h,bH)*p%bH,r=bq(q,g,bH)*o%bH,s=bq(r,b,bH)*j%bH,t=bq(s,f,bH)*n%bH,u=bq(t,c,bH)*i%bH,v=bq(u,bK,bH);if(!bM.eql(bM.sqr(v),a))throw Error("Cannot find square root");return v}}),bN=function(a,b){let c=b=>(function(a){let b=function(a){let b=bA(a);return bh(b,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...b})}(a),{Fp:c,n:d}=b,e=c.BYTES+1,f=2*c.BYTES+1;function g(a){return bp(a,d)}let{ProjectivePoint:h,normPrivateKeyToScalar:i,weierstrassEquation:j,isWithinCurveOrder:k}=function(a){let b=function(a){let b=bA(a);bh(b,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:c,Fp:d,a:e}=b;if(c){if(!d.eql(e,d.ZERO))throw Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof c||"bigint"!=typeof c.beta||"function"!=typeof c.splitScalar)throw Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...b})}(a),{Fp:c}=b,d=b.toBytes||((a,b,d)=>{let e=b.toAffine();return bb(Uint8Array.from([4]),c.toBytes(e.x),c.toBytes(e.y))}),e=b.fromBytes||(a=>{let b=a.subarray(1);return{x:c.fromBytes(b.subarray(0,c.BYTES)),y:c.fromBytes(b.subarray(c.BYTES,2*c.BYTES))}});function f(a){let{a:d,b:e}=b,f=c.sqr(a),g=c.mul(f,a);return c.add(c.add(g,c.mul(a,d)),e)}if(!c.eql(c.sqr(b.Gy),f(b.Gx)))throw Error("bad generator point: equation left != right");function g(a){return"bigint"==typeof a&&bE<a&&a<b.n}function h(a){if(!g(a))throw Error("Expected valid bigint: 0 < bigint < curve.n")}function i(a){let c,{allowedPrivateKeyLengths:d,nByteLength:e,wrapPrivateKey:f,n:g}=b;if(d&&"bigint"!=typeof a){if(a instanceof Uint8Array&&(a=a3(a)),"string"!=typeof a||!d.includes(a.length))throw Error("Invalid key");a=a.padStart(2*e,"0")}try{c="bigint"==typeof a?a:a6(ba("private key",a,e))}catch(b){throw Error(`private key must be ${e} bytes, hex or bigint, not ${typeof a}`)}return f&&(c=bp(c,g)),h(c),c}let j=new Map;function k(a){if(!(a instanceof l))throw Error("ProjectivePoint expected")}class l{constructor(a,b,d){if(this.px=a,this.py=b,this.pz=d,null==a||!c.isValid(a))throw Error("x required");if(null==b||!c.isValid(b))throw Error("y required");if(null==d||!c.isValid(d))throw Error("z required")}static fromAffine(a){let{x:b,y:d}=a||{};if(!a||!c.isValid(b)||!c.isValid(d))throw Error("invalid affine point");if(a instanceof l)throw Error("projective point not allowed");let e=a=>c.eql(a,c.ZERO);return e(b)&&e(d)?l.ZERO:new l(b,d,c.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(a){let b=c.invertBatch(a.map(a=>a.pz));return a.map((a,c)=>a.toAffine(b[c])).map(l.fromAffine)}static fromHex(a){let b=l.fromAffine(e(ba("pointHex",a)));return b.assertValidity(),b}static fromPrivateKey(a){return l.BASE.multiply(i(a))}_setWindowSize(a){this._WINDOW_SIZE=a,j.delete(this)}assertValidity(){if(this.is0()){if(b.allowInfinityPoint&&!c.is0(this.py))return;throw Error("bad point: ZERO")}let{x:a,y:d}=this.toAffine();if(!c.isValid(a)||!c.isValid(d))throw Error("bad point: x or y not FE");let e=c.sqr(d),g=f(a);if(!c.eql(e,g))throw Error("bad point: equation left != right");if(!this.isTorsionFree())throw Error("bad point: not in prime-order subgroup")}hasEvenY(){let{y:a}=this.toAffine();if(c.isOdd)return!c.isOdd(a);throw Error("Field doesn't support isOdd")}equals(a){k(a);let{px:b,py:d,pz:e}=this,{px:f,py:g,pz:h}=a,i=c.eql(c.mul(b,h),c.mul(f,e)),j=c.eql(c.mul(d,h),c.mul(g,e));return i&&j}negate(){return new l(this.px,c.neg(this.py),this.pz)}double(){let{a,b:d}=b,e=c.mul(d,bG),{px:f,py:g,pz:h}=this,i=c.ZERO,j=c.ZERO,k=c.ZERO,m=c.mul(f,f),n=c.mul(g,g),o=c.mul(h,h),p=c.mul(f,g);return p=c.add(p,p),k=c.mul(f,h),k=c.add(k,k),i=c.mul(a,k),j=c.mul(e,o),j=c.add(i,j),i=c.sub(n,j),j=c.add(n,j),j=c.mul(i,j),i=c.mul(p,i),k=c.mul(e,k),o=c.mul(a,o),p=c.sub(m,o),p=c.mul(a,p),p=c.add(p,k),k=c.add(m,m),m=c.add(k,m),m=c.add(m,o),m=c.mul(m,p),j=c.add(j,m),o=c.mul(g,h),o=c.add(o,o),m=c.mul(o,p),i=c.sub(i,m),k=c.mul(o,n),k=c.add(k,k),new l(i,j,k=c.add(k,k))}add(a){k(a);let{px:d,py:e,pz:f}=this,{px:g,py:h,pz:i}=a,j=c.ZERO,m=c.ZERO,n=c.ZERO,o=b.a,p=c.mul(b.b,bG),q=c.mul(d,g),r=c.mul(e,h),s=c.mul(f,i),t=c.add(d,e),u=c.add(g,h);t=c.mul(t,u),u=c.add(q,r),t=c.sub(t,u),u=c.add(d,f);let v=c.add(g,i);return u=c.mul(u,v),v=c.add(q,s),u=c.sub(u,v),v=c.add(e,f),j=c.add(h,i),v=c.mul(v,j),j=c.add(r,s),v=c.sub(v,j),n=c.mul(o,u),j=c.mul(p,s),n=c.add(j,n),j=c.sub(r,n),n=c.add(r,n),m=c.mul(j,n),r=c.add(q,q),r=c.add(r,q),s=c.mul(o,s),u=c.mul(p,u),r=c.add(r,s),s=c.sub(q,s),s=c.mul(o,s),u=c.add(u,s),q=c.mul(r,u),m=c.add(m,q),q=c.mul(v,u),j=c.mul(t,j),j=c.sub(j,q),q=c.mul(t,r),n=c.mul(v,n),new l(j,m,n=c.add(n,q))}subtract(a){return this.add(a.negate())}is0(){return this.equals(l.ZERO)}wNAF(a){return n.wNAFCached(this,j,a,a=>{let b=c.invertBatch(a.map(a=>a.pz));return a.map((a,c)=>a.toAffine(b[c])).map(l.fromAffine)})}multiplyUnsafe(a){let d=l.ZERO;if(a===bE)return d;if(h(a),a===bF)return this;let{endo:e}=b;if(!e)return n.unsafeLadder(this,a);let{k1neg:f,k1:g,k2neg:i,k2:j}=e.splitScalar(a),k=d,m=d,o=this;for(;g>bE||j>bE;)g&bF&&(k=k.add(o)),j&bF&&(m=m.add(o)),o=o.double(),g>>=bF,j>>=bF;return f&&(k=k.negate()),i&&(m=m.negate()),m=new l(c.mul(m.px,e.beta),m.py,m.pz),k.add(m)}multiply(a){let d,e;h(a);let{endo:f}=b;if(f){let{k1neg:b,k1:g,k2neg:h,k2:i}=f.splitScalar(a),{p:j,f:k}=this.wNAF(g),{p:m,f:o}=this.wNAF(i);j=n.constTimeNegate(b,j),m=n.constTimeNegate(h,m),m=new l(c.mul(m.px,f.beta),m.py,m.pz),d=j.add(m),e=k.add(o)}else{let{p:b,f:c}=this.wNAF(a);d=b,e=c}return l.normalizeZ([d,e])[0]}multiplyAndAddUnsafe(a,b,c){let d=l.BASE,e=(a,b)=>b!==bE&&b!==bF&&a.equals(d)?a.multiply(b):a.multiplyUnsafe(b),f=e(this,b).add(e(a,c));return f.is0()?void 0:f}toAffine(a){let{px:b,py:d,pz:e}=this,f=this.is0();null==a&&(a=f?c.ONE:c.inv(e));let g=c.mul(b,a),h=c.mul(d,a),i=c.mul(e,a);if(f)return{x:c.ZERO,y:c.ZERO};if(!c.eql(i,c.ONE))throw Error("invZ was invalid");return{x:g,y:h}}isTorsionFree(){let{h:a,isTorsionFree:c}=b;if(a===bF)return!0;if(c)return c(l,this);throw Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:a,clearCofactor:c}=b;return a===bF?this:c?c(l,this):this.multiplyUnsafe(b.h)}toRawBytes(a=!0){return this.assertValidity(),d(l,this,a)}toHex(a=!0){return a3(this.toRawBytes(a))}}l.BASE=new l(b.Gx,b.Gy,c.ONE),l.ZERO=new l(c.ZERO,c.ONE,c.ZERO);let m=b.nBitLength,n=function(a,b){let c=(a,b)=>{let c=b.negate();return a?c:b},d=a=>({windows:Math.ceil(b/a)+1,windowSize:2**(a-1)});return{constTimeNegate:c,unsafeLadder(b,c){let d=a.ZERO,e=b;for(;c>by;)c&bz&&(d=d.add(e)),e=e.double(),c>>=bz;return d},precomputeWindow(a,b){let{windows:c,windowSize:e}=d(b),f=[],g=a,h=g;for(let a=0;a<c;a++){h=g,f.push(h);for(let a=1;a<e;a++)h=h.add(g),f.push(h);g=h.double()}return f},wNAF(b,e,f){let{windows:g,windowSize:h}=d(b),i=a.ZERO,j=a.BASE,k=BigInt(2**b-1),l=2**b,m=BigInt(b);for(let a=0;a<g;a++){let b=a*h,d=Number(f&k);f>>=m,d>h&&(d-=l,f+=bz);let g=b+Math.abs(d)-1,n=a%2!=0,o=d<0;0===d?j=j.add(c(n,e[b])):i=i.add(c(o,e[g]))}return{p:i,f:j}},wNAFCached(a,b,c,d){let e=a._WINDOW_SIZE||1,f=b.get(a);return f||(f=this.precomputeWindow(a,e),1!==e&&b.set(a,d(f))),this.wNAF(e,f,c)}}}(l,b.endo?Math.ceil(m/2):m);return{CURVE:b,ProjectivePoint:l,normPrivateKeyToScalar:i,weierstrassEquation:f,isWithinCurveOrder:g}}({...b,toBytes(a,b,d){let e=b.toAffine(),f=c.toBytes(e.x),g=bb;return d?g(Uint8Array.from([b.hasEvenY()?2:3]),f):g(Uint8Array.from([4]),f,c.toBytes(e.y))},fromBytes(a){let b=a.length,d=a[0],g=a.subarray(1);if(b===e&&(2===d||3===d)){let a=a6(g);if(!(bE<a&&a<c.ORDER))throw Error("Point is not on curve");let b=j(a),e=c.sqrt(b);return(1&d)==1!=((e&bF)===bF)&&(e=c.neg(e)),{x:a,y:e}}if(b===f&&4===d)return{x:c.fromBytes(g.subarray(0,c.BYTES)),y:c.fromBytes(g.subarray(c.BYTES,2*c.BYTES))};throw Error(`Point of length ${b} was invalid. Expected ${e} compressed bytes or ${f} uncompressed bytes`)}}),l=a=>a3(a8(a,b.nByteLength)),m=(a,b,c)=>a6(a.slice(b,c));class n{constructor(a,b,c){this.r=a,this.s=b,this.recovery=c,this.assertValidity()}static fromCompact(a){let c=b.nByteLength;return new n(m(a=ba("compactSignature",a,2*c),0,c),m(a,c,2*c))}static fromDER(a){let{r:b,s:c}=bD.toSig(ba("DER",a));return new n(b,c)}assertValidity(){if(!k(this.r))throw Error("r must be 0 < r < CURVE.n");if(!k(this.s))throw Error("s must be 0 < s < CURVE.n")}addRecoveryBit(a){return new n(this.r,this.s,a)}recoverPublicKey(a){let{r:e,s:f,recovery:i}=this,j=q(ba("msgHash",a));if(null==i||![0,1,2,3].includes(i))throw Error("recovery id invalid");let k=2===i||3===i?e+b.n:e;if(k>=c.ORDER)throw Error("recovery id 2 or 3 invalid");let m=(1&i)==0?"02":"03",n=h.fromHex(m+l(k)),o=br(k,d),p=g(-j*o),r=g(f*o),s=h.BASE.multiplyAndAddUnsafe(n,p,r);if(!s)throw Error("point at infinify");return s.assertValidity(),s}hasHighS(){return this.s>d>>bF}normalizeS(){return this.hasHighS()?new n(this.r,g(-this.s),this.recovery):this}toDERRawBytes(){return a5(this.toDERHex())}toDERHex(){return bD.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return a5(this.toCompactHex())}toCompactHex(){return l(this.r)+l(this.s)}}function o(a){let b=a instanceof Uint8Array,c="string"==typeof a,d=(b||c)&&a.length;return b?d===e||d===f:c?d===2*e||d===2*f:a instanceof h}let p=b.bits2int||function(a){let c=a6(a),d=8*a.length-b.nBitLength;return d>0?c>>BigInt(d):c},q=b.bits2int_modN||function(a){return g(p(a))},r=bc(b.nBitLength);function s(a){if("bigint"!=typeof a)throw Error("bigint expected");if(!(bE<=a&&a<r))throw Error(`bigint expected < 2^${b.nBitLength}`);return a8(a,b.nByteLength)}let t={lowS:b.lowS,prehash:!1},u={lowS:b.lowS,prehash:!1};return h.BASE._setWindowSize(8),{CURVE:b,getPublicKey:function(a,b=!0){return h.fromPrivateKey(a).toRawBytes(b)},getSharedSecret:function(a,b,c=!0){if(o(a))throw Error("first arg must be private key");if(!o(b))throw Error("second arg must be public key");return h.fromHex(b).multiply(i(a)).toRawBytes(c)},sign:function(a,e,f=t){let{seed:j,k2sig:l}=function(a,e,f=t){if(["recovered","canonical"].some(a=>a in f))throw Error("sign() legacy options not supported");let{hash:j,randomBytes:l}=b,{lowS:m,prehash:o,extraEntropy:r}=f;null==m&&(m=!0),a=ba("msgHash",a),o&&(a=ba("prehashed msgHash",j(a)));let u=q(a),v=i(e),w=[s(v),s(u)];if(null!=r){let a=!0===r?l(c.BYTES):r;w.push(ba("extraEntropy",a))}return{seed:bb(...w),k2sig:function(a){var b;let c=p(a);if(!k(c))return;let e=br(c,d),f=h.BASE.multiply(c).toAffine(),i=g(f.x);if(i===bE)return;let j=g(e*g(u+i*v));if(j===bE)return;let l=2*(f.x!==i)|Number(f.y&bF),o=j;return m&&j>d>>bF&&(o=(b=j)>d>>bF?g(-b):b,l^=1),new n(i,o,l)}}}(a,e,f);return bf(b.hash.outputLen,b.nByteLength,b.hmac)(j,l)},verify:function(a,c,e,f=u){let i,j;if(c=ba("msgHash",c),e=ba("publicKey",e),"strict"in f)throw Error("options.strict was renamed to lowS");let{lowS:k,prehash:l}=f;try{if("string"==typeof a||a instanceof Uint8Array)try{j=n.fromDER(a)}catch(b){if(!(b instanceof bD.Err))throw b;j=n.fromCompact(a)}else if("object"==typeof a&&"bigint"==typeof a.r&&"bigint"==typeof a.s){let{r:b,s:c}=a;j=new n(b,c)}else throw Error("PARSE");i=h.fromHex(e)}catch(a){if("PARSE"===a.message)throw Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(k&&j.hasHighS())return!1;l&&(c=b.hash(c));let{r:m,s:o}=j,p=q(c),r=br(o,d),s=g(p*r),t=g(m*r),v=h.BASE.multiplyAndAddUnsafe(i,s,t)?.toAffine();return!!v&&g(v.x)===m},ProjectivePoint:h,Signature:n,utils:{isValidPrivateKey(a){try{return i(a),!0}catch(a){return!1}},normPrivateKeyToScalar:i,randomPrivateKey:()=>{let a=bv(b.n);return function(a,b,c=!1){let d=a.length,e=bu(b),f=bv(b);if(d<16||d<f||d>1024)throw Error(`expected ${f}-1024 bytes of input, got ${d}`);let g=bp(c?a6(a):a7(a),b-bj)+bj;return c?a9(g,e):a8(g,e)}(b.randomBytes(a),b.n)},precompute:(a=8,b=h.BASE)=>(b._setWindowSize(a),b.multiply(BigInt(3)),b)}}})({...a,hash:b,hmac:(a,...c)=>bx(b,a,function(...a){let b=new Uint8Array(a.reduce((a,b)=>a+b.length,0)),c=0;return a.forEach(a=>{if(!(a instanceof Uint8Array))throw Error("Uint8Array expected");b.set(a,c),c+=a.length}),b}(...c)),randomBytes:aA});return Object.freeze({...c(b),create:c})}({a:BigInt(0),b:BigInt(7),Fp:bM,n:bI,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:a=>{let b=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),c=-bJ*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),d=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),e=BigInt("0x100000000000000000000000000000000"),f=bL(b*a,bI),g=bL(-c*a,bI),h=bp(a-f*b-g*d,bI),i=bp(-f*c-g*b,bI),j=h>e,k=i>e;if(j&&(h=bI-h),k&&(i=bI-i),h>e||i>e)throw Error("splitScalar: Endomorphism failed, k="+a);return{k1neg:j,k1:h,k2neg:k,k2:i}}}},a_),bO=(BigInt(0),bN.ProjectivePoint,BigInt(0)),bP=BigInt(1);function bQ(a,b){switch(typeof a){case"bigint":return a;case"number":return J(Number.isInteger(a),"underflow",b||"value",a),J(a>=-0x1fffffffffffff&&a<=0x1fffffffffffff,"overflow",b||"value",a),BigInt(a);case"string":try{if(""===a)throw Error("empty string");if("-"===a[0]&&"-"!==a[1])return-BigInt(a.substring(1));return BigInt(a)}catch(c){J(!1,`invalid BigNumberish string: ${c.message}`,b||"value",a)}}J(!1,"invalid BigNumberish value",b||"value",a)}function bR(a,b){let c=bQ(a,b);return I(c>=bO,"unsigned value cannot be negative","NUMERIC_FAULT",{fault:"overflow",operation:"getUint",value:a}),c}let bS="0123456789abcdef";function bT(a){if(a instanceof Uint8Array){let b="0x0";for(let c of a)b+=bS[c>>4],b+=bS[15&c];return BigInt(b)}return bQ(a)}function bU(a,b){switch(typeof a){case"bigint":return J(a>=-0x1fffffffffffff&&a<=0x1fffffffffffff,"overflow",b||"value",a),Number(a);case"number":return J(Number.isInteger(a),"underflow",b||"value",a),J(a>=-0x1fffffffffffff&&a<=0x1fffffffffffff,"overflow",b||"value",a),a;case"string":try{if(""===a)throw Error("empty string");return bU(BigInt(a),b)}catch(c){J(!1,`invalid numeric string: ${c.message}`,b||"value",a)}}J(!1,"invalid numeric value",b||"value",a)}function bV(a,b){let c=bR(a,"value").toString(16);if(null==b)c.length%2&&(c="0"+c);else{let d=bU(b,"width");for(I(2*d>=c.length,`value exceeds width (${d} bytes)`,"NUMERIC_FAULT",{operation:"toBeHex",fault:"overflow",value:a});c.length<2*d;)c="0"+c}return"0x"+c}function bW(a){let b=bR(a,"value");if(b===bO)return new Uint8Array([]);let c=b.toString(16);c.length%2&&(c="0"+c);let d=new Uint8Array(c.length/2);for(let a=0;a<d.length;a++){let b=2*a;d[a]=parseInt(c.substring(b,b+2),16)}return d}let bX="0x0000000000000000000000000000000000000000000000000000000000000000",bY=BigInt(0),bZ=BigInt(1),b$=BigInt(2),b_=BigInt(27),b0=BigInt(28),b1=BigInt(35),b2={};class b3{#a;#b;#c;#d;get r(){return this.#a}set r(a){J(32===V(a),"invalid r","value",a),this.#a=T(a)}get s(){return J(8>parseInt(this.#b.substring(0,3)),"non-canonical s; use ._s","s",this.#b),this.#b}set s(a){J(32===V(a),"invalid s","value",a),this.#b=T(a)}get _s(){return this.#b}isValid(){return 8>parseInt(this.#b.substring(0,3))}get v(){return this.#c}set v(a){let b=bU(a,"value");J(27===b||28===b,"invalid v","v",a),this.#c=b}get networkV(){return this.#d}get legacyChainId(){let a=this.networkV;return null==a?null:b3.getChainId(a)}get yParity(){return+(27!==this.v)}get yParityAndS(){let a=O(this.s);return this.yParity&&(a[0]|=128),T(a)}get compactSerialized(){return U([this.r,this.yParityAndS])}get serialized(){return U([this.r,this.s,this.yParity?"0x1c":"0x1b"])}constructor(a,b,c,d){M(a,b2,"Signature"),this.#a=b,this.#b=c,this.#c=d,this.#d=null}[Symbol.for("nodejs.util.inspect.custom")](){return`Signature { r: "${this.r}", s: "${this._s}"${this.isValid()?"":', valid: "false"'}, yParity: ${this.yParity}, networkV: ${this.networkV} }`}clone(){let a=new b3(b2,this.r,this._s,this.v);return this.networkV&&(a.#d=this.networkV),a}toJSON(){let a=this.networkV;return{_type:"signature",networkV:null!=a?a.toString():null,r:this.r,s:this._s,v:this.v}}static getChainId(a){let b=bQ(a,"v");return b==b_||b==b0?bY:(J(b>=b1,"invalid EIP-155 v","v",a),(b-b1)/b$)}static getChainIdV(a,b){return bQ(a)*b$+BigInt(35+b-27)}static getNormalizedV(a){let b=bQ(a);return b===bY||b===b_?27:b===bZ||b===b0?28:(J(b>=b1,"invalid v","v",a),b&bZ?27:28)}static from(a){function b(b,c){J(b,c,"signature",a)}if(null==a)return new b3(b2,bX,bX,27);if("string"==typeof a){let c=O(a,"signature");if(64===c.length){let a=T(c.slice(0,32)),b=c.slice(32,64),d=128&b[0]?28:27;return b[0]&=127,new b3(b2,a,T(b),d)}if(65===c.length){let a=T(c.slice(0,32)),b=T(c.slice(32,64)),d=b3.getNormalizedV(c[64]);return new b3(b2,a,b,d)}b(!1,"invalid raw signature length")}if(a instanceof b3)return a.clone();let c=a.r;b(null!=c,"missing r");let d=X(bW(c),32),e=function(a,c){if(null!=a)return X(bW(a),32);if(null!=c){b(Q(c,32),"invalid yParityAndS");let a=O(c);return a[0]&=127,T(a)}b(!1,"missing s")}(a.s,a.yParityAndS),{networkV:f,v:g}=function(a,c,d){if(null!=a){let b=bQ(a);return{networkV:b>=b1?b:void 0,v:b3.getNormalizedV(b)}}if(null!=c)return b(Q(c,32),"invalid yParityAndS"),{v:128&O(c)[0]?28:27};if(null!=d){switch(bU(d,"sig.yParity")){case 0:return{v:27};case 1:return{v:28}}b(!1,"invalid yParity")}b(!1,"missing v")}(a.v,a.yParityAndS,a.yParity),h=new b3(b2,d,e,g);return f&&(h.#d=f),b(null==a.yParity||bU(a.yParity,"sig.yParity")===h.yParity,"yParity mismatch"),b(null==a.yParityAndS||a.yParityAndS===h.yParityAndS,"yParityAndS mismatch"),h}}class b4{#e;constructor(a){J(32===V(a),"invalid private key","privateKey","[REDACTED]"),this.#e=T(a)}get privateKey(){return this.#e}get publicKey(){return b4.computePublicKey(this.#e)}get compressedPublicKey(){return b4.computePublicKey(this.#e,!0)}sign(a){J(32===V(a),"invalid digest length","digest",a);let b=bN.sign(P(a),P(this.#e),{lowS:!0});return b3.from({r:bV(b.r,32),s:bV(b.s,32),v:b.recovery?28:27})}computeSharedSecret(a){let b=b4.computePublicKey(a);return T(bN.getSharedSecret(P(this.#e),O(b),!1))}static computePublicKey(a,b){let c=O(a,"key");if(32===c.length)return T(bN.getPublicKey(c,!!b));if(64===c.length){let a=new Uint8Array(65);a[0]=4,a.set(c,1),c=a}return T(bN.ProjectivePoint.fromHex(c).toRawBytes(b))}static recoverPublicKey(a,b){J(32===V(a),"invalid digest length","digest",a);let c=b3.from(b),d=bN.Signature.fromCompact(P(U([c.r,c.s]))),e=(d=d.addRecoveryBit(c.yParity)).recoverPublicKey(P(a));return J(null!=e,"invalid signature for digest","signature",b),"0x"+e.toHex(!1)}static addPoints(a,b,c){let d=bN.ProjectivePoint.fromHex(b4.computePublicKey(a).substring(2)),e=bN.ProjectivePoint.fromHex(b4.computePublicKey(b).substring(2));return"0x"+d.add(e).toHex(!!c)}}let b5=!1,b6=function(a){return new Uint8Array((0,C.randomBytes)(a))},b7=b6;function b8(a){return b7(a)}b8._=b6,b8.lock=function(){b5=!0},b8.register=function(a){if(b5)throw Error("randomBytes is locked");b7=a},Object.freeze(b8);let b9=BigInt(0x100000000-1),ca=BigInt(32),[cb,cc,cd]=[[],[],[]],ce=BigInt(0),cf=BigInt(1),cg=BigInt(2),ch=BigInt(7),ci=BigInt(256),cj=BigInt(113);for(let a=0,b=cf,c=1,d=0;a<24;a++){[c,d]=[d,(2*c+3*d)%5],cb.push(2*(5*d+c)),cc.push((a+1)*(a+2)/2%64);let e=ce;for(let a=0;a<7;a++)(b=(b<<cf^(b>>ch)*cj)%ci)&cg&&(e^=cf<<(cf<<BigInt(a))-cf);cd.push(e)}let[ck,cl]=function(a,b=!1){let c=new Uint32Array(a.length),d=new Uint32Array(a.length);for(let e=0;e<a.length;e++){let{h:f,l:g}=function(a,b=!1){return b?{h:Number(a&b9),l:Number(a>>ca&b9)}:{h:0|Number(a>>ca&b9),l:0|Number(a&b9)}}(a[e],b);[c[e],d[e]]=[f,g]}return[c,d]}(cd,!0),cm=(a,b,c)=>c>32?((a,b,c)=>b<<c-32|a>>>64-c)(a,b,c):((a,b,c)=>a<<c|b>>>32-c)(a,b,c),cn=(a,b,c)=>c>32?((a,b,c)=>a<<c-32|b>>>64-c)(a,b,c):((a,b,c)=>b<<c|a>>>32-c)(a,b,c);class co extends aw{constructor(a,b,c,d=!1,e=24){if(super(),this.blockLen=a,this.suffix=b,this.outputLen=c,this.enableXOF=d,this.rounds=e,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,ai(c),0>=this.blockLen||this.blockLen>=200)throw Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=aq(this.state)}keccak(){!function(a,b=24){let c=new Uint32Array(10);for(let d=24-b;d<24;d++){for(let b=0;b<10;b++)c[b]=a[b]^a[b+10]^a[b+20]^a[b+30]^a[b+40];for(let b=0;b<10;b+=2){let d=(b+8)%10,e=(b+2)%10,f=c[e],g=c[e+1],h=cm(f,g,1)^c[d],i=cn(f,g,1)^c[d+1];for(let c=0;c<50;c+=10)a[b+c]^=h,a[b+c+1]^=i}let b=a[2],e=a[3];for(let c=0;c<24;c++){let d=cc[c],f=cm(b,e,d),g=cn(b,e,d),h=cb[c];b=a[h],e=a[h+1],a[h]=f,a[h+1]=g}for(let b=0;b<50;b+=10){for(let d=0;d<10;d++)c[d]=a[b+d];for(let d=0;d<10;d++)a[b+d]^=~c[(d+2)%10]&c[(d+4)%10]}a[0]^=ck[d],a[1]^=cl[d]}c.fill(0)}(this.state32,this.rounds),this.posOut=0,this.pos=0}update(a){al(this);let{blockLen:b,state:c}=this,d=(a=av(a)).length;for(let e=0;e<d;){let f=Math.min(b-this.pos,d-e);for(let b=0;b<f;b++)c[this.pos++]^=a[e++];this.pos===b&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;let{state:a,suffix:b,pos:c,blockLen:d}=this;a[c]^=b,(128&b)!=0&&c===d-1&&this.keccak(),a[d-1]^=128,this.keccak()}writeInto(a){al(this,!1),aj(a),this.finish();let b=this.state,{blockLen:c}=this;for(let d=0,e=a.length;d<e;){this.posOut>=c&&this.keccak();let f=Math.min(c-this.posOut,e-d);a.set(b.subarray(this.posOut,this.posOut+f),d),this.posOut+=f,d+=f}return a}xofInto(a){if(!this.enableXOF)throw Error("XOF is not possible for this instance");return this.writeInto(a)}xof(a){return ai(a),this.xofInto(new Uint8Array(a))}digestInto(a){if(am(a,this),this.finished)throw Error("digest() was already called");return this.writeInto(a),this.destroy(),a}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(a){let{blockLen:b,suffix:c,outputLen:d,rounds:e,enableXOF:f}=this;return a||(a=new co(b,c,d,f,e)),a.state32.set(this.state32),a.pos=this.pos,a.posOut=this.posOut,a.finished=this.finished,a.rounds=e,a.suffix=c,a.outputLen=d,a.enableXOF=f,a.destroyed=this.destroyed,a}}let cp=az(()=>new co(136,1,32)),cq=!1,cr=function(a){return cp(a)},cs=cr;function ct(a){let b=O(a,"data");return T(cs(b))}ct._=cr,ct.lock=function(){cq=!0},ct.register=function(a){if(cq)throw TypeError("keccak256 is locked");cs=a},Object.freeze(ct);let cu=BigInt(0),cv=BigInt(36);function cw(a){let b=(a=a.toLowerCase()).substring(2).split(""),c=new Uint8Array(40);for(let a=0;a<40;a++)c[a]=b[a].charCodeAt(0);let d=O(ct(c));for(let a=0;a<40;a+=2)d[a>>1]>>4>=8&&(b[a]=b[a].toUpperCase()),(15&d[a>>1])>=8&&(b[a+1]=b[a+1].toUpperCase());return"0x"+b.join("")}let cx={};for(let a=0;a<10;a++)cx[String(a)]=String(a);for(let a=0;a<26;a++)cx[String.fromCharCode(65+a)]=String(10+a);let cy=function(){let a={};for(let b=0;b<36;b++)a["0123456789abcdefghijklmnopqrstuvwxyz"[b]]=BigInt(b);return a}();function cz(a){if(J("string"==typeof a,"invalid address","address",a),a.match(/^(0x)?[0-9a-fA-F]{40}$/)){a.startsWith("0x")||(a="0x"+a);let b=cw(a);return J(!a.match(/([A-F].*[a-f])|([a-f].*[A-F])/)||b===a,"bad address checksum","address",a),b}if(a.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){J(a.substring(2,4)===function(a){let b=(a=(a=a.toUpperCase()).substring(4)+a.substring(0,2)+"00").split("").map(a=>cx[a]).join("");for(;b.length>=15;){let a=b.substring(0,15);b=parseInt(a,10)%97+b.substring(a.length)}let c=String(98-parseInt(b,10)%97);for(;c.length<2;)c="0"+c;return c}(a),"bad icap checksum","address",a);let b=(function(a){a=a.toLowerCase();let b=cu;for(let c=0;c<a.length;c++)b=b*cv+cy[a[c]];return b})(a.substring(4)).toString(16);for(;b.length<40;)b="0"+b;return cw("0x"+b)}J(!1,"invalid address","address",a)}async function cA(a,b){let c=await b;return(null==c||"0x0000000000000000000000000000000000000000"===c)&&(I("string"!=typeof a,"unconfigured name","UNCONFIGURED_NAME",{value:a}),J(!1,"invalid AddressLike value; did not resolve to a value address","target",a)),cz(c)}function cB(a,b){return"string"==typeof a?a.match(/^0x[0-9a-f]{40}$/i)?cz(a):(I(null!=b,"ENS resolution requires a provider","UNSUPPORTED_OPERATION",{operation:"resolveName"}),cA(a,b.resolveName(a))):a&&"function"==typeof a.getAddress?cA(a,a.getAddress()):a&&"function"==typeof a.then?cA(a,a):void J(!1,"unsupported addressable value","target",a)}let cC="0x0000000000000000000000000000000000000000";function cD(a,b,c){let d=0;for(let e=0;e<c;e++)d=256*d+a[b+e];return d}function cE(a,b,c,d){let e=[];for(;c<b+1+d;){let f=cF(a,c);e.push(f.result),I((c+=f.consumed)<=b+1+d,"child data too short","BUFFER_OVERRUN",{buffer:a,length:d,offset:b})}return{consumed:1+d,result:e}}function cF(a,b){I(0!==a.length,"data too short","BUFFER_OVERRUN",{buffer:a,length:0,offset:1});let c=b=>{I(b<=a.length,"data short segment too short","BUFFER_OVERRUN",{buffer:a,length:a.length,offset:b})};if(a[b]>=248){let d=a[b]-247;c(b+1+d);let e=cD(a,b+1,d);return c(b+1+d+e),cE(a,b,b+1+d,d+e)}if(a[b]>=192){let d=a[b]-192;return c(b+1+d),cE(a,b,b+1,d)}if(a[b]>=184){let d=a[b]-183;c(b+1+d);let e=cD(a,b+1,d);c(b+1+d+e);let f=T(a.slice(b+1+d,b+1+d+e));return{consumed:1+d+e,result:f}}if(a[b]>=128){let d=a[b]-128;c(b+1+d);let e=T(a.slice(b+1,b+1+d));return{consumed:1+d,result:e}}return{consumed:1,result:function(a){let b=a.toString(16);for(;b.length<2;)b="0"+b;return"0x"+b}(a[b])}}function cG(a){let b=O(a,"data"),c=cF(b,0);return J(c.consumed===b.length,"unexpected junk after rlp payload","data",a),c.result}function cH(a){let b=[];for(;a;)b.unshift(255&a),a>>=8;return b}let cI="0123456789abcdef";function cJ(a){let b="0x";for(let c of function a(b){if(Array.isArray(b)){let c=[];if(b.forEach(function(b){c=c.concat(a(b))}),c.length<=55)return c.unshift(192+c.length),c;let d=cH(c.length);return d.unshift(247+d.length),d.concat(c)}let c=Array.prototype.slice.call(O(b,"object"));if(1===c.length&&c[0]<=127)return c;if(c.length<=55)return c.unshift(128+c.length),c;let d=cH(c.length);return d.unshift(183+d.length),d.concat(c)}(a))b+=cI[c>>4],b+=cI[15&c];return b}function cK(a,b){return{address:cz(a),storageKeys:b.map((a,b)=>(J(Q(a,32),"invalid slot",`storageKeys[${b}]`,a),a.toLowerCase()))}}function cL(a){if(Array.isArray(a))return a.map((b,c)=>Array.isArray(b)?(J(2===b.length,"invalid slot set",`value[${c}]`,b),cK(b[0],b[1])):(J(null!=b&&"object"==typeof b,"invalid address-slot set","value",a),cK(b.address,b.storageKeys)));J(null!=a&&"object"==typeof a,"invalid access list","value",a);let b=Object.keys(a).map(b=>{let c=a[b].reduce((a,b)=>(a[b]=!0,a),{});return cK(b,Object.keys(c).sort())});return b.sort((a,b)=>a.address.localeCompare(b.address)),b}function cM(a){return cz(ct("0x"+("string"==typeof a?b4.computePublicKey(a,!1):a.publicKey).substring(4)).substring(26))}let cN=BigInt(0),cO=BigInt(2),cP=BigInt(27),cQ=BigInt(28),cR=BigInt(35),cS=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");function cT(a,b){let c=a.toString(16);for(;c.length<2;)c="0"+c;return"0x"+(c+=ac(b).substring(4))}function cU(a){return"0x"===a?null:cz(a)}function cV(a,b){try{return cL(a)}catch(c){J(!1,c.message,b,a)}}function cW(a,b){return"0x"===a?0:bU(a,b)}function cX(a,b){if("0x"===a)return cN;let c=bQ(a,b);return J(c<=cS,"value exceeds uint size",b,c),c}function cY(a,b){let c=bQ(a,"value"),d=bW(c);return J(d.length<=32,"value too large",`tx.${b}`,c),d}function cZ(a){return cL(a).map(a=>[a.address,a.storageKeys])}function c$(a,b){let c;try{if(c=cW(b[0],"yParity"),0!==c&&1!==c)throw Error("bad yParity")}catch(a){J(!1,"invalid yParity","yParity",b[0])}let d=X(b[1],32),e=X(b[2],32);a.signature=b3.from({r:d,s:e,yParity:c})}class c_{#f;#g;#h;#i;#j;#k;#l;#m;#n;#o;#p;#q;#r;#s;#t;#u;#v;get type(){return this.#f}set type(a){switch(a){case null:this.#f=null;break;case 0:case"legacy":this.#f=0;break;case 1:case"berlin":case"eip-2930":this.#f=1;break;case 2:case"london":case"eip-1559":this.#f=2;break;case 3:case"cancun":case"eip-4844":this.#f=3;break;case 4:case"pectra":case"eip-7702":this.#f=4;break;default:J(!1,"unsupported transaction type","type",a)}}get typeName(){switch(this.type){case 0:return"legacy";case 1:return"eip-2930";case 2:return"eip-1559";case 3:return"eip-4844";case 4:return"eip-7702"}return null}get to(){let a=this.#g;return null==a&&3===this.type?cC:a}set to(a){this.#g=null==a?null:cz(a)}get nonce(){return this.#i}set nonce(a){this.#i=bU(a,"value")}get gasLimit(){return this.#j}set gasLimit(a){this.#j=bQ(a)}get gasPrice(){let a=this.#k;return null==a&&(0===this.type||1===this.type)?cN:a}set gasPrice(a){this.#k=null==a?null:bQ(a,"gasPrice")}get maxPriorityFeePerGas(){let a=this.#l;return null==a?2===this.type||3===this.type?cN:null:a}set maxPriorityFeePerGas(a){this.#l=null==a?null:bQ(a,"maxPriorityFeePerGas")}get maxFeePerGas(){let a=this.#m;return null==a?2===this.type||3===this.type?cN:null:a}set maxFeePerGas(a){this.#m=null==a?null:bQ(a,"maxFeePerGas")}get data(){return this.#h}set data(a){this.#h=T(a)}get value(){return this.#n}set value(a){this.#n=bQ(a,"value")}get chainId(){return this.#o}set chainId(a){this.#o=bQ(a)}get signature(){return this.#p||null}set signature(a){this.#p=null==a?null:b3.from(a)}get accessList(){let a=this.#q||null;return null==a?1===this.type||2===this.type||3===this.type?[]:null:a}set accessList(a){this.#q=null==a?null:cL(a)}get authorizationList(){let a=this.#v||null;return null==a&&4===this.type?[]:a}set authorizationList(a){this.#v=null==a?null:a.map(a=>({address:cz(a.address),nonce:bQ(null!=a.nonce?a.nonce:0),chainId:bQ(null!=a.chainId?a.chainId:0),signature:b3.from(a.signature)}))}get maxFeePerBlobGas(){let a=this.#r;return null==a&&3===this.type?cN:a}set maxFeePerBlobGas(a){this.#r=null==a?null:bQ(a,"maxFeePerBlobGas")}get blobVersionedHashes(){let a=this.#s;return null==a&&3===this.type?[]:a}set blobVersionedHashes(a){if(null!=a){J(Array.isArray(a),"blobVersionedHashes must be an Array","value",a),a=a.slice();for(let b=0;b<a.length;b++)J(Q(a[b],32),"invalid blobVersionedHash",`value[${b}]`,a[b])}this.#s=a}get blobs(){return null==this.#u?null:this.#u.map(a=>Object.assign({},a))}set blobs(a){if(null==a){this.#u=null;return}let b=[],c=[];for(let d=0;d<a.length;d++){let e=a[d];if(R(e)){I(this.#t,"adding a raw blob requires a KZG library","UNSUPPORTED_OPERATION",{operation:"set blobs()"});let a=O(e);if(J(a.length<=131072,"blob is too large",`blobs[${d}]`,e),131072!==a.length){let b=new Uint8Array(131072);b.set(a),a=b}let f=this.#t.blobToKzgCommitment(a),g=T(this.#t.computeBlobKzgProof(a,f));b.push({data:T(a),commitment:T(f),proof:g}),c.push(cT(1,f))}else{let a=T(e.commitment);b.push({data:T(e.data),commitment:a,proof:T(e.proof)}),c.push(cT(1,a))}}this.#u=b,this.#s=c}get kzg(){return this.#t}set kzg(a){if(null==a)this.#t=null;else this.#t={blobToKzgCommitment:b=>{if("computeBlobProof"in a){if("blobToKzgCommitment"in a&&"function"==typeof a.blobToKzgCommitment)return O(a.blobToKzgCommitment(T(b)))}else if("blobToKzgCommitment"in a&&"function"==typeof a.blobToKzgCommitment)return O(a.blobToKzgCommitment(b));if("blobToKZGCommitment"in a&&"function"==typeof a.blobToKZGCommitment)return O(a.blobToKZGCommitment(T(b)));J(!1,"unsupported KZG library","kzg",a)},computeBlobKzgProof:(b,c)=>"computeBlobProof"in a&&"function"==typeof a.computeBlobProof?O(a.computeBlobProof(T(b),T(c))):"computeBlobKzgProof"in a&&"function"==typeof a.computeBlobKzgProof?a.computeBlobKzgProof(b,c):"computeBlobKZGProof"in a&&"function"==typeof a.computeBlobKZGProof?O(a.computeBlobKZGProof(T(b),T(c))):void J(!1,"unsupported KZG library","kzg",a)}}constructor(){this.#f=null,this.#g=null,this.#i=0,this.#j=cN,this.#k=null,this.#l=null,this.#m=null,this.#h="0x",this.#n=cN,this.#o=cN,this.#p=null,this.#q=null,this.#r=null,this.#s=null,this.#t=null,this.#u=null,this.#v=null}get hash(){return null==this.signature?null:ct(this.#w(!0,!1))}get unsignedHash(){return ct(this.unsignedSerialized)}get from(){var a,b;return null==this.signature?null:(a=this.unsignedHash,b=this.signature,cM(b4.recoverPublicKey(a,b)))}get fromPublicKey(){return null==this.signature?null:b4.recoverPublicKey(this.unsignedHash,this.signature)}isSigned(){return null!=this.signature}#w(a,b){I(!a||null!=this.signature,"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized","UNSUPPORTED_OPERATION",{operation:".serialized"});let c=a?this.signature:null;switch(this.inferType()){case 0:return function(a,b){let c=[cY(a.nonce,"nonce"),cY(a.gasPrice||0,"gasPrice"),cY(a.gasLimit,"gasLimit"),a.to||"0x",cY(a.value,"value"),a.data],d=cN;if(a.chainId!=cN)d=bQ(a.chainId,"tx.chainId"),J(!b||null==b.networkV||b.legacyChainId===d,"tx.chainId/sig.v mismatch","sig",b);else if(a.signature){let b=a.signature.legacyChainId;null!=b&&(d=b)}if(!b)return d!==cN&&(c.push(bW(d)),c.push("0x"),c.push("0x")),cJ(c);let e=BigInt(27+b.yParity);return d!==cN?e=b3.getChainIdV(d,b.v):BigInt(b.v)!==e&&J(!1,"tx.chainId/sig.v mismatch","sig",b),c.push(bW(e)),c.push(bW(b.r)),c.push(bW(b.s)),cJ(c)}(this,c);case 1:let d=[cY(this.chainId,"chainId"),cY(this.nonce,"nonce"),cY(this.gasPrice||0,"gasPrice"),cY(this.gasLimit,"gasLimit"),this.to||"0x",cY(this.value,"value"),this.data,cZ(this.accessList||[])];return c&&(d.push(cY(c.yParity,"recoveryParam")),d.push(bW(c.r)),d.push(bW(c.s))),U(["0x01",cJ(d)]);case 2:let e=[cY(this.chainId,"chainId"),cY(this.nonce,"nonce"),cY(this.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),cY(this.maxFeePerGas||0,"maxFeePerGas"),cY(this.gasLimit,"gasLimit"),this.to||"0x",cY(this.value,"value"),this.data,cZ(this.accessList||[])];return c&&(e.push(cY(c.yParity,"yParity")),e.push(bW(c.r)),e.push(bW(c.s))),U(["0x02",cJ(e)]);case 3:return function(a,b,c){let d=[cY(a.chainId,"chainId"),cY(a.nonce,"nonce"),cY(a.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),cY(a.maxFeePerGas||0,"maxFeePerGas"),cY(a.gasLimit,"gasLimit"),a.to||cC,cY(a.value,"value"),a.data,cZ(a.accessList||[]),cY(a.maxFeePerBlobGas||0,"maxFeePerBlobGas"),function(a,b){J(Array.isArray(a),`invalid ${b}`,"value",a);for(let b=0;b<a.length;b++)J(Q(a[b],32),"invalid ${ param } hash",`value[${b}]`,a[b]);return a}(a.blobVersionedHashes||[],"blobVersionedHashes")];return b&&(d.push(cY(b.yParity,"yParity")),d.push(bW(b.r)),d.push(bW(b.s)),c)?U(["0x03",cJ([d,c.map(a=>a.data),c.map(a=>a.commitment),c.map(a=>a.proof)])]):U(["0x03",cJ(d)])}(this,c,b?this.blobs:null);case 4:let f=[cY(this.chainId,"chainId"),cY(this.nonce,"nonce"),cY(this.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),cY(this.maxFeePerGas||0,"maxFeePerGas"),cY(this.gasLimit,"gasLimit"),this.to||"0x",cY(this.value,"value"),this.data,cZ(this.accessList||[]),(this.authorizationList||[]).map(a=>[cY(a.chainId,"chainId"),a.address,cY(a.nonce,"nonce"),cY(a.signature.yParity,"yParity"),bW(a.signature.r),bW(a.signature.s)])];return c&&(f.push(cY(c.yParity,"yParity")),f.push(bW(c.r)),f.push(bW(c.s))),U(["0x04",cJ(f)])}I(!1,"unsupported transaction type","UNSUPPORTED_OPERATION",{operation:".serialized"})}get serialized(){return this.#w(!0,!0)}get unsignedSerialized(){return this.#w(!1,!1)}inferType(){let a=this.inferTypes();return a.indexOf(2)>=0?2:a.pop()}inferTypes(){let a=null!=this.gasPrice,b=null!=this.maxFeePerGas||null!=this.maxPriorityFeePerGas,c=null!=this.accessList,d=null!=this.#r||this.#s;null!=this.maxFeePerGas&&null!=this.maxPriorityFeePerGas&&I(this.maxFeePerGas>=this.maxPriorityFeePerGas,"priorityFee cannot be more than maxFee","BAD_DATA",{value:this}),I(!b||0!==this.type&&1!==this.type,"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas","BAD_DATA",{value:this}),I(0!==this.type||!c,"legacy transaction cannot have accessList","BAD_DATA",{value:this});let e=[];return null!=this.type?e.push(this.type):this.authorizationList&&this.authorizationList.length?e.push(4):b?e.push(2):a?(e.push(1),c||e.push(0)):c?(e.push(1),e.push(2)):(d&&this.to||(e.push(0),e.push(1),e.push(2)),e.push(3)),e.sort(),e}isLegacy(){return 0===this.type}isBerlin(){return 1===this.type}isLondon(){return 2===this.type}isCancun(){return 3===this.type}clone(){return c_.from(this)}toJSON(){let a=a=>null==a?null:a.toString();return{type:this.type,to:this.to,data:this.data,nonce:this.nonce,gasLimit:a(this.gasLimit),gasPrice:a(this.gasPrice),maxPriorityFeePerGas:a(this.maxPriorityFeePerGas),maxFeePerGas:a(this.maxFeePerGas),value:a(this.value),chainId:a(this.chainId),sig:this.signature?this.signature.toJSON():null,accessList:this.accessList}}static from(a){if(null==a)return new c_;if("string"==typeof a){let b=O(a);if(b[0]>=127)return c_.from(function(a){let b=cG(a);J(Array.isArray(b)&&(9===b.length||6===b.length),"invalid field count for legacy transaction","data",a);let c={type:0,nonce:cW(b[0],"nonce"),gasPrice:cX(b[1],"gasPrice"),gasLimit:cX(b[2],"gasLimit"),to:cU(b[3]),value:cX(b[4],"value"),data:T(b[5]),chainId:cN};if(6===b.length)return c;let d=cX(b[6],"v"),e=cX(b[7],"r"),f=cX(b[8],"s");if(e===cN&&f===cN)c.chainId=d;else{let a=(d-cR)/cO;a<cN&&(a=cN),c.chainId=a,J(a!==cN||d===cP||d===cQ,"non-canonical legacy v","v",b[6]),c.signature=b3.from({r:X(b[7],32),s:X(b[8],32),v:d})}return c}(b));switch(b[0]){case 1:return c_.from(function(a){let b=cG(O(a).slice(1));J(Array.isArray(b)&&(8===b.length||11===b.length),"invalid field count for transaction type: 1","data",T(a));let c={type:1,chainId:cX(b[0],"chainId"),nonce:cW(b[1],"nonce"),gasPrice:cX(b[2],"gasPrice"),gasLimit:cX(b[3],"gasLimit"),to:cU(b[4]),value:cX(b[5],"value"),data:T(b[6]),accessList:cV(b[7],"accessList")};return 8===b.length||c$(c,b.slice(8)),c}(b));case 2:return c_.from(function(a){let b=cG(O(a).slice(1));J(Array.isArray(b)&&(9===b.length||12===b.length),"invalid field count for transaction type: 2","data",T(a));let c={type:2,chainId:cX(b[0],"chainId"),nonce:cW(b[1],"nonce"),maxPriorityFeePerGas:cX(b[2],"maxPriorityFeePerGas"),maxFeePerGas:cX(b[3],"maxFeePerGas"),gasPrice:null,gasLimit:cX(b[4],"gasLimit"),to:cU(b[5]),value:cX(b[6],"value"),data:T(b[7]),accessList:cV(b[8],"accessList")};return 9===b.length||c$(c,b.slice(9)),c}(b));case 3:return c_.from(function(a){let b=cG(O(a).slice(1)),c="3",d=null;if(4===b.length&&Array.isArray(b[0])){c="3 (network format)";let a=b[1],e=b[2],f=b[3];J(Array.isArray(a),"invalid network format: blobs not an array","fields[1]",a),J(Array.isArray(e),"invalid network format: commitments not an array","fields[2]",e),J(Array.isArray(f),"invalid network format: proofs not an array","fields[3]",f),J(a.length===e.length,"invalid network format: blobs/commitments length mismatch","fields",b),J(a.length===f.length,"invalid network format: blobs/proofs length mismatch","fields",b),d=[];for(let c=0;c<b[1].length;c++)d.push({data:a[c],commitment:e[c],proof:f[c]});b=b[0]}J(Array.isArray(b)&&(11===b.length||14===b.length),`invalid field count for transaction type: ${c}`,"data",T(a));let e={type:3,chainId:cX(b[0],"chainId"),nonce:cW(b[1],"nonce"),maxPriorityFeePerGas:cX(b[2],"maxPriorityFeePerGas"),maxFeePerGas:cX(b[3],"maxFeePerGas"),gasPrice:null,gasLimit:cX(b[4],"gasLimit"),to:cU(b[5]),value:cX(b[6],"value"),data:T(b[7]),accessList:cV(b[8],"accessList"),maxFeePerBlobGas:cX(b[9],"maxFeePerBlobGas"),blobVersionedHashes:b[10]};d&&(e.blobs=d),J(null!=e.to,`invalid address for transaction type: ${c}`,"data",a),J(Array.isArray(e.blobVersionedHashes),"invalid blobVersionedHashes: must be an array","data",a);for(let b=0;b<e.blobVersionedHashes.length;b++)J(Q(e.blobVersionedHashes[b],32),`invalid blobVersionedHash at index ${b}: must be length 32`,"data",a);return 11===b.length||c$(e,b.slice(11)),e}(b));case 4:return c_.from(function(a){let b=cG(O(a).slice(1));J(Array.isArray(b)&&(10===b.length||13===b.length),"invalid field count for transaction type: 4","data",T(a));let c={type:4,chainId:cX(b[0],"chainId"),nonce:cW(b[1],"nonce"),maxPriorityFeePerGas:cX(b[2],"maxPriorityFeePerGas"),maxFeePerGas:cX(b[3],"maxFeePerGas"),gasPrice:null,gasLimit:cX(b[4],"gasLimit"),to:cU(b[5]),value:cX(b[6],"value"),data:T(b[7]),accessList:cV(b[8],"accessList"),authorizationList:function(a,b){try{if(!Array.isArray(a))throw Error("authorizationList: invalid array");let b=[];for(let c=0;c<a.length;c++){let d=a[c];if(!Array.isArray(d))throw Error(`authorization[${c}]: invalid array`);if(6!==d.length)throw Error(`authorization[${c}]: wrong length`);if(!d[1])throw Error(`authorization[${c}]: null address`);b.push({address:cU(d[1]),nonce:cX(d[2],"nonce"),chainId:cX(d[0],"chainId"),signature:b3.from({yParity:cW(d[3],"yParity"),r:X(d[4],32),s:X(d[5],32)})})}return b}catch(c){J(!1,c.message,b,a)}}(b[9],"authorizationList")};return 10===b.length||c$(c,b.slice(10)),c}(b))}I(!1,"unsupported transaction type","UNSUPPORTED_OPERATION",{operation:"from"})}let b=new c_;return null!=a.type&&(b.type=a.type),null!=a.to&&(b.to=a.to),null!=a.nonce&&(b.nonce=a.nonce),null!=a.gasLimit&&(b.gasLimit=a.gasLimit),null!=a.gasPrice&&(b.gasPrice=a.gasPrice),null!=a.maxPriorityFeePerGas&&(b.maxPriorityFeePerGas=a.maxPriorityFeePerGas),null!=a.maxFeePerGas&&(b.maxFeePerGas=a.maxFeePerGas),null!=a.maxFeePerBlobGas&&(b.maxFeePerBlobGas=a.maxFeePerBlobGas),null!=a.data&&(b.data=a.data),null!=a.value&&(b.value=a.value),null!=a.chainId&&(b.chainId=a.chainId),null!=a.signature&&(b.signature=b3.from(a.signature)),null!=a.accessList&&(b.accessList=a.accessList),null!=a.authorizationList&&(b.authorizationList=a.authorizationList),null!=a.blobVersionedHashes&&(b.blobVersionedHashes=a.blobVersionedHashes),null!=a.kzg&&(b.kzg=a.kzg),null!=a.blobs&&(b.blobs=a.blobs),null!=a.hash&&(J(b.isSigned(),"unsigned transaction cannot define '.hash'","tx",a),J(b.hash===a.hash,"hash mismatch","tx",a)),null!=a.from&&(J(b.isSigned(),"unsigned transaction cannot define '.from'","tx",a),J(b.from.toLowerCase()===(a.from||"").toLowerCase(),"from mismatch","tx",a)),b}}BigInt(0);function c0(a){let b={};for(let c of(a.to&&(b.to=a.to),a.from&&(b.from=a.from),a.data&&(b.data=T(a.data)),"chainId,gasLimit,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,value".split(/,/)))c in a&&null!=a[c]&&(b[c]=bQ(a[c],`request.${c}`));for(let c of"type,nonce".split(/,/))c in a&&null!=a[c]&&(b[c]=bU(a[c],`request.${c}`));return a.accessList&&(b.accessList=cL(a.accessList)),a.authorizationList&&(b.authorizationList=a.authorizationList.slice()),"blockTag"in a&&(b.blockTag=a.blockTag),"enableCcipRead"in a&&(b.enableCcipRead=!!a.enableCcipRead),"customData"in a&&(b.customData=a.customData),"blobVersionedHashes"in a&&a.blobVersionedHashes&&(b.blobVersionedHashes=a.blobVersionedHashes.slice()),"kzg"in a&&(b.kzg=a.kzg),"blobs"in a&&a.blobs&&(b.blobs=a.blobs.map(a=>R(a)?T(a):Object.assign({},a))),b}Symbol.iterator;Symbol.iterator;function c1(a,b){if(a.provider)return a.provider;I(!1,"missing provider","UNSUPPORTED_OPERATION",{operation:b})}async function c2(a,b){let c=c0(b);if(null!=c.to&&(c.to=cB(c.to,a)),null!=c.from){let b=c.from;c.from=Promise.all([a.getAddress(),cB(b,a)]).then(([a,b])=>(J(a.toLowerCase()===b.toLowerCase(),"transaction from mismatch","tx.from",b),a))}else c.from=a.getAddress();return await E(c)}class c3{provider;constructor(a){F(this,{provider:a||null})}async getNonce(a){return c1(this,"getTransactionCount").getTransactionCount(await this.getAddress(),a)}async populateCall(a){return await c2(this,a)}async populateTransaction(a){let b=c1(this,"populateTransaction"),c=await c2(this,a);null==c.nonce&&(c.nonce=await this.getNonce("pending")),null==c.gasLimit&&(c.gasLimit=await this.estimateGas(c));let d=await this.provider.getNetwork();null!=c.chainId?J(bQ(c.chainId)===d.chainId,"transaction chainId mismatch","tx.chainId",a.chainId):c.chainId=d.chainId;let e=null!=c.maxFeePerGas||null!=c.maxPriorityFeePerGas;if(null!=c.gasPrice&&(2===c.type||e)?J(!1,"eip-1559 transaction do not support gasPrice","tx",a):(0===c.type||1===c.type)&&e&&J(!1,"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas","tx",a),(2===c.type||null==c.type)&&null!=c.maxFeePerGas&&null!=c.maxPriorityFeePerGas)c.type=2;else if(0===c.type||1===c.type){let a=await b.getFeeData();I(null!=a.gasPrice,"network does not support gasPrice","UNSUPPORTED_OPERATION",{operation:"getGasPrice"}),null==c.gasPrice&&(c.gasPrice=a.gasPrice)}else{let a=await b.getFeeData();if(null==c.type)if(null!=a.maxFeePerGas&&null!=a.maxPriorityFeePerGas)if(c.authorizationList&&c.authorizationList.length?c.type=4:c.type=2,null!=c.gasPrice){let a=c.gasPrice;delete c.gasPrice,c.maxFeePerGas=a,c.maxPriorityFeePerGas=a}else null==c.maxFeePerGas&&(c.maxFeePerGas=a.maxFeePerGas),null==c.maxPriorityFeePerGas&&(c.maxPriorityFeePerGas=a.maxPriorityFeePerGas);else null!=a.gasPrice?(I(!e,"network does not support EIP-1559","UNSUPPORTED_OPERATION",{operation:"populateTransaction"}),null==c.gasPrice&&(c.gasPrice=a.gasPrice),c.type=0):I(!1,"failed to get consistent fee data","UNSUPPORTED_OPERATION",{operation:"signer.getFeeData"});else(2===c.type||3===c.type||4===c.type)&&(null==c.maxFeePerGas&&(c.maxFeePerGas=a.maxFeePerGas),null==c.maxPriorityFeePerGas&&(c.maxPriorityFeePerGas=a.maxPriorityFeePerGas))}return await E(c)}async populateAuthorization(a){let b=Object.assign({},a);return null==b.chainId&&(b.chainId=(await c1(this,"getNetwork").getNetwork()).chainId),null==b.nonce&&(b.nonce=await this.getNonce()),b}async estimateGas(a){return c1(this,"estimateGas").estimateGas(await this.populateCall(a))}async call(a){return c1(this,"call").call(await this.populateCall(a))}async resolveName(a){let b=c1(this,"resolveName");return await b.resolveName(a)}async sendTransaction(a){let b=c1(this,"sendTransaction"),c=await this.populateTransaction(a);delete c.from;let d=c_.from(c);return await b.broadcastTransaction(await this.signTransaction(d))}authorize(a){I(!1,"authorization not implemented for this signer","UNSUPPORTED_OPERATION",{operation:"authorize"})}}class c4 extends c3{address;constructor(a,b){super(b),F(this,{address:a})}async getAddress(){return this.address}connect(a){return new c4(this.address,a)}#x(a,b){I(!1,`VoidSigner cannot sign ${a}`,"UNSUPPORTED_OPERATION",{operation:b})}async signTransaction(a){this.#x("transactions","signTransaction")}async signMessage(a){this.#x("messages","signMessage")}async signTypedData(a,b,c){this.#x("typed-data","signTypedData")}}let c5="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",c6=null,c7=BigInt(0),c8=BigInt(58);function c9(a,b,c,d,e){if("BAD_PREFIX"===a||"UNEXPECTED_CONTINUE"===a){let a=0;for(let d=b+1;d<c.length&&c[d]>>6==2;d++)a++;return a}return"OVERRUN"===a?c.length-b-1:0}function da(a,b){J("string"==typeof a,"invalid string value","str",a),null!=b&&(L(b),a=a.normalize(b));let c=[];for(let b=0;b<a.length;b++){let d=a.charCodeAt(b);if(d<128)c.push(d);else if(d<2048)c.push(d>>6|192),c.push(63&d|128);else if((64512&d)==55296){b++;let e=a.charCodeAt(b);J(b<a.length&&(64512&e)==56320,"invalid surrogate pair","str",a);let f=65536+((1023&d)<<10)+(1023&e);c.push(f>>18|240),c.push(f>>12&63|128),c.push(f>>6&63|128),c.push(63&f|128)}else c.push(d>>12|224),c.push(d>>6&63|128),c.push(63&d|128)}return new Uint8Array(c)}Object.freeze({error:function(a,b,c,d,e){J(!1,`invalid codepoint at offset ${b}; ${a}`,"bytes",c)},ignore:c9,replace:function(a,b,c,d,e){return"OVERLONG"===a?(J("number"==typeof e,"invalid bad code point for replacement","badCodepoint",e),d.push(e),0):(d.push(65533),c9(a,b,c,d,e))}});let db=" !#$%&'()*+,-./<=>?@[]^_`{|}~",dc=/^[a-z]*$/i;function dd(a,b){let c=97;return a.reduce((a,d)=>(d===b?c++:d.match(dc)?a.push(String.fromCharCode(c)+d):(c=97,a.push(d)),a),[])}class de{locale;constructor(a){F(this,{locale:a})}split(a){return a.toLowerCase().split(/\s+/g)}join(a){return a.join(" ")}}class df extends de{#h;#y;constructor(a,b,c){super(a),this.#h=b,this.#y=c,this.#z=null}get _data(){return this.#h}_decodeWords(){var a;return J("0"===(a=this.#h)[0],"unsupported auwl data","data",a),function(a,b){for(let c=db.length-1;c>=0;c--)a=a.split(db[c]).join(b.substring(2*c,2*c+2));let c=[],d=a.replace(/(:|([0-9])|([A-Z][a-z]*))/g,(a,b,d,e)=>{if(d)for(let a=parseInt(d);a>=0;a--)c.push(";");else c.push(b.toLowerCase());return""});if(d)throw Error(`leftovers: ${JSON.stringify(d)}`);return dd(dd(c,";"),":")}(a.substring(1+2*db.length),a.substring(1,1+2*db.length))}#z;#A(){if(null==this.#z){let a=this._decodeWords();if(ct(da(a.join("\n")+"\n"))!==this.#y)throw Error(`BIP39 Wordlist for ${this.locale} FAILED`);this.#z=a}return this.#z}getWord(a){let b=this.#A();return J(a>=0&&a<b.length,`invalid word index: ${a}`,"index",a),b[a]}getWordIndex(a){return this.#A().indexOf(a)}}let dg=null;class dh extends df{constructor(){super("en","0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO","0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60")}static wordlist(){return null==dg&&(dg=new dh),dg}}let di=new Uint8Array(32);di.fill(0);let dj=BigInt(-1),dk=BigInt(0),dl=BigInt(1),dm=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),dn=bV(dl,32),dp=bV(dk,32),dq={name:"string",version:"string",chainId:"uint256",verifyingContract:"address",salt:"bytes32"},dr=["name","version","chainId","verifyingContract","salt"];function ds(a){return function(b){return J("string"==typeof b,`invalid domain value for ${JSON.stringify(a)}`,`domain.${a}`,b),b}}let dt={name:ds("name"),version:ds("version"),chainId:function(a){let b=bQ(a,"domain.chainId");if(J(b>=0,"invalid chain ID","domain.chainId",a),Number.isSafeInteger(b))return Number(b);let c=T(R(b)?b:bW(b)).substring(2);for(;c.startsWith("0");)c=c.substring(1);return""===c&&(c="0"),"0x"+c},verifyingContract:function(a){try{return cz(a).toLowerCase()}catch(a){}J(!1,'invalid domain value "verifyingContract"',"domain.verifyingContract",a)},salt:function(a){let b=O(a,"domain.salt");return J(32===b.length,'invalid domain value "salt"',"domain.salt",a),T(b)}};function du(a){{let d=a.match(/^(u?)int(\d+)$/);if(d){var b,c;let e=""===d[1],f=parseInt(d[2]);J(f%8==0&&0!==f&&f<=256&&d[2]===String(f),"invalid numeric width","type",a);let g=(b=dm,c=e?f-1:f,bR(b,"value")&(bP<<BigInt(bU(c,"bits")))-bP),h=e?(g+dl)*dj:dk;return function(b){let c=bQ(b,"value");return J(c>=h&&c<=g,`value out-of-bounds for ${a}`,"value",c),bV(e?function(a,b){let c=bQ(a,"value"),d=BigInt(bU(256,"width")),e=bP<<d-bP;return c<bO?(I((c=-c)<=e,"too low","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:a}),(~c&(bP<<d)-bP)+bP):(I(c<e,"too high","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:a}),c)}(c,0):c,32)}}}{let b=a.match(/^bytes(\d+)$/);if(b){let c=parseInt(b[1]);return J(0!==c&&c<=32&&b[1]===String(c),"invalid bytes width","type",a),function(b){J(O(b).length===c,`invalid length for ${a}`,"value",b);let d=O(b),e=d.length%32;return e?U([d,di.slice(e)]):T(d)}}}switch(a){case"address":return function(a){return X(cz(a),32)};case"bool":return function(a){return a?dn:dp};case"bytes":return function(a){return ct(a)};case"string":return function(a){return ct(da(a))}}return null}function dv(a,b){return`${a}(${b.map(({name:a,type:b})=>b+" "+a).join(",")})`}function dw(a){let b=a.match(/^([^\x5b]*)((\x5b\d*\x5d)*)(\x5b(\d*)\x5d)$/);return b?{base:b[1],index:b[2]+b[4],array:{base:b[1],prefix:b[1]+b[2],count:b[5]?parseInt(b[5]):-1}}:{base:a}}class dx{primaryType;#B;get types(){return JSON.parse(this.#B)}#C;#D;constructor(a){this.#C=new Map,this.#D=new Map;let b=new Map,c=new Map,d=new Map,e={};for(let f in Object.keys(a).forEach(f=>{e[f]=a[f].map(({name:b,type:c})=>{let{base:d,index:e}=dw(c);return"int"!==d||a.int||(d="int256"),"uint"!==d||a.uint||(d="uint256"),{name:b,type:d+(e||"")}}),b.set(f,new Set),c.set(f,[]),d.set(f,new Set)}),this.#B=JSON.stringify(e),e){let d=new Set;for(let g of e[f]){J(!d.has(g.name),`duplicate variable name ${JSON.stringify(g.name)} in ${JSON.stringify(f)}`,"types",a),d.add(g.name);let e=dw(g.type).base;J(e!==f,`circular type reference to ${JSON.stringify(e)}`,"types",a),du(e)||(J(c.has(e),`unknown type ${JSON.stringify(e)}`,"types",a),c.get(e).push(f),b.get(f).add(e))}}let f=Array.from(c.keys()).filter(a=>0===c.get(a).length);for(let[g,h]of(J(0!==f.length,"missing primary type","types",a),J(1===f.length,`ambiguous primary types or unused types: ${f.map(a=>JSON.stringify(a)).join(", ")}`,"types",a),F(this,{primaryType:f[0]}),!function e(f,g){for(let h of(J(!g.has(f),`circular type reference to ${JSON.stringify(f)}`,"types",a),g.add(f),b.get(f)))if(c.has(h))for(let a of(e(h,g),g))d.get(a).add(h);g.delete(f)}(this.primaryType,new Set),d)){let a=Array.from(h);a.sort(),this.#C.set(g,dv(g,e[g])+a.map(a=>dv(a,e[a])).join(""))}}getEncoder(a){let b=this.#D.get(a);return b||(b=this.#E(a),this.#D.set(a,b)),b}#E(a){{let b=du(a);if(b)return b}let b=dw(a).array;if(b){let a=b.prefix,c=this.getEncoder(a);return d=>{J(-1===b.count||b.count===d.length,`array length mismatch; expected length ${b.count}`,"value",d);let e=d.map(c);return this.#C.has(a)&&(e=e.map(ct)),ct(U(e))}}let c=this.types[a];if(c){let b=ct(da(this.#C.get(a)));return a=>{let d=c.map(({name:b,type:c})=>{let d=this.getEncoder(c)(a[b]);return this.#C.has(c)?ct(d):d});return d.unshift(b),U(d)}}J(!1,`unknown type: ${a}`,"type",a)}encodeType(a){let b=this.#C.get(a);return J(b,`unknown type: ${JSON.stringify(a)}`,"name",a),b}encodeData(a,b){return this.getEncoder(a)(b)}hashStruct(a,b){return ct(this.encodeData(a,b))}encode(a){return this.encodeData(this.primaryType,a)}hash(a){return this.hashStruct(this.primaryType,a)}_visit(a,b,c){if(du(a))return c(a,b);let d=dw(a).array;if(d)return J(-1===d.count||d.count===b.length,`array length mismatch; expected length ${d.count}`,"value",b),b.map(a=>this._visit(d.prefix,a,c));let e=this.types[a];if(e)return e.reduce((a,{name:d,type:e})=>(a[d]=this._visit(e,b[d],c),a),{});J(!1,`unknown type: ${a}`,"type",a)}visit(a,b){return this._visit(this.primaryType,a,b)}static from(a){return new dx(a)}static getPrimaryType(a){return dx.from(a).primaryType}static hashStruct(a,b,c){return dx.from(b).hashStruct(a,c)}static hashDomain(a){let b=[];for(let c in a){if(null==a[c])continue;let d=dq[c];J(d,`invalid typed-data domain key: ${JSON.stringify(c)}`,"domain",a),b.push({name:c,type:d})}return b.sort((a,b)=>dr.indexOf(a.name)-dr.indexOf(b.name)),dx.hashStruct("EIP712Domain",{EIP712Domain:b},a)}static encode(a,b,c){return U(["0x1901",dx.hashDomain(a),dx.from(b).hash(c)])}static hash(a,b,c){return ct(dx.encode(a,b,c))}static async resolveNames(a,b,c,d){for(let b in a=Object.assign({},a))null==a[b]&&delete a[b];let e={};a.verifyingContract&&!Q(a.verifyingContract,20)&&(e[a.verifyingContract]="0x");let f=dx.from(b);for(let a in f.visit(c,(a,b)=>("address"!==a||Q(b,20)||(e[b]="0x"),b)),e)e[a]=await d(a);return a.verifyingContract&&e[a.verifyingContract]&&(a.verifyingContract=e[a.verifyingContract]),c=f.visit(c,(a,b)=>"address"===a&&e[b]?e[b]:b),{domain:a,value:c}}static getPayload(a,b,c){dx.hashDomain(a);let d={},e=[];dr.forEach(b=>{let c=a[b];null!=c&&(d[b]=dt[b](c),e.push({name:b,type:dq[b]}))});let f=dx.from(b),g=Object.assign({},b=f.types);return J(null==g.EIP712Domain,"types must not contain EIP712Domain type","types.EIP712Domain",b),g.EIP712Domain=e,f.encode(c),{types:g,domain:d,primaryType:f.primaryType,message:f.visit(c,(a,b)=>{if(a.match(/^bytes(\d*)/))return T(O(b));if(a.match(/^u?int/))return bQ(b).toString();switch(a){case"address":return b.toLowerCase();case"bool":return!!b;case"string":return J("string"==typeof b,"invalid string","value",b),b}J(!1,"unsupported type","type",a)})}}}class dy extends c3{address;#F;constructor(a,b){super(b),J(a&&"function"==typeof a.sign,"invalid private key","privateKey","[ REDACTED ]"),this.#F=a,F(this,{address:cM(this.signingKey.publicKey)})}get signingKey(){return this.#F}get privateKey(){return this.signingKey.privateKey}async getAddress(){return this.address}connect(a){return new dy(this.#F,a)}async signTransaction(a){a=c0(a);let{to:b,from:c}=await E({to:a.to?cB(a.to,this):void 0,from:a.from?cB(a.from,this):void 0});null!=b&&(a.to=b),null!=c&&(a.from=c),null!=a.from&&(J(cz(a.from)===this.address,"transaction from address mismatch","tx.from",a.from),delete a.from);let d=c_.from(a);return d.signature=this.signingKey.sign(d.unsignedHash),d.serialized}async signMessage(a){return this.signMessageSync(a)}signMessageSync(a){var b;return this.signingKey.sign(("string"==typeof(b=a)&&(b=da(b)),ct(U([da("\x19Ethereum Signed Message:\n"),da(String(b.length)),b])))).serialized}authorizeSync(a){J("string"==typeof a.address,"invalid address for authorizeSync","auth.address",a);let b=this.signingKey.sign((J("string"==typeof a.address,"invalid address for hashAuthorization","auth.address",a),ct(U(["0x05",cJ([null!=a.chainId?bW(a.chainId):"0x",cz(a.address),null!=a.nonce?bW(a.nonce):"0x"])]))));return Object.assign({},{address:cz(a.address),nonce:bQ(a.nonce||0),chainId:bQ(a.chainId||0)},{signature:b})}async authorize(a){return a=Object.assign({},a,{address:await cB(a.address,this)}),this.authorizeSync(await this.populateAuthorization(a))}async signTypedData(a,b,c){let d=await dx.resolveNames(a,b,c,async a=>{I(null!=this.provider,"cannot resolve ENS names without a provider","UNSUPPORTED_OPERATION",{operation:"resolveName",info:{name:a}});let b=await this.provider.resolveName(a);return I(null!=b,"unconfigured ENS name","UNCONFIGURED_NAME",{value:a}),b});return this.signingKey.sign(dx.hash(d.domain,b,d.value)).serialized}}let dz=!1,dA=function(a,b,c,d,e){return(0,C.pbkdf2Sync)(a,b,c,d,e)},dB=dA;function dC(a,b,c,d,e){let f=O(a,"password"),g=O(b,"salt");return T(dB(f,g,c,d,e))}function dD(a){return(1<<a)-1<<8-a&255}function dE(a,b){L("NFKD"),null==b&&(b=dh.wordlist());let c=b.split(a);J(c.length%3==0&&c.length>=12&&c.length<=24,"invalid mnemonic length","mnemonic","[ REDACTED ]");let d=new Uint8Array(Math.ceil(11*c.length/8)),e=0;for(let a=0;a<c.length;a++){let f=b.getWordIndex(c[a].normalize("NFKD"));J(f>=0,`invalid mnemonic word at index ${a}`,"mnemonic","[ REDACTED ]");for(let a=0;a<11;a++)f&1<<10-a&&(d[e>>3]|=1<<7-e%8),e++}let f=32*c.length/3,g=dD(c.length/3);return J((O(ac(d.slice(0,f/8)))[0]&g)==(d[d.length-1]&g),"invalid mnemonic checksum","mnemonic","[ REDACTED ]"),T(d.slice(0,f/8))}function dF(a,b){J(a.length%4==0&&a.length>=16&&a.length<=32,"invalid entropy size","entropy","[ REDACTED ]"),null==b&&(b=dh.wordlist());let c=[0],d=11;for(let b=0;b<a.length;b++)d>8?(c[c.length-1]<<=8,c[c.length-1]|=a[b],d-=8):(c[c.length-1]<<=d,c[c.length-1]|=a[b]>>8-d,c.push(a[b]&((1<<8-d)-1&255)),d+=3);let e=a.length/4,f=parseInt(ac(a).substring(2,4),16)&dD(e);return c[c.length-1]<<=e,c[c.length-1]|=f>>8-e,b.join(c.map(a=>b.getWord(a)))}dC._=dA,dC.lock=function(){dz=!0},dC.register=function(a){if(dz)throw Error("pbkdf2 is locked");dB=a},Object.freeze(dC);let dG={};class dH{phrase;password;wordlist;entropy;constructor(a,b,c,d,e){null==d&&(d=""),null==e&&(e=dh.wordlist()),M(a,dG,"Mnemonic"),F(this,{phrase:c,password:d,wordlist:e,entropy:b})}computeSeed(){let a=da("mnemonic"+this.password,"NFKD");return dC(da(this.phrase,"NFKD"),a,2048,64,"sha512")}static fromPhrase(a,b,c){let d=dE(a,c);return a=dF(O(d),c),new dH(dG,d,a,b,c)}static fromEntropy(a,b,c){let d=O(a,"entropy"),e=dF(d,c);return new dH(dG,T(d),e,b,c)}static entropyToPhrase(a,b){return dF(O(a,"entropy"),b)}static phraseToEntropy(a,b){return dE(a,b)}static isValidMnemonic(a,b){try{return dE(a,b),!0}catch(a){}return!1}}var dI=function(a,b,c,d){if("a"===c&&!d)throw TypeError("Private accessor was defined without a getter");if("function"==typeof b?a!==b||!d:!b.has(a))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===c?d:"a"===c?d.call(a):d?d.value:b.get(a)},dJ=function(a,b,c,d,e){if("m"===d)throw TypeError("Private method is not writable");if("a"===d&&!e)throw TypeError("Private accessor was defined without a setter");if("function"==typeof b?a!==b||!e:!b.has(a))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===d?e.call(a,c):e?e.value=c:b.set(a,c),c};let dK={16:10,24:12,32:14},dL=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],dM=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],dN=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],dO=[0xc66363a5,0xf87c7c84,0xee777799,0xf67b7b8d,0xfff2f20d,0xd66b6bbd,0xde6f6fb1,0x91c5c554,0x60303050,0x2010103,0xce6767a9,0x562b2b7d,0xe7fefe19,0xb5d7d762,0x4dababe6,0xec76769a,0x8fcaca45,0x1f82829d,0x89c9c940,0xfa7d7d87,0xeffafa15,0xb25959eb,0x8e4747c9,0xfbf0f00b,0x41adadec,0xb3d4d467,0x5fa2a2fd,0x45afafea,0x239c9cbf,0x53a4a4f7,0xe4727296,0x9bc0c05b,0x75b7b7c2,0xe1fdfd1c,0x3d9393ae,0x4c26266a,0x6c36365a,0x7e3f3f41,0xf5f7f702,0x83cccc4f,0x6834345c,0x51a5a5f4,0xd1e5e534,0xf9f1f108,0xe2717193,0xabd8d873,0x62313153,0x2a15153f,0x804040c,0x95c7c752,0x46232365,0x9dc3c35e,0x30181828,0x379696a1,0xa05050f,0x2f9a9ab5,0xe070709,0x24121236,0x1b80809b,0xdfe2e23d,0xcdebeb26,0x4e272769,0x7fb2b2cd,0xea75759f,0x1209091b,0x1d83839e,0x582c2c74,0x341a1a2e,0x361b1b2d,0xdc6e6eb2,0xb45a5aee,0x5ba0a0fb,0xa45252f6,0x763b3b4d,0xb7d6d661,0x7db3b3ce,0x5229297b,0xdde3e33e,0x5e2f2f71,0x13848497,0xa65353f5,0xb9d1d168,0,0xc1eded2c,0x40202060,0xe3fcfc1f,0x79b1b1c8,0xb65b5bed,0xd46a6abe,0x8dcbcb46,0x67bebed9,0x7239394b,0x944a4ade,0x984c4cd4,0xb05858e8,0x85cfcf4a,0xbbd0d06b,0xc5efef2a,0x4faaaae5,0xedfbfb16,0x864343c5,0x9a4d4dd7,0x66333355,0x11858594,0x8a4545cf,0xe9f9f910,0x4020206,0xfe7f7f81,0xa05050f0,0x783c3c44,0x259f9fba,0x4ba8a8e3,0xa25151f3,0x5da3a3fe,0x804040c0,0x58f8f8a,0x3f9292ad,0x219d9dbc,0x70383848,0xf1f5f504,0x63bcbcdf,0x77b6b6c1,0xafdada75,0x42212163,0x20101030,0xe5ffff1a,0xfdf3f30e,0xbfd2d26d,0x81cdcd4c,0x180c0c14,0x26131335,0xc3ecec2f,0xbe5f5fe1,0x359797a2,0x884444cc,0x2e171739,0x93c4c457,0x55a7a7f2,0xfc7e7e82,0x7a3d3d47,0xc86464ac,0xba5d5de7,0x3219192b,0xe6737395,0xc06060a0,0x19818198,0x9e4f4fd1,0xa3dcdc7f,0x44222266,0x542a2a7e,0x3b9090ab,0xb888883,0x8c4646ca,0xc7eeee29,0x6bb8b8d3,0x2814143c,0xa7dede79,0xbc5e5ee2,0x160b0b1d,0xaddbdb76,0xdbe0e03b,0x64323256,0x743a3a4e,0x140a0a1e,0x924949db,0xc06060a,0x4824246c,0xb85c5ce4,0x9fc2c25d,0xbdd3d36e,0x43acacef,0xc46262a6,0x399191a8,0x319595a4,0xd3e4e437,0xf279798b,0xd5e7e732,0x8bc8c843,0x6e373759,0xda6d6db7,0x18d8d8c,0xb1d5d564,0x9c4e4ed2,0x49a9a9e0,0xd86c6cb4,0xac5656fa,0xf3f4f407,0xcfeaea25,0xca6565af,0xf47a7a8e,0x47aeaee9,0x10080818,0x6fbabad5,0xf0787888,0x4a25256f,0x5c2e2e72,0x381c1c24,0x57a6a6f1,0x73b4b4c7,0x97c6c651,0xcbe8e823,0xa1dddd7c,0xe874749c,0x3e1f1f21,0x964b4bdd,0x61bdbddc,0xd8b8b86,0xf8a8a85,0xe0707090,0x7c3e3e42,0x71b5b5c4,0xcc6666aa,0x904848d8,0x6030305,0xf7f6f601,0x1c0e0e12,0xc26161a3,0x6a35355f,0xae5757f9,0x69b9b9d0,0x17868691,0x99c1c158,0x3a1d1d27,0x279e9eb9,0xd9e1e138,0xebf8f813,0x2b9898b3,0x22111133,0xd26969bb,0xa9d9d970,0x78e8e89,0x339494a7,0x2d9b9bb6,0x3c1e1e22,0x15878792,0xc9e9e920,0x87cece49,0xaa5555ff,0x50282878,0xa5dfdf7a,0x38c8c8f,0x59a1a1f8,0x9898980,0x1a0d0d17,0x65bfbfda,0xd7e6e631,0x844242c6,0xd06868b8,0x824141c3,0x299999b0,0x5a2d2d77,0x1e0f0f11,0x7bb0b0cb,0xa85454fc,0x6dbbbbd6,0x2c16163a],dP=[0xa5c66363,0x84f87c7c,0x99ee7777,0x8df67b7b,0xdfff2f2,0xbdd66b6b,0xb1de6f6f,0x5491c5c5,0x50603030,0x3020101,0xa9ce6767,0x7d562b2b,0x19e7fefe,0x62b5d7d7,0xe64dabab,0x9aec7676,0x458fcaca,0x9d1f8282,0x4089c9c9,0x87fa7d7d,0x15effafa,0xebb25959,0xc98e4747,0xbfbf0f0,0xec41adad,0x67b3d4d4,0xfd5fa2a2,0xea45afaf,0xbf239c9c,0xf753a4a4,0x96e47272,0x5b9bc0c0,0xc275b7b7,0x1ce1fdfd,0xae3d9393,0x6a4c2626,0x5a6c3636,0x417e3f3f,0x2f5f7f7,0x4f83cccc,0x5c683434,0xf451a5a5,0x34d1e5e5,0x8f9f1f1,0x93e27171,0x73abd8d8,0x53623131,0x3f2a1515,0xc080404,0x5295c7c7,0x65462323,0x5e9dc3c3,0x28301818,0xa1379696,0xf0a0505,0xb52f9a9a,0x90e0707,0x36241212,0x9b1b8080,0x3ddfe2e2,0x26cdebeb,0x694e2727,0xcd7fb2b2,0x9fea7575,0x1b120909,0x9e1d8383,0x74582c2c,0x2e341a1a,0x2d361b1b,0xb2dc6e6e,0xeeb45a5a,0xfb5ba0a0,0xf6a45252,0x4d763b3b,0x61b7d6d6,0xce7db3b3,0x7b522929,0x3edde3e3,0x715e2f2f,0x97138484,0xf5a65353,0x68b9d1d1,0,0x2cc1eded,0x60402020,0x1fe3fcfc,0xc879b1b1,0xedb65b5b,0xbed46a6a,0x468dcbcb,0xd967bebe,0x4b723939,0xde944a4a,0xd4984c4c,0xe8b05858,0x4a85cfcf,0x6bbbd0d0,0x2ac5efef,0xe54faaaa,0x16edfbfb,0xc5864343,0xd79a4d4d,0x55663333,0x94118585,0xcf8a4545,0x10e9f9f9,0x6040202,0x81fe7f7f,0xf0a05050,0x44783c3c,0xba259f9f,0xe34ba8a8,0xf3a25151,0xfe5da3a3,0xc0804040,0x8a058f8f,0xad3f9292,0xbc219d9d,0x48703838,0x4f1f5f5,0xdf63bcbc,0xc177b6b6,0x75afdada,0x63422121,0x30201010,0x1ae5ffff,0xefdf3f3,0x6dbfd2d2,0x4c81cdcd,0x14180c0c,0x35261313,0x2fc3ecec,0xe1be5f5f,0xa2359797,0xcc884444,0x392e1717,0x5793c4c4,0xf255a7a7,0x82fc7e7e,0x477a3d3d,0xacc86464,0xe7ba5d5d,0x2b321919,0x95e67373,0xa0c06060,0x98198181,0xd19e4f4f,0x7fa3dcdc,0x66442222,0x7e542a2a,0xab3b9090,0x830b8888,0xca8c4646,0x29c7eeee,0xd36bb8b8,0x3c281414,0x79a7dede,0xe2bc5e5e,0x1d160b0b,0x76addbdb,0x3bdbe0e0,0x56643232,0x4e743a3a,0x1e140a0a,0xdb924949,0xa0c0606,0x6c482424,0xe4b85c5c,0x5d9fc2c2,0x6ebdd3d3,0xef43acac,0xa6c46262,0xa8399191,0xa4319595,0x37d3e4e4,0x8bf27979,0x32d5e7e7,0x438bc8c8,0x596e3737,0xb7da6d6d,0x8c018d8d,0x64b1d5d5,0xd29c4e4e,0xe049a9a9,0xb4d86c6c,0xfaac5656,0x7f3f4f4,0x25cfeaea,0xafca6565,0x8ef47a7a,0xe947aeae,0x18100808,0xd56fbaba,0x88f07878,0x6f4a2525,0x725c2e2e,0x24381c1c,0xf157a6a6,0xc773b4b4,0x5197c6c6,0x23cbe8e8,0x7ca1dddd,0x9ce87474,0x213e1f1f,0xdd964b4b,0xdc61bdbd,0x860d8b8b,0x850f8a8a,0x90e07070,0x427c3e3e,0xc471b5b5,0xaacc6666,0xd8904848,0x5060303,0x1f7f6f6,0x121c0e0e,0xa3c26161,0x5f6a3535,0xf9ae5757,0xd069b9b9,0x91178686,0x5899c1c1,0x273a1d1d,0xb9279e9e,0x38d9e1e1,0x13ebf8f8,0xb32b9898,0x33221111,0xbbd26969,0x70a9d9d9,0x89078e8e,0xa7339494,0xb62d9b9b,0x223c1e1e,0x92158787,0x20c9e9e9,0x4987cece,0xffaa5555,0x78502828,0x7aa5dfdf,0x8f038c8c,0xf859a1a1,0x80098989,0x171a0d0d,0xda65bfbf,0x31d7e6e6,0xc6844242,0xb8d06868,0xc3824141,0xb0299999,0x775a2d2d,0x111e0f0f,0xcb7bb0b0,0xfca85454,0xd66dbbbb,0x3a2c1616],dQ=[0x63a5c663,0x7c84f87c,0x7799ee77,0x7b8df67b,0xf20dfff2,0x6bbdd66b,0x6fb1de6f,0xc55491c5,0x30506030,0x1030201,0x67a9ce67,0x2b7d562b,0xfe19e7fe,0xd762b5d7,0xabe64dab,0x769aec76,0xca458fca,0x829d1f82,0xc94089c9,0x7d87fa7d,0xfa15effa,0x59ebb259,0x47c98e47,0xf00bfbf0,0xadec41ad,0xd467b3d4,0xa2fd5fa2,0xafea45af,0x9cbf239c,0xa4f753a4,0x7296e472,0xc05b9bc0,0xb7c275b7,0xfd1ce1fd,0x93ae3d93,0x266a4c26,0x365a6c36,0x3f417e3f,0xf702f5f7,0xcc4f83cc,0x345c6834,0xa5f451a5,0xe534d1e5,0xf108f9f1,0x7193e271,0xd873abd8,0x31536231,0x153f2a15,0x40c0804,0xc75295c7,0x23654623,0xc35e9dc3,0x18283018,0x96a13796,0x50f0a05,0x9ab52f9a,0x7090e07,0x12362412,0x809b1b80,0xe23ddfe2,0xeb26cdeb,0x27694e27,0xb2cd7fb2,0x759fea75,0x91b1209,0x839e1d83,0x2c74582c,0x1a2e341a,0x1b2d361b,0x6eb2dc6e,0x5aeeb45a,0xa0fb5ba0,0x52f6a452,0x3b4d763b,0xd661b7d6,0xb3ce7db3,0x297b5229,0xe33edde3,0x2f715e2f,0x84971384,0x53f5a653,0xd168b9d1,0,0xed2cc1ed,0x20604020,0xfc1fe3fc,0xb1c879b1,0x5bedb65b,0x6abed46a,0xcb468dcb,0xbed967be,0x394b7239,0x4ade944a,0x4cd4984c,0x58e8b058,0xcf4a85cf,0xd06bbbd0,0xef2ac5ef,0xaae54faa,0xfb16edfb,0x43c58643,0x4dd79a4d,0x33556633,0x85941185,0x45cf8a45,0xf910e9f9,0x2060402,0x7f81fe7f,0x50f0a050,0x3c44783c,0x9fba259f,0xa8e34ba8,0x51f3a251,0xa3fe5da3,0x40c08040,0x8f8a058f,0x92ad3f92,0x9dbc219d,0x38487038,0xf504f1f5,0xbcdf63bc,0xb6c177b6,0xda75afda,0x21634221,0x10302010,0xff1ae5ff,0xf30efdf3,0xd26dbfd2,0xcd4c81cd,0xc14180c,0x13352613,0xec2fc3ec,0x5fe1be5f,0x97a23597,0x44cc8844,0x17392e17,0xc45793c4,0xa7f255a7,0x7e82fc7e,0x3d477a3d,0x64acc864,0x5de7ba5d,0x192b3219,0x7395e673,0x60a0c060,0x81981981,0x4fd19e4f,0xdc7fa3dc,0x22664422,0x2a7e542a,0x90ab3b90,0x88830b88,0x46ca8c46,0xee29c7ee,0xb8d36bb8,0x143c2814,0xde79a7de,0x5ee2bc5e,0xb1d160b,0xdb76addb,0xe03bdbe0,0x32566432,0x3a4e743a,0xa1e140a,0x49db9249,0x60a0c06,0x246c4824,0x5ce4b85c,0xc25d9fc2,0xd36ebdd3,0xacef43ac,0x62a6c462,0x91a83991,0x95a43195,0xe437d3e4,0x798bf279,0xe732d5e7,0xc8438bc8,0x37596e37,0x6db7da6d,0x8d8c018d,0xd564b1d5,0x4ed29c4e,0xa9e049a9,0x6cb4d86c,0x56faac56,0xf407f3f4,0xea25cfea,0x65afca65,0x7a8ef47a,0xaee947ae,0x8181008,0xbad56fba,0x7888f078,0x256f4a25,0x2e725c2e,0x1c24381c,0xa6f157a6,0xb4c773b4,0xc65197c6,0xe823cbe8,0xdd7ca1dd,0x749ce874,0x1f213e1f,0x4bdd964b,0xbddc61bd,0x8b860d8b,0x8a850f8a,0x7090e070,0x3e427c3e,0xb5c471b5,0x66aacc66,0x48d89048,0x3050603,0xf601f7f6,0xe121c0e,0x61a3c261,0x355f6a35,0x57f9ae57,0xb9d069b9,0x86911786,0xc15899c1,0x1d273a1d,0x9eb9279e,0xe138d9e1,0xf813ebf8,0x98b32b98,0x11332211,0x69bbd269,0xd970a9d9,0x8e89078e,0x94a73394,0x9bb62d9b,0x1e223c1e,0x87921587,0xe920c9e9,0xce4987ce,0x55ffaa55,0x28785028,0xdf7aa5df,0x8c8f038c,0xa1f859a1,0x89800989,0xd171a0d,0xbfda65bf,0xe631d7e6,0x42c68442,0x68b8d068,0x41c38241,0x99b02999,0x2d775a2d,0xf111e0f,0xb0cb7bb0,0x54fca854,0xbbd66dbb,0x163a2c16],dR=[0x6363a5c6,0x7c7c84f8,0x777799ee,0x7b7b8df6,0xf2f20dff,0x6b6bbdd6,0x6f6fb1de,0xc5c55491,0x30305060,0x1010302,0x6767a9ce,0x2b2b7d56,0xfefe19e7,0xd7d762b5,0xababe64d,0x76769aec,0xcaca458f,0x82829d1f,0xc9c94089,0x7d7d87fa,0xfafa15ef,0x5959ebb2,0x4747c98e,0xf0f00bfb,0xadadec41,0xd4d467b3,0xa2a2fd5f,0xafafea45,0x9c9cbf23,0xa4a4f753,0x727296e4,0xc0c05b9b,0xb7b7c275,0xfdfd1ce1,0x9393ae3d,0x26266a4c,0x36365a6c,0x3f3f417e,0xf7f702f5,0xcccc4f83,0x34345c68,0xa5a5f451,0xe5e534d1,0xf1f108f9,0x717193e2,0xd8d873ab,0x31315362,0x15153f2a,0x4040c08,0xc7c75295,0x23236546,0xc3c35e9d,0x18182830,0x9696a137,0x5050f0a,0x9a9ab52f,0x707090e,0x12123624,0x80809b1b,0xe2e23ddf,0xebeb26cd,0x2727694e,0xb2b2cd7f,0x75759fea,0x9091b12,0x83839e1d,0x2c2c7458,0x1a1a2e34,0x1b1b2d36,0x6e6eb2dc,0x5a5aeeb4,0xa0a0fb5b,0x5252f6a4,0x3b3b4d76,0xd6d661b7,0xb3b3ce7d,0x29297b52,0xe3e33edd,0x2f2f715e,0x84849713,0x5353f5a6,0xd1d168b9,0,0xeded2cc1,0x20206040,0xfcfc1fe3,0xb1b1c879,0x5b5bedb6,0x6a6abed4,0xcbcb468d,0xbebed967,0x39394b72,0x4a4ade94,0x4c4cd498,0x5858e8b0,0xcfcf4a85,0xd0d06bbb,0xefef2ac5,0xaaaae54f,0xfbfb16ed,0x4343c586,0x4d4dd79a,0x33335566,0x85859411,0x4545cf8a,0xf9f910e9,0x2020604,0x7f7f81fe,0x5050f0a0,0x3c3c4478,0x9f9fba25,0xa8a8e34b,0x5151f3a2,0xa3a3fe5d,0x4040c080,0x8f8f8a05,0x9292ad3f,0x9d9dbc21,0x38384870,0xf5f504f1,0xbcbcdf63,0xb6b6c177,0xdada75af,0x21216342,0x10103020,0xffff1ae5,0xf3f30efd,0xd2d26dbf,0xcdcd4c81,0xc0c1418,0x13133526,0xecec2fc3,0x5f5fe1be,0x9797a235,0x4444cc88,0x1717392e,0xc4c45793,0xa7a7f255,0x7e7e82fc,0x3d3d477a,0x6464acc8,0x5d5de7ba,0x19192b32,0x737395e6,0x6060a0c0,0x81819819,0x4f4fd19e,0xdcdc7fa3,0x22226644,0x2a2a7e54,0x9090ab3b,0x8888830b,0x4646ca8c,0xeeee29c7,0xb8b8d36b,0x14143c28,0xdede79a7,0x5e5ee2bc,0xb0b1d16,0xdbdb76ad,0xe0e03bdb,0x32325664,0x3a3a4e74,0xa0a1e14,0x4949db92,0x6060a0c,0x24246c48,0x5c5ce4b8,0xc2c25d9f,0xd3d36ebd,0xacacef43,0x6262a6c4,0x9191a839,0x9595a431,0xe4e437d3,0x79798bf2,0xe7e732d5,0xc8c8438b,0x3737596e,0x6d6db7da,0x8d8d8c01,0xd5d564b1,0x4e4ed29c,0xa9a9e049,0x6c6cb4d8,0x5656faac,0xf4f407f3,0xeaea25cf,0x6565afca,0x7a7a8ef4,0xaeaee947,0x8081810,0xbabad56f,0x787888f0,0x25256f4a,0x2e2e725c,0x1c1c2438,0xa6a6f157,0xb4b4c773,0xc6c65197,0xe8e823cb,0xdddd7ca1,0x74749ce8,0x1f1f213e,0x4b4bdd96,0xbdbddc61,0x8b8b860d,0x8a8a850f,0x707090e0,0x3e3e427c,0xb5b5c471,0x6666aacc,0x4848d890,0x3030506,0xf6f601f7,0xe0e121c,0x6161a3c2,0x35355f6a,0x5757f9ae,0xb9b9d069,0x86869117,0xc1c15899,0x1d1d273a,0x9e9eb927,0xe1e138d9,0xf8f813eb,0x9898b32b,0x11113322,0x6969bbd2,0xd9d970a9,0x8e8e8907,0x9494a733,0x9b9bb62d,0x1e1e223c,0x87879215,0xe9e920c9,0xcece4987,0x5555ffaa,0x28287850,0xdfdf7aa5,0x8c8c8f03,0xa1a1f859,0x89898009,0xd0d171a,0xbfbfda65,0xe6e631d7,0x4242c684,0x6868b8d0,0x4141c382,0x9999b029,0x2d2d775a,0xf0f111e,0xb0b0cb7b,0x5454fca8,0xbbbbd66d,0x16163a2c],dS=[0x51f4a750,0x7e416553,0x1a17a4c3,0x3a275e96,0x3bab6bcb,0x1f9d45f1,0xacfa58ab,0x4be30393,0x2030fa55,0xad766df6,0x88cc7691,0xf5024c25,0x4fe5d7fc,0xc52acbd7,0x26354480,0xb562a38f,0xdeb15a49,0x25ba1b67,0x45ea0e98,0x5dfec0e1,0xc32f7502,0x814cf012,0x8d4697a3,0x6bd3f9c6,0x38f5fe7,0x15929c95,0xbf6d7aeb,0x955259da,0xd4be832d,0x587421d3,0x49e06929,0x8ec9c844,0x75c2896a,0xf48e7978,0x99583e6b,0x27b971dd,0xbee14fb6,0xf088ad17,0xc920ac66,0x7dce3ab4,0x63df4a18,0xe51a3182,0x97513360,0x62537f45,0xb16477e0,0xbb6bae84,0xfe81a01c,0xf9082b94,0x70486858,0x8f45fd19,0x94de6c87,0x527bf8b7,0xab73d323,0x724b02e2,0xe31f8f57,0x6655ab2a,0xb2eb2807,0x2fb5c203,0x86c57b9a,0xd33708a5,0x302887f2,0x23bfa5b2,0x2036aba,0xed16825c,0x8acf1c2b,0xa779b492,0xf307f2f0,0x4e69e2a1,0x65daf4cd,0x605bed5,0xd134621f,0xc4a6fe8a,0x342e539d,0xa2f355a0,0x58ae132,0xa4f6eb75,0xb83ec39,0x4060efaa,0x5e719f06,0xbd6e1051,0x3e218af9,0x96dd063d,0xdd3e05ae,0x4de6bd46,0x91548db5,0x71c45d05,0x406d46f,0x605015ff,0x1998fb24,0xd6bde997,0x894043cc,0x67d99e77,0xb0e842bd,0x7898b88,0xe7195b38,0x79c8eedb,0xa17c0a47,0x7c420fe9,0xf8841ec9,0,0x9808683,0x322bed48,0x1e1170ac,0x6c5a724e,0xfd0efffb,0xf853856,0x3daed51e,0x362d3927,0xa0fd964,0x685ca621,0x9b5b54d1,0x24362e3a,0xc0a67b1,0x9357e70f,0xb4ee96d2,0x1b9b919e,0x80c0c54f,0x61dc20a2,0x5a774b69,0x1c121a16,0xe293ba0a,0xc0a02ae5,0x3c22e043,0x121b171d,0xe090d0b,0xf28bc7ad,0x2db6a8b9,0x141ea9c8,0x57f11985,0xaf75074c,0xee99ddbb,0xa37f60fd,0xf701269f,0x5c72f5bc,0x44663bc5,0x5bfb7e34,0x8b432976,0xcb23c6dc,0xb6edfc68,0xb8e4f163,0xd731dcca,0x42638510,0x13972240,0x84c61120,0x854a247d,0xd2bb3df8,0xaef93211,0xc729a16d,0x1d9e2f4b,0xdcb230f3,0xd8652ec,0x77c1e3d0,0x2bb3166c,0xa970b999,0x119448fa,0x47e96422,0xa8fc8cc4,0xa0f03f1a,0x567d2cd8,0x223390ef,0x87494ec7,0xd938d1c1,0x8ccaa2fe,0x98d40b36,0xa6f581cf,0xa57ade28,0xdab78e26,0x3fadbfa4,0x2c3a9de4,0x5078920d,0x6a5fcc9b,0x547e4662,0xf68d13c2,0x90d8b8e8,0x2e39f75e,0x82c3aff5,0x9f5d80be,0x69d0937c,0x6fd52da9,0xcf2512b3,0xc8ac993b,0x10187da7,0xe89c636e,0xdb3bbb7b,0xcd267809,0x6e5918f4,0xec9ab701,0x834f9aa8,0xe6956e65,0xaaffe67e,0x21bccf08,0xef15e8e6,0xbae79bd9,0x4a6f36ce,0xea9f09d4,0x29b07cd6,0x31a4b2af,0x2a3f2331,0xc6a59430,0x35a266c0,0x744ebc37,0xfc82caa6,0xe090d0b0,0x33a7d815,0xf104984a,0x41ecdaf7,0x7fcd500e,0x1791f62f,0x764dd68d,0x43efb04d,0xccaa4d54,0xe49604df,0x9ed1b5e3,0x4c6a881b,0xc12c1fb8,0x4665517f,0x9d5eea04,0x18c355d,0xfa877473,0xfb0b412e,0xb3671d5a,0x92dbd252,0xe9105633,0x6dd64713,0x9ad7618c,0x37a10c7a,0x59f8148e,0xeb133c89,0xcea927ee,0xb761c935,0xe11ce5ed,0x7a47b13c,0x9cd2df59,0x55f2733f,0x1814ce79,0x73c737bf,0x53f7cdea,0x5ffdaa5b,0xdf3d6f14,0x7844db86,0xcaaff381,0xb968c43e,0x3824342c,0xc2a3405f,0x161dc372,0xbce2250c,0x283c498b,0xff0d9541,0x39a80171,0x80cb3de,0xd8b4e49c,0x6456c190,0x7bcb8461,0xd532b670,0x486c5c74,0xd0b85742],dT=[0x5051f4a7,0x537e4165,0xc31a17a4,0x963a275e,0xcb3bab6b,0xf11f9d45,0xabacfa58,0x934be303,0x552030fa,0xf6ad766d,0x9188cc76,0x25f5024c,0xfc4fe5d7,0xd7c52acb,0x80263544,0x8fb562a3,0x49deb15a,0x6725ba1b,0x9845ea0e,0xe15dfec0,0x2c32f75,0x12814cf0,0xa38d4697,0xc66bd3f9,0xe7038f5f,0x9515929c,0xebbf6d7a,0xda955259,0x2dd4be83,0xd3587421,0x2949e069,0x448ec9c8,0x6a75c289,0x78f48e79,0x6b99583e,0xdd27b971,0xb6bee14f,0x17f088ad,0x66c920ac,0xb47dce3a,0x1863df4a,0x82e51a31,0x60975133,0x4562537f,0xe0b16477,0x84bb6bae,0x1cfe81a0,0x94f9082b,0x58704868,0x198f45fd,0x8794de6c,0xb7527bf8,0x23ab73d3,0xe2724b02,0x57e31f8f,0x2a6655ab,0x7b2eb28,0x32fb5c2,0x9a86c57b,0xa5d33708,0xf2302887,0xb223bfa5,0xba02036a,0x5ced1682,0x2b8acf1c,0x92a779b4,0xf0f307f2,0xa14e69e2,0xcd65daf4,0xd50605be,0x1fd13462,0x8ac4a6fe,0x9d342e53,0xa0a2f355,0x32058ae1,0x75a4f6eb,0x390b83ec,0xaa4060ef,0x65e719f,0x51bd6e10,0xf93e218a,0x3d96dd06,0xaedd3e05,0x464de6bd,0xb591548d,0x571c45d,0x6f0406d4,0xff605015,0x241998fb,0x97d6bde9,0xcc894043,0x7767d99e,0xbdb0e842,0x8807898b,0x38e7195b,0xdb79c8ee,0x47a17c0a,0xe97c420f,0xc9f8841e,0,0x83098086,0x48322bed,0xac1e1170,0x4e6c5a72,0xfbfd0eff,0x560f8538,0x1e3daed5,0x27362d39,0x640a0fd9,0x21685ca6,0xd19b5b54,0x3a24362e,0xb10c0a67,0xf9357e7,0xd2b4ee96,0x9e1b9b91,0x4f80c0c5,0xa261dc20,0x695a774b,0x161c121a,0xae293ba,0xe5c0a02a,0x433c22e0,0x1d121b17,0xb0e090d,0xadf28bc7,0xb92db6a8,0xc8141ea9,0x8557f119,0x4caf7507,0xbbee99dd,0xfda37f60,0x9ff70126,0xbc5c72f5,0xc544663b,0x345bfb7e,0x768b4329,0xdccb23c6,0x68b6edfc,0x63b8e4f1,0xcad731dc,0x10426385,0x40139722,0x2084c611,0x7d854a24,0xf8d2bb3d,0x11aef932,0x6dc729a1,0x4b1d9e2f,0xf3dcb230,0xec0d8652,0xd077c1e3,0x6c2bb316,0x99a970b9,0xfa119448,0x2247e964,0xc4a8fc8c,0x1aa0f03f,0xd8567d2c,0xef223390,0xc787494e,0xc1d938d1,0xfe8ccaa2,0x3698d40b,0xcfa6f581,0x28a57ade,0x26dab78e,0xa43fadbf,0xe42c3a9d,0xd507892,0x9b6a5fcc,0x62547e46,0xc2f68d13,0xe890d8b8,0x5e2e39f7,0xf582c3af,0xbe9f5d80,0x7c69d093,0xa96fd52d,0xb3cf2512,0x3bc8ac99,0xa710187d,0x6ee89c63,0x7bdb3bbb,0x9cd2678,0xf46e5918,0x1ec9ab7,0xa8834f9a,0x65e6956e,0x7eaaffe6,0x821bccf,0xe6ef15e8,0xd9bae79b,0xce4a6f36,0xd4ea9f09,0xd629b07c,0xaf31a4b2,0x312a3f23,0x30c6a594,0xc035a266,0x37744ebc,0xa6fc82ca,0xb0e090d0,0x1533a7d8,0x4af10498,0xf741ecda,0xe7fcd50,0x2f1791f6,0x8d764dd6,0x4d43efb0,0x54ccaa4d,0xdfe49604,0xe39ed1b5,0x1b4c6a88,0xb8c12c1f,0x7f466551,0x49d5eea,0x5d018c35,0x73fa8774,0x2efb0b41,0x5ab3671d,0x5292dbd2,0x33e91056,0x136dd647,0x8c9ad761,0x7a37a10c,0x8e59f814,0x89eb133c,0xeecea927,0x35b761c9,0xede11ce5,0x3c7a47b1,0x599cd2df,0x3f55f273,0x791814ce,0xbf73c737,0xea53f7cd,0x5b5ffdaa,0x14df3d6f,0x867844db,0x81caaff3,0x3eb968c4,0x2c382434,0x5fc2a340,0x72161dc3,0xcbce225,0x8b283c49,0x41ff0d95,0x7139a801,0xde080cb3,0x9cd8b4e4,0x906456c1,0x617bcb84,0x70d532b6,0x74486c5c,0x42d0b857],dU=[0xa75051f4,0x65537e41,0xa4c31a17,0x5e963a27,0x6bcb3bab,0x45f11f9d,0x58abacfa,0x3934be3,0xfa552030,0x6df6ad76,0x769188cc,0x4c25f502,0xd7fc4fe5,0xcbd7c52a,0x44802635,0xa38fb562,0x5a49deb1,0x1b6725ba,0xe9845ea,0xc0e15dfe,0x7502c32f,0xf012814c,0x97a38d46,0xf9c66bd3,0x5fe7038f,0x9c951592,0x7aebbf6d,0x59da9552,0x832dd4be,0x21d35874,0x692949e0,0xc8448ec9,0x896a75c2,0x7978f48e,1047239e3,0x71dd27b9,0x4fb6bee1,0xad17f088,0xac66c920,0x3ab47dce,0x4a1863df,0x3182e51a,0x33609751,0x7f456253,0x77e0b164,0xae84bb6b,0xa01cfe81,0x2b94f908,0x68587048,0xfd198f45,0x6c8794de,0xf8b7527b,0xd323ab73,0x2e2724b,0x8f57e31f,0xab2a6655,0x2807b2eb,0xc2032fb5,0x7b9a86c5,0x8a5d337,0x87f23028,0xa5b223bf,0x6aba0203,0x825ced16,0x1c2b8acf,0xb492a779,0xf2f0f307,0xe2a14e69,0xf4cd65da,0xbed50605,0x621fd134,0xfe8ac4a6,0x539d342e,0x55a0a2f3,0xe132058a,0xeb75a4f6,0xec390b83,0xefaa4060,0x9f065e71,0x1051bd6e,0x8af93e21,0x63d96dd,0x5aedd3e,0xbd464de6,0x8db59154,0x5d0571c4,0xd46f0406,0x15ff6050,0xfb241998,0xe997d6bd,0x43cc8940,0x9e7767d9,0x42bdb0e8,0x8b880789,0x5b38e719,0xeedb79c8,0xa47a17c,0xfe97c42,0x1ec9f884,0,0x86830980,0xed48322b,0x70ac1e11,0x724e6c5a,0xfffbfd0e,0x38560f85,0xd51e3dae,0x3927362d,0xd9640a0f,0xa621685c,0x54d19b5b,0x2e3a2436,0x67b10c0a,0xe70f9357,0x96d2b4ee,0x919e1b9b,0xc54f80c0,0x20a261dc,0x4b695a77,0x1a161c12,0xba0ae293,0x2ae5c0a0,0xe0433c22,0x171d121b,0xd0b0e09,0xc7adf28b,0xa8b92db6,0xa9c8141e,0x198557f1,0x74caf75,0xddbbee99,0x60fda37f,0x269ff701,0xf5bc5c72,0x3bc54466,0x7e345bfb,0x29768b43,0xc6dccb23,0xfc68b6ed,0xf163b8e4,0xdccad731,0x85104263,0x22401397,0x112084c6,0x247d854a,0x3df8d2bb,0x3211aef9,0xa16dc729,0x2f4b1d9e,0x30f3dcb2,0x52ec0d86,0xe3d077c1,0x166c2bb3,0xb999a970,0x48fa1194,0x642247e9,0x8cc4a8fc,0x3f1aa0f0,0x2cd8567d,0x90ef2233,0x4ec78749,0xd1c1d938,0xa2fe8cca,0xb3698d4,0x81cfa6f5,0xde28a57a,0x8e26dab7,0xbfa43fad,0x9de42c3a,0x920d5078,0xcc9b6a5f,0x4662547e,0x13c2f68d,0xb8e890d8,0xf75e2e39,0xaff582c3,0x80be9f5d,0x937c69d0,0x2da96fd5,0x12b3cf25,0x993bc8ac,0x7da71018,0x636ee89c,0xbb7bdb3b,0x7809cd26,0x18f46e59,0xb701ec9a,0x9aa8834f,0x6e65e695,0xe67eaaff,0xcf0821bc,0xe8e6ef15,0x9bd9bae7,0x36ce4a6f,0x9d4ea9f,0x7cd629b0,0xb2af31a4,0x23312a3f,0x9430c6a5,0x66c035a2,0xbc37744e,0xcaa6fc82,0xd0b0e090,0xd81533a7,0x984af104,0xdaf741ec,0x500e7fcd,0xf62f1791,0xd68d764d,0xb04d43ef,0x4d54ccaa,0x4dfe496,0xb5e39ed1,0x881b4c6a,0x1fb8c12c,0x517f4665,0xea049d5e,0x355d018c,0x7473fa87,0x412efb0b,0x1d5ab367,0xd25292db,0x5633e910,0x47136dd6,0x618c9ad7,0xc7a37a1,0x148e59f8,0x3c89eb13,0x27eecea9,0xc935b761,0xe5ede11c,0xb13c7a47,0xdf599cd2,0x733f55f2,0xce791814,0x37bf73c7,0xcdea53f7,0xaa5b5ffd,0x6f14df3d,0xdb867844,0xf381caaf,0xc43eb968,0x342c3824,0x405fc2a3,0xc372161d,0x250cbce2,0x498b283c,0x9541ff0d,0x17139a8,0xb3de080c,0xe49cd8b4,0xc1906456,0x84617bcb,0xb670d532,0x5c74486c,0x5742d0b8],dV=[0xf4a75051,0x4165537e,0x17a4c31a,0x275e963a,0xab6bcb3b,0x9d45f11f,0xfa58abac,0xe303934b,0x30fa5520,0x766df6ad,0xcc769188,0x24c25f5,0xe5d7fc4f,0x2acbd7c5,0x35448026,0x62a38fb5,0xb15a49de,0xba1b6725,0xea0e9845,0xfec0e15d,0x2f7502c3,0x4cf01281,0x4697a38d,0xd3f9c66b,0x8f5fe703,0x929c9515,0x6d7aebbf,0x5259da95,0xbe832dd4,0x7421d358,0xe0692949,0xc9c8448e,0xc2896a75,0x8e7978f4,0x583e6b99,0xb971dd27,0xe14fb6be,0x88ad17f0,0x20ac66c9,0xce3ab47d,0xdf4a1863,0x1a3182e5,0x51336097,0x537f4562,0x6477e0b1,0x6bae84bb,0x81a01cfe,0x82b94f9,0x48685870,0x45fd198f,0xde6c8794,0x7bf8b752,0x73d323ab,0x4b02e272,0x1f8f57e3,0x55ab2a66,0xeb2807b2,0xb5c2032f,0xc57b9a86,0x3708a5d3,679998e3,0xbfa5b223,0x36aba02,0x16825ced,0xcf1c2b8a,0x79b492a7,0x7f2f0f3,0x69e2a14e,0xdaf4cd65,0x5bed506,0x34621fd1,0xa6fe8ac4,0x2e539d34,0xf355a0a2,0x8ae13205,0xf6eb75a4,0x83ec390b,0x60efaa40,0x719f065e,0x6e1051bd,0x218af93e,0xdd063d96,0x3e05aedd,0xe6bd464d,0x548db591,0xc45d0571,0x6d46f04,0x5015ff60,0x98fb2419,0xbde997d6,0x4043cc89,0xd99e7767,0xe842bdb0,0x898b8807,0x195b38e7,0xc8eedb79,0x7c0a47a1,0x420fe97c,0x841ec9f8,0,0x80868309,0x2bed4832,0x1170ac1e,0x5a724e6c,0xefffbfd,0x8538560f,0xaed51e3d,0x2d392736,0xfd9640a,0x5ca62168,0x5b54d19b,0x362e3a24,0xa67b10c,0x57e70f93,0xee96d2b4,0x9b919e1b,0xc0c54f80,0xdc20a261,0x774b695a,0x121a161c,0x93ba0ae2,0xa02ae5c0,0x22e0433c,0x1b171d12,0x90d0b0e,0x8bc7adf2,0xb6a8b92d,0x1ea9c814,0xf1198557,0x75074caf,0x99ddbbee,0x7f60fda3,0x1269ff7,0x72f5bc5c,0x663bc544,0xfb7e345b,0x4329768b,0x23c6dccb,0xedfc68b6,0xe4f163b8,0x31dccad7,0x63851042,0x97224013,0xc6112084,0x4a247d85,0xbb3df8d2,0xf93211ae,0x29a16dc7,0x9e2f4b1d,0xb230f3dc,0x8652ec0d,0xc1e3d077,0xb3166c2b,0x70b999a9,0x9448fa11,0xe9642247,0xfc8cc4a8,0xf03f1aa0,0x7d2cd856,0x3390ef22,0x494ec787,0x38d1c1d9,0xcaa2fe8c,0xd40b3698,0xf581cfa6,0x7ade28a5,0xb78e26da,0xadbfa43f,0x3a9de42c,0x78920d50,0x5fcc9b6a,0x7e466254,0x8d13c2f6,0xd8b8e890,0x39f75e2e,0xc3aff582,0x5d80be9f,0xd0937c69,0xd52da96f,0x2512b3cf,0xac993bc8,0x187da710,0x9c636ee8,0x3bbb7bdb,0x267809cd,0x5918f46e,0x9ab701ec,0x4f9aa883,0x956e65e6,0xffe67eaa,0xbccf0821,0x15e8e6ef,0xe79bd9ba,0x6f36ce4a,0x9f09d4ea,0xb07cd629,0xa4b2af31,0x3f23312a,0xa59430c6,0xa266c035,0x4ebc3774,0x82caa6fc,0x90d0b0e0,0xa7d81533,0x4984af1,0xecdaf741,0xcd500e7f,0x91f62f17,0x4dd68d76,0xefb04d43,0xaa4d54cc,0x9604dfe4,0xd1b5e39e,0x6a881b4c,0x2c1fb8c1,0x65517f46,0x5eea049d,0x8c355d01,0x877473fa,0xb412efb,0x671d5ab3,0xdbd25292,0x105633e9,0xd647136d,0xd7618c9a,0xa10c7a37,0xf8148e59,0x133c89eb,0xa927eece,0x61c935b7,0x1ce5ede1,0x47b13c7a,0xd2df599c,0xf2733f55,0x14ce7918,0xc737bf73,0xf7cdea53,0xfdaa5b5f,0x3d6f14df,0x44db8678,0xaff381ca,0x68c43eb9,0x24342c38,0xa3405fc2,0x1dc37216,0xe2250cbc,0x3c498b28,0xd9541ff,0xa8017139,0xcb3de08,0xb4e49cd8,0x56c19064,0xcb84617b,0x32b670d5,0x6c5c7448,0xb85742d0],dW=[0,0xe090d0b,0x1c121a16,0x121b171d,0x3824342c,0x362d3927,0x24362e3a,0x2a3f2331,0x70486858,0x7e416553,0x6c5a724e,0x62537f45,0x486c5c74,0x4665517f,0x547e4662,0x5a774b69,0xe090d0b0,0xee99ddbb,0xfc82caa6,0xf28bc7ad,0xd8b4e49c,0xd6bde997,0xc4a6fe8a,0xcaaff381,0x90d8b8e8,0x9ed1b5e3,0x8ccaa2fe,0x82c3aff5,0xa8fc8cc4,0xa6f581cf,0xb4ee96d2,0xbae79bd9,0xdb3bbb7b,0xd532b670,0xc729a16d,0xc920ac66,0xe31f8f57,0xed16825c,0xff0d9541,0xf104984a,0xab73d323,0xa57ade28,0xb761c935,0xb968c43e,0x9357e70f,0x9d5eea04,0x8f45fd19,0x814cf012,0x3bab6bcb,0x35a266c0,0x27b971dd,0x29b07cd6,0x38f5fe7,0xd8652ec,0x1f9d45f1,0x119448fa,0x4be30393,0x45ea0e98,0x57f11985,0x59f8148e,0x73c737bf,0x7dce3ab4,0x6fd52da9,0x61dc20a2,0xad766df6,0xa37f60fd,0xb16477e0,0xbf6d7aeb,0x955259da,0x9b5b54d1,0x894043cc,0x87494ec7,0xdd3e05ae,0xd33708a5,0xc12c1fb8,0xcf2512b3,0xe51a3182,0xeb133c89,0xf9082b94,0xf701269f,0x4de6bd46,0x43efb04d,0x51f4a750,0x5ffdaa5b,0x75c2896a,0x7bcb8461,0x69d0937c,0x67d99e77,0x3daed51e,0x33a7d815,0x21bccf08,0x2fb5c203,0x58ae132,0xb83ec39,0x1998fb24,0x1791f62f,0x764dd68d,0x7844db86,0x6a5fcc9b,0x6456c190,0x4e69e2a1,0x4060efaa,0x527bf8b7,0x5c72f5bc,0x605bed5,0x80cb3de,0x1a17a4c3,0x141ea9c8,0x3e218af9,0x302887f2,0x223390ef,0x2c3a9de4,0x96dd063d,0x98d40b36,0x8acf1c2b,0x84c61120,0xaef93211,0xa0f03f1a,0xb2eb2807,0xbce2250c,0xe6956e65,0xe89c636e,0xfa877473,0xf48e7978,0xdeb15a49,0xd0b85742,0xc2a3405f,0xccaa4d54,0x41ecdaf7,0x4fe5d7fc,0x5dfec0e1,0x53f7cdea,0x79c8eedb,0x77c1e3d0,0x65daf4cd,0x6bd3f9c6,0x31a4b2af,0x3fadbfa4,0x2db6a8b9,0x23bfa5b2,0x9808683,0x7898b88,0x15929c95,0x1b9b919e,0xa17c0a47,0xaf75074c,0xbd6e1051,0xb3671d5a,0x99583e6b,0x97513360,0x854a247d,0x8b432976,0xd134621f,0xdf3d6f14,0xcd267809,0xc32f7502,0xe9105633,0xe7195b38,0xf5024c25,0xfb0b412e,0x9ad7618c,0x94de6c87,0x86c57b9a,0x88cc7691,0xa2f355a0,0xacfa58ab,0xbee14fb6,0xb0e842bd,0xea9f09d4,0xe49604df,0xf68d13c2,0xf8841ec9,0xd2bb3df8,0xdcb230f3,0xcea927ee,0xc0a02ae5,0x7a47b13c,0x744ebc37,0x6655ab2a,0x685ca621,0x42638510,0x4c6a881b,0x5e719f06,0x5078920d,0xa0fd964,0x406d46f,0x161dc372,0x1814ce79,0x322bed48,0x3c22e043,0x2e39f75e,0x2030fa55,0xec9ab701,0xe293ba0a,0xf088ad17,0xfe81a01c,0xd4be832d,0xdab78e26,0xc8ac993b,0xc6a59430,0x9cd2df59,0x92dbd252,0x80c0c54f,0x8ec9c844,0xa4f6eb75,0xaaffe67e,0xb8e4f163,0xb6edfc68,0xc0a67b1,0x2036aba,0x10187da7,0x1e1170ac,0x342e539d,0x3a275e96,0x283c498b,0x26354480,0x7c420fe9,0x724b02e2,0x605015ff,0x6e5918f4,0x44663bc5,0x4a6f36ce,0x587421d3,0x567d2cd8,0x37a10c7a,0x39a80171,0x2bb3166c,0x25ba1b67,0xf853856,0x18c355d,0x13972240,0x1d9e2f4b,0x47e96422,0x49e06929,0x5bfb7e34,0x55f2733f,0x7fcd500e,0x71c45d05,0x63df4a18,0x6dd64713,0xd731dcca,0xd938d1c1,0xcb23c6dc,0xc52acbd7,0xef15e8e6,0xe11ce5ed,0xf307f2f0,0xfd0efffb,0xa779b492,0xa970b999,0xbb6bae84,0xb562a38f,0x9f5d80be,0x91548db5,0x834f9aa8,0x8d4697a3],dX=[0,0xb0e090d,0x161c121a,0x1d121b17,0x2c382434,0x27362d39,0x3a24362e,0x312a3f23,0x58704868,0x537e4165,0x4e6c5a72,0x4562537f,0x74486c5c,0x7f466551,0x62547e46,0x695a774b,0xb0e090d0,0xbbee99dd,0xa6fc82ca,0xadf28bc7,0x9cd8b4e4,0x97d6bde9,0x8ac4a6fe,0x81caaff3,0xe890d8b8,0xe39ed1b5,0xfe8ccaa2,0xf582c3af,0xc4a8fc8c,0xcfa6f581,0xd2b4ee96,0xd9bae79b,0x7bdb3bbb,0x70d532b6,0x6dc729a1,0x66c920ac,0x57e31f8f,0x5ced1682,0x41ff0d95,0x4af10498,0x23ab73d3,0x28a57ade,0x35b761c9,0x3eb968c4,0xf9357e7,0x49d5eea,0x198f45fd,0x12814cf0,0xcb3bab6b,0xc035a266,0xdd27b971,0xd629b07c,0xe7038f5f,0xec0d8652,0xf11f9d45,0xfa119448,0x934be303,0x9845ea0e,0x8557f119,0x8e59f814,0xbf73c737,0xb47dce3a,0xa96fd52d,0xa261dc20,0xf6ad766d,0xfda37f60,0xe0b16477,0xebbf6d7a,0xda955259,0xd19b5b54,0xcc894043,0xc787494e,0xaedd3e05,0xa5d33708,0xb8c12c1f,0xb3cf2512,0x82e51a31,0x89eb133c,0x94f9082b,0x9ff70126,0x464de6bd,0x4d43efb0,0x5051f4a7,0x5b5ffdaa,0x6a75c289,0x617bcb84,0x7c69d093,0x7767d99e,0x1e3daed5,0x1533a7d8,0x821bccf,0x32fb5c2,0x32058ae1,0x390b83ec,0x241998fb,0x2f1791f6,0x8d764dd6,0x867844db,0x9b6a5fcc,0x906456c1,0xa14e69e2,0xaa4060ef,0xb7527bf8,0xbc5c72f5,0xd50605be,0xde080cb3,0xc31a17a4,0xc8141ea9,0xf93e218a,0xf2302887,0xef223390,0xe42c3a9d,0x3d96dd06,0x3698d40b,0x2b8acf1c,0x2084c611,0x11aef932,0x1aa0f03f,0x7b2eb28,0xcbce225,0x65e6956e,0x6ee89c63,0x73fa8774,0x78f48e79,0x49deb15a,0x42d0b857,0x5fc2a340,0x54ccaa4d,0xf741ecda,0xfc4fe5d7,0xe15dfec0,0xea53f7cd,0xdb79c8ee,0xd077c1e3,0xcd65daf4,0xc66bd3f9,0xaf31a4b2,0xa43fadbf,0xb92db6a8,0xb223bfa5,0x83098086,0x8807898b,0x9515929c,0x9e1b9b91,0x47a17c0a,0x4caf7507,0x51bd6e10,0x5ab3671d,0x6b99583e,0x60975133,0x7d854a24,0x768b4329,0x1fd13462,0x14df3d6f,0x9cd2678,0x2c32f75,0x33e91056,0x38e7195b,0x25f5024c,0x2efb0b41,0x8c9ad761,0x8794de6c,0x9a86c57b,0x9188cc76,0xa0a2f355,0xabacfa58,0xb6bee14f,0xbdb0e842,0xd4ea9f09,0xdfe49604,0xc2f68d13,0xc9f8841e,0xf8d2bb3d,0xf3dcb230,0xeecea927,0xe5c0a02a,0x3c7a47b1,0x37744ebc,0x2a6655ab,0x21685ca6,0x10426385,0x1b4c6a88,0x65e719f,0xd507892,0x640a0fd9,0x6f0406d4,0x72161dc3,0x791814ce,0x48322bed,0x433c22e0,0x5e2e39f7,0x552030fa,0x1ec9ab7,0xae293ba,0x17f088ad,0x1cfe81a0,0x2dd4be83,0x26dab78e,0x3bc8ac99,0x30c6a594,0x599cd2df,0x5292dbd2,0x4f80c0c5,0x448ec9c8,0x75a4f6eb,0x7eaaffe6,0x63b8e4f1,0x68b6edfc,0xb10c0a67,0xba02036a,0xa710187d,0xac1e1170,0x9d342e53,0x963a275e,0x8b283c49,0x80263544,0xe97c420f,0xe2724b02,0xff605015,0xf46e5918,0xc544663b,0xce4a6f36,0xd3587421,0xd8567d2c,0x7a37a10c,0x7139a801,0x6c2bb316,0x6725ba1b,0x560f8538,0x5d018c35,0x40139722,0x4b1d9e2f,0x2247e964,0x2949e069,0x345bfb7e,0x3f55f273,0xe7fcd50,0x571c45d,0x1863df4a,0x136dd647,0xcad731dc,0xc1d938d1,0xdccb23c6,0xd7c52acb,0xe6ef15e8,0xede11ce5,0xf0f307f2,0xfbfd0eff,0x92a779b4,0x99a970b9,0x84bb6bae,0x8fb562a3,0xbe9f5d80,0xb591548d,0xa8834f9a,0xa38d4697],dY=[0,0xd0b0e09,0x1a161c12,0x171d121b,0x342c3824,0x3927362d,0x2e3a2436,0x23312a3f,0x68587048,0x65537e41,0x724e6c5a,0x7f456253,0x5c74486c,0x517f4665,0x4662547e,0x4b695a77,0xd0b0e090,0xddbbee99,0xcaa6fc82,0xc7adf28b,0xe49cd8b4,0xe997d6bd,0xfe8ac4a6,0xf381caaf,0xb8e890d8,0xb5e39ed1,0xa2fe8cca,0xaff582c3,0x8cc4a8fc,0x81cfa6f5,0x96d2b4ee,0x9bd9bae7,0xbb7bdb3b,0xb670d532,0xa16dc729,0xac66c920,0x8f57e31f,0x825ced16,0x9541ff0d,0x984af104,0xd323ab73,0xde28a57a,0xc935b761,0xc43eb968,0xe70f9357,0xea049d5e,0xfd198f45,0xf012814c,0x6bcb3bab,0x66c035a2,0x71dd27b9,0x7cd629b0,0x5fe7038f,0x52ec0d86,0x45f11f9d,0x48fa1194,0x3934be3,0xe9845ea,0x198557f1,0x148e59f8,0x37bf73c7,0x3ab47dce,0x2da96fd5,0x20a261dc,0x6df6ad76,0x60fda37f,0x77e0b164,0x7aebbf6d,0x59da9552,0x54d19b5b,0x43cc8940,0x4ec78749,0x5aedd3e,0x8a5d337,0x1fb8c12c,0x12b3cf25,0x3182e51a,0x3c89eb13,0x2b94f908,0x269ff701,0xbd464de6,0xb04d43ef,0xa75051f4,0xaa5b5ffd,0x896a75c2,0x84617bcb,0x937c69d0,0x9e7767d9,0xd51e3dae,0xd81533a7,0xcf0821bc,0xc2032fb5,0xe132058a,0xec390b83,0xfb241998,0xf62f1791,0xd68d764d,0xdb867844,0xcc9b6a5f,0xc1906456,0xe2a14e69,0xefaa4060,0xf8b7527b,0xf5bc5c72,0xbed50605,0xb3de080c,0xa4c31a17,0xa9c8141e,0x8af93e21,0x87f23028,0x90ef2233,0x9de42c3a,0x63d96dd,0xb3698d4,0x1c2b8acf,0x112084c6,0x3211aef9,0x3f1aa0f0,0x2807b2eb,0x250cbce2,0x6e65e695,0x636ee89c,0x7473fa87,0x7978f48e,0x5a49deb1,0x5742d0b8,0x405fc2a3,0x4d54ccaa,0xdaf741ec,0xd7fc4fe5,0xc0e15dfe,0xcdea53f7,0xeedb79c8,0xe3d077c1,0xf4cd65da,0xf9c66bd3,0xb2af31a4,0xbfa43fad,0xa8b92db6,0xa5b223bf,0x86830980,0x8b880789,0x9c951592,0x919e1b9b,0xa47a17c,0x74caf75,0x1051bd6e,0x1d5ab367,1047239e3,0x33609751,0x247d854a,0x29768b43,0x621fd134,0x6f14df3d,0x7809cd26,0x7502c32f,0x5633e910,0x5b38e719,0x4c25f502,0x412efb0b,0x618c9ad7,0x6c8794de,0x7b9a86c5,0x769188cc,0x55a0a2f3,0x58abacfa,0x4fb6bee1,0x42bdb0e8,0x9d4ea9f,0x4dfe496,0x13c2f68d,0x1ec9f884,0x3df8d2bb,0x30f3dcb2,0x27eecea9,0x2ae5c0a0,0xb13c7a47,0xbc37744e,0xab2a6655,0xa621685c,0x85104263,0x881b4c6a,0x9f065e71,0x920d5078,0xd9640a0f,0xd46f0406,0xc372161d,0xce791814,0xed48322b,0xe0433c22,0xf75e2e39,0xfa552030,0xb701ec9a,0xba0ae293,0xad17f088,0xa01cfe81,0x832dd4be,0x8e26dab7,0x993bc8ac,0x9430c6a5,0xdf599cd2,0xd25292db,0xc54f80c0,0xc8448ec9,0xeb75a4f6,0xe67eaaff,0xf163b8e4,0xfc68b6ed,0x67b10c0a,0x6aba0203,0x7da71018,0x70ac1e11,0x539d342e,0x5e963a27,0x498b283c,0x44802635,0xfe97c42,0x2e2724b,0x15ff6050,0x18f46e59,0x3bc54466,0x36ce4a6f,0x21d35874,0x2cd8567d,0xc7a37a1,0x17139a8,0x166c2bb3,0x1b6725ba,0x38560f85,0x355d018c,0x22401397,0x2f4b1d9e,0x642247e9,0x692949e0,0x7e345bfb,0x733f55f2,0x500e7fcd,0x5d0571c4,0x4a1863df,0x47136dd6,0xdccad731,0xd1c1d938,0xc6dccb23,0xcbd7c52a,0xe8e6ef15,0xe5ede11c,0xf2f0f307,0xfffbfd0e,0xb492a779,0xb999a970,0xae84bb6b,0xa38fb562,0x80be9f5d,0x8db59154,0x9aa8834f,0x97a38d46],dZ=[0,0x90d0b0e,0x121a161c,0x1b171d12,0x24342c38,0x2d392736,0x362e3a24,0x3f23312a,0x48685870,0x4165537e,0x5a724e6c,0x537f4562,0x6c5c7448,0x65517f46,0x7e466254,0x774b695a,0x90d0b0e0,0x99ddbbee,0x82caa6fc,0x8bc7adf2,0xb4e49cd8,0xbde997d6,0xa6fe8ac4,0xaff381ca,0xd8b8e890,0xd1b5e39e,0xcaa2fe8c,0xc3aff582,0xfc8cc4a8,0xf581cfa6,0xee96d2b4,0xe79bd9ba,0x3bbb7bdb,0x32b670d5,0x29a16dc7,0x20ac66c9,0x1f8f57e3,0x16825ced,0xd9541ff,0x4984af1,0x73d323ab,0x7ade28a5,0x61c935b7,0x68c43eb9,0x57e70f93,0x5eea049d,0x45fd198f,0x4cf01281,0xab6bcb3b,0xa266c035,0xb971dd27,0xb07cd629,0x8f5fe703,0x8652ec0d,0x9d45f11f,0x9448fa11,0xe303934b,0xea0e9845,0xf1198557,0xf8148e59,0xc737bf73,0xce3ab47d,0xd52da96f,0xdc20a261,0x766df6ad,0x7f60fda3,0x6477e0b1,0x6d7aebbf,0x5259da95,0x5b54d19b,0x4043cc89,0x494ec787,0x3e05aedd,0x3708a5d3,0x2c1fb8c1,0x2512b3cf,0x1a3182e5,0x133c89eb,0x82b94f9,0x1269ff7,0xe6bd464d,0xefb04d43,0xf4a75051,0xfdaa5b5f,0xc2896a75,0xcb84617b,0xd0937c69,0xd99e7767,0xaed51e3d,0xa7d81533,0xbccf0821,0xb5c2032f,0x8ae13205,0x83ec390b,0x98fb2419,0x91f62f17,0x4dd68d76,0x44db8678,0x5fcc9b6a,0x56c19064,0x69e2a14e,0x60efaa40,0x7bf8b752,0x72f5bc5c,0x5bed506,0xcb3de08,0x17a4c31a,0x1ea9c814,0x218af93e,679998e3,0x3390ef22,0x3a9de42c,0xdd063d96,0xd40b3698,0xcf1c2b8a,0xc6112084,0xf93211ae,0xf03f1aa0,0xeb2807b2,0xe2250cbc,0x956e65e6,0x9c636ee8,0x877473fa,0x8e7978f4,0xb15a49de,0xb85742d0,0xa3405fc2,0xaa4d54cc,0xecdaf741,0xe5d7fc4f,0xfec0e15d,0xf7cdea53,0xc8eedb79,0xc1e3d077,0xdaf4cd65,0xd3f9c66b,0xa4b2af31,0xadbfa43f,0xb6a8b92d,0xbfa5b223,0x80868309,0x898b8807,0x929c9515,0x9b919e1b,0x7c0a47a1,0x75074caf,0x6e1051bd,0x671d5ab3,0x583e6b99,0x51336097,0x4a247d85,0x4329768b,0x34621fd1,0x3d6f14df,0x267809cd,0x2f7502c3,0x105633e9,0x195b38e7,0x24c25f5,0xb412efb,0xd7618c9a,0xde6c8794,0xc57b9a86,0xcc769188,0xf355a0a2,0xfa58abac,0xe14fb6be,0xe842bdb0,0x9f09d4ea,0x9604dfe4,0x8d13c2f6,0x841ec9f8,0xbb3df8d2,0xb230f3dc,0xa927eece,0xa02ae5c0,0x47b13c7a,0x4ebc3774,0x55ab2a66,0x5ca62168,0x63851042,0x6a881b4c,0x719f065e,0x78920d50,0xfd9640a,0x6d46f04,0x1dc37216,0x14ce7918,0x2bed4832,0x22e0433c,0x39f75e2e,0x30fa5520,0x9ab701ec,0x93ba0ae2,0x88ad17f0,0x81a01cfe,0xbe832dd4,0xb78e26da,0xac993bc8,0xa59430c6,0xd2df599c,0xdbd25292,0xc0c54f80,0xc9c8448e,0xf6eb75a4,0xffe67eaa,0xe4f163b8,0xedfc68b6,0xa67b10c,0x36aba02,0x187da710,0x1170ac1e,0x2e539d34,0x275e963a,0x3c498b28,0x35448026,0x420fe97c,0x4b02e272,0x5015ff60,0x5918f46e,0x663bc544,0x6f36ce4a,0x7421d358,0x7d2cd856,0xa10c7a37,0xa8017139,0xb3166c2b,0xba1b6725,0x8538560f,0x8c355d01,0x97224013,0x9e2f4b1d,0xe9642247,0xe0692949,0xfb7e345b,0xf2733f55,0xcd500e7f,0xc45d0571,0xdf4a1863,0xd647136d,0x31dccad7,0x38d1c1d9,0x23c6dccb,0x2acbd7c5,0x15e8e6ef,0x1ce5ede1,0x7f2f0f3,0xefffbfd,0x79b492a7,0x70b999a9,0x6bae84bb,0x62a38fb5,0x5d80be9f,0x548db591,0x4f9aa883,0x4697a38d];function d$(a){let b=[];for(let c=0;c<a.length;c+=4)b.push(a[c]<<24|a[c+1]<<16|a[c+2]<<8|a[c+3]);return b}class d_{get key(){return dI(this,d,"f").slice()}constructor(a){let b;if(d.set(this,void 0),e.set(this,void 0),f.set(this,void 0),!(this instanceof d_))throw Error("AES must be instanitated with `new`");dJ(this,d,new Uint8Array(a),"f");let c=dK[this.key.length];if(null==c)throw TypeError("invalid key size (must be 16, 24 or 32 bytes)");dJ(this,f,[],"f"),dJ(this,e,[],"f");for(let a=0;a<=c;a++)dI(this,f,"f").push([0,0,0,0]),dI(this,e,"f").push([0,0,0,0]);let g=(c+1)*4,h=this.key.length/4,i=d$(this.key);for(let a=0;a<h;a++)b=a>>2,dI(this,f,"f")[b][a%4]=i[a],dI(this,e,"f")[c-b][a%4]=i[a];let j=0,k=h,l;for(;k<g;){if(l=i[h-1],i[0]^=dM[l>>16&255]<<24^dM[l>>8&255]<<16^dM[255&l]<<8^dM[l>>24&255]^dL[j]<<24,j+=1,8!=h)for(let a=1;a<h;a++)i[a]^=i[a-1];else{for(let a=1;a<h/2;a++)i[a]^=i[a-1];l=i[h/2-1],i[h/2]^=dM[255&l]^dM[l>>8&255]<<8^dM[l>>16&255]<<16^dM[l>>24&255]<<24;for(let a=h/2+1;a<h;a++)i[a]^=i[a-1]}let a=0,b,d;for(;a<h&&k<g;)b=k>>2,d=k%4,dI(this,f,"f")[b][d]=i[a],dI(this,e,"f")[c-b][d]=i[a++],k++}for(let a=1;a<c;a++)for(let b=0;b<4;b++)l=dI(this,e,"f")[a][b],dI(this,e,"f")[a][b]=dW[l>>24&255]^dX[l>>16&255]^dY[l>>8&255]^dZ[255&l]}encrypt(a){if(16!=a.length)throw TypeError("invalid plaintext size (must be 16 bytes)");let b=dI(this,f,"f").length-1,c=[0,0,0,0],d=d$(a);for(let a=0;a<4;a++)d[a]^=dI(this,f,"f")[0][a];for(let a=1;a<b;a++){for(let b=0;b<4;b++)c[b]=dO[d[b]>>24&255]^dP[d[(b+1)%4]>>16&255]^dQ[d[(b+2)%4]>>8&255]^dR[255&d[(b+3)%4]]^dI(this,f,"f")[a][b];d=c.slice()}let e=new Uint8Array(16),g=0;for(let a=0;a<4;a++)g=dI(this,f,"f")[b][a],e[4*a]=(dM[d[a]>>24&255]^g>>24)&255,e[4*a+1]=(dM[d[(a+1)%4]>>16&255]^g>>16)&255,e[4*a+2]=(dM[d[(a+2)%4]>>8&255]^g>>8)&255,e[4*a+3]=(dM[255&d[(a+3)%4]]^g)&255;return e}decrypt(a){if(16!=a.length)throw TypeError("invalid ciphertext size (must be 16 bytes)");let b=dI(this,e,"f").length-1,c=[0,0,0,0],d=d$(a);for(let a=0;a<4;a++)d[a]^=dI(this,e,"f")[0][a];for(let a=1;a<b;a++){for(let b=0;b<4;b++)c[b]=dS[d[b]>>24&255]^dT[d[(b+3)%4]>>16&255]^dU[d[(b+2)%4]>>8&255]^dV[255&d[(b+1)%4]]^dI(this,e,"f")[a][b];d=c.slice()}let f=new Uint8Array(16),g=0;for(let a=0;a<4;a++)g=dI(this,e,"f")[b][a],f[4*a]=(dN[d[a]>>24&255]^g>>24)&255,f[4*a+1]=(dN[d[(a+3)%4]>>16&255]^g>>16)&255,f[4*a+2]=(dN[d[(a+2)%4]>>8&255]^g>>8)&255,f[4*a+3]=(dN[255&d[(a+1)%4]]^g)&255;return f}}d=new WeakMap,e=new WeakMap,f=new WeakMap;class d0{constructor(a,b,c){if(c&&!(this instanceof c))throw Error(`${a} must be instantiated with "new"`);Object.defineProperties(this,{aes:{enumerable:!0,value:new d_(b)},name:{enumerable:!0,value:a}})}}new WeakMap,new WeakMap;new WeakMap,new WeakMap,new WeakSet;var d1=function(a,b,c,d,e){if("m"===d)throw TypeError("Private method is not writable");if("a"===d&&!e)throw TypeError("Private accessor was defined without a setter");if("function"==typeof b?a!==b||!e:!b.has(a))throw TypeError("Cannot write private member to an object whose class did not declare it");return"a"===d?e.call(a,c):e?e.value=c:b.set(a,c),c},d2=function(a,b,c,d){if("a"===c&&!d)throw TypeError("Private accessor was defined without a getter");if("function"==typeof b?a!==b||!d:!b.has(a))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===c?d:"a"===c?d.call(a):d?d.value:b.get(a)};class d3 extends d0{constructor(a,b){super("CTR",a,d3),g.set(this,void 0),h.set(this,void 0),i.set(this,void 0),d1(this,i,new Uint8Array(16),"f"),d2(this,i,"f").fill(0),d1(this,g,d2(this,i,"f"),"f"),d1(this,h,16,"f"),null==b&&(b=1),"number"==typeof b?this.setCounterValue(b):this.setCounterBytes(b)}get counter(){return new Uint8Array(d2(this,i,"f"))}setCounterValue(a){if(!Number.isInteger(a)||a<0||a>Number.MAX_SAFE_INTEGER)throw TypeError("invalid counter initial integer value");for(let b=15;b>=0;--b)d2(this,i,"f")[b]=a%256,a=Math.floor(a/256)}setCounterBytes(a){if(16!==a.length)throw TypeError("invalid counter initial Uint8Array value length");d2(this,i,"f").set(a)}increment(){for(let a=15;a>=0;a--)if(255===d2(this,i,"f")[a])d2(this,i,"f")[a]=0;else{d2(this,i,"f")[a]++;break}}encrypt(a){var b,c;let d=new Uint8Array(a);for(let a=0;a<d.length;a++)16===d2(this,h,"f")&&(d1(this,g,this.aes.encrypt(d2(this,i,"f")),"f"),d1(this,h,0,"f"),this.increment()),d[a]^=d2(this,g,"f")[d1(this,h,(c=d2(this,h,"f"),b=c++,c),"f"),b];return d}decrypt(a){return this.encrypt(a)}}function d4(a,b,c,d){var e;let f,{c:g,dkLen:h,DK:i,PRF:j,PRFSalt:k}=function(a,b,c,d){ak(a);let{c:e,dkLen:f,asyncTick:g}=ay({dkLen:32,asyncTick:10},d);if(ai(e),ai(f),ai(g),e<1)throw Error("PBKDF2: iterations (c) should be >= 1");let h=av(b),i=av(c),j=new Uint8Array(f),k=bx.create(a,h),l=k._cloneInto().update(i);return{c:e,dkLen:f,asyncTick:g,DK:j,PRF:k,PRFSalt:l}}(a,b,c,d),l=new Uint8Array(4),m=ar(l),n=new Uint8Array(j.outputLen);for(let a=1,b=0;b<h;a++,b+=j.outputLen){let c=i.subarray(b,b+j.outputLen);m.setInt32(0,a,!1),(f=k._cloneInto(f)).update(l).digestInto(n),c.set(n.subarray(0,c.length));for(let a=1;a<g;a++){j._cloneInto(f).update(n).digestInto(n);for(let a=0;a<c.length;a++)c[a]^=n[a]}}return e=f,j.destroy(),k.destroy(),e&&e.destroy(),n.fill(0),i}g=new WeakMap,h=new WeakMap,i=new WeakMap,new WeakMap,new WeakMap,new WeakMap;let d5=(a,b)=>a<<b|a>>>32-b;function d6(a,b,c,d,e,f){let g=a[b++]^c[d++],h=a[b++]^c[d++],i=a[b++]^c[d++],j=a[b++]^c[d++],k=a[b++]^c[d++],l=a[b++]^c[d++],m=a[b++]^c[d++],n=a[b++]^c[d++],o=a[b++]^c[d++],p=a[b++]^c[d++],q=a[b++]^c[d++],r=a[b++]^c[d++],s=a[b++]^c[d++],t=a[b++]^c[d++],u=a[b++]^c[d++],v=a[b++]^c[d++],w=g,x=h,y=i,z=j,A=k,B=l,C=m,D=n,E=o,F=p,G=q,H=r,I=s,J=t,K=u,L=v;for(let a=0;a<8;a+=2)A^=d5(w+I|0,7),E^=d5(A+w|0,9),I^=d5(E+A|0,13),w^=d5(I+E|0,18),F^=d5(B+x|0,7),J^=d5(F+B|0,9),x^=d5(J+F|0,13),B^=d5(x+J|0,18),K^=d5(G+C|0,7),y^=d5(K+G|0,9),C^=d5(y+K|0,13),G^=d5(C+y|0,18),z^=d5(L+H|0,7),D^=d5(z+L|0,9),H^=d5(D+z|0,13),L^=d5(H+D|0,18),x^=d5(w+z|0,7),y^=d5(x+w|0,9),z^=d5(y+x|0,13),w^=d5(z+y|0,18),C^=d5(B+A|0,7),D^=d5(C+B|0,9),A^=d5(D+C|0,13),B^=d5(A+D|0,18),H^=d5(G+F|0,7),E^=d5(H+G|0,9),F^=d5(E+H|0,13),G^=d5(F+E|0,18),I^=d5(L+K|0,7),J^=d5(I+L|0,9),K^=d5(J+I|0,13),L^=d5(K+J|0,18);e[f++]=g+w|0,e[f++]=h+x|0,e[f++]=i+y|0,e[f++]=j+z|0,e[f++]=k+A|0,e[f++]=l+B|0,e[f++]=m+C|0,e[f++]=n+D|0,e[f++]=o+E|0,e[f++]=p+F|0,e[f++]=q+G|0,e[f++]=r+H|0,e[f++]=s+I|0,e[f++]=t+J|0,e[f++]=u+K|0,e[f++]=v+L|0}function d7(a,b,c,d,e){let f=d+0,g=d+16*e;for(let d=0;d<16;d++)c[g+d]=a[b+(2*e-1)*16+d];for(let d=0;d<e;d++,f+=16,b+=16)d6(c,g,a,b,c,f),d>0&&(g+=16),d6(c,f,a,b+=16,c,g)}function d8(a,b,c){let{N:d,r:e,p:f,dkLen:g,asyncTick:h,maxmem:i,onProgress:j}=ay({dkLen:32,asyncTick:10,maxmem:0x40000400},c);if(ai(d),ai(e),ai(f),ai(g),ai(h),ai(i),void 0!==j&&"function"!=typeof j)throw Error("progressCb should be function");let k=128*e,l=k/4;if(d<=1||(d&d-1)!=0||d>=2**(k/8)||d>0x100000000)throw Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(f<0||f>(0x100000000-1)*32/k)throw Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(g<0||g>(0x100000000-1)*32)throw Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");let m=k*(d+f);if(m>i)throw Error(`Scrypt: parameters too large, ${m} (128 * r * (N + p)) > ${i} (maxmem)`);let n=d4(a_,a,b,{c:1,dkLen:k*f}),o=aq(n),p=aq(new Uint8Array(k*d)),q=aq(new Uint8Array(k)),r=()=>{};if(j){let a=2*d*f,b=Math.max(Math.floor(a/1e4),1),c=0;r=()=>{c++,j&&(!(c%b)||c===a)&&j(c/a)}}return{N:d,r:e,p:f,dkLen:g,blockSize32:l,V:p,B32:o,B:n,tmp:q,blockMixCb:r,asyncTick:h}}function d9(a,b,c,d,e){let f=d4(a_,a,c,{c:1,dkLen:b});return c.fill(0),d.fill(0),e.fill(0),f}async function ea(a,b,c){let{N:d,r:e,p:f,dkLen:g,blockSize32:h,V:i,B32:j,B:k,tmp:l,blockMixCb:m,asyncTick:n}=d8(a,b,c);for(let a=0;a<f;a++){let b=h*a;for(let a=0;a<h;a++)i[a]=j[b+a];let c=0;await au(d-1,n,()=>{d7(i,c,i,c+=h,e),m()}),d7(i,(d-1)*h,j,b,e),m(),await au(d,n,()=>{let a=j[b+h-16]%d;for(let c=0;c<h;c++)l[c]=j[b+c]^i[a*h+c];d7(l,0,j,b,e),m()})}return d9(a,g,k,i,l)}let eb=!1,ec=!1,ed=async function(a,b,c,d,e,f,g){return await ea(a,b,{N:c,r:d,p:e,dkLen:f,onProgress:g})},ee=function(a,b,c,d,e,f){return function(a,b,c){let{N:d,r:e,p:f,dkLen:g,blockSize32:h,V:i,B32:j,B:k,tmp:l,blockMixCb:m}=d8(a,b,c);for(let a=0;a<f;a++){let b=h*a;for(let a=0;a<h;a++)i[a]=j[b+a];for(let a=0,b=0;a<d-1;a++)d7(i,b,i,b+=h,e),m();d7(i,(d-1)*h,j,b,e),m();for(let a=0;a<d;a++){let a=j[b+h-16]%d;for(let c=0;c<h;c++)l[c]=j[b+c]^i[a*h+c];d7(l,0,j,b,e),m()}}return d9(a,g,k,i,l)}(a,b,{N:c,r:d,p:e,dkLen:f})},ef=ed,eg=ee;async function eh(a,b,c,d,e,f,g){let h=O(a,"passwd"),i=O(b,"salt");return T(await ef(h,i,c,d,e,f,g))}function ei(a,b,c,d,e,f){let g=O(a,"passwd"),h=O(b,"salt");return T(eg(g,h,c,d,e,f))}function ej(a,b){for(a=String(a);a.length<b;)a="0"+a;return a}function ek(a){return"string"==typeof a?da(a,"NFKC"):P(a)}function el(a){let b=null!=a.salt?O(a.salt,"options.salt"):b8(32),c=131072,d=8,e=1;return a.scrypt&&(a.scrypt.N&&(c=a.scrypt.N),a.scrypt.r&&(d=a.scrypt.r),a.scrypt.p&&(e=a.scrypt.p)),J("number"==typeof c&&c>0&&Number.isSafeInteger(c)&&(BigInt(c)&BigInt(c-1))===BigInt(0),"invalid scrypt N parameter","options.N",c),J("number"==typeof d&&d>0&&Number.isSafeInteger(d),"invalid scrypt r parameter","options.r",d),J("number"==typeof e&&e>0&&Number.isSafeInteger(e),"invalid scrypt p parameter","options.p",e),{name:"scrypt",dkLen:32,salt:b,N:c,r:d,p:e}}function em(a,b,c,d){let e=O(c.privateKey,"privateKey"),f=null!=d.iv?O(d.iv,"options.iv"):b8(16);J(16===f.length,"invalid options.iv length","options.iv",d.iv);let g=null!=d.uuid?O(d.uuid,"options.uuid"):b8(16);J(16===g.length,"invalid options.uuid length","options.uuid",d.iv);let h=a.slice(0,16),i=a.slice(16,32),j=O(new d3(h,f).encrypt(e)),k=ct(U([i,j])),l={address:c.address.substring(2).toLowerCase(),id:function(a){let b=O(a,"randomBytes");b[6]=15&b[6]|64,b[8]=63&b[8]|128;let c=T(b);return[c.substring(2,10),c.substring(10,14),c.substring(14,18),c.substring(18,22),c.substring(22,34)].join("-")}(g),version:3,Crypto:{cipher:"aes-128-ctr",cipherparams:{iv:T(f).substring(2)},ciphertext:T(j).substring(2),kdf:"scrypt",kdfparams:{salt:T(b.salt).substring(2),n:b.N,dklen:32,p:b.p,r:b.r},mac:k.substring(2)}};if(c.mnemonic){let b=null!=d.client?d.client:`ethers/${D}`,e=c.mnemonic.path||"m/44'/60'/0'/0/0",f=c.mnemonic.locale||"en",g=a.slice(32,64),h=O(c.mnemonic.entropy,"account.mnemonic.entropy"),i=b8(16),j=O(new d3(g,i).encrypt(h)),k=new Date,m="UTC--"+(k.getUTCFullYear()+"-"+ej(k.getUTCMonth()+1,2)+"-"+ej(k.getUTCDate(),2)+"T"+ej(k.getUTCHours(),2)+"-"+ej(k.getUTCMinutes(),2)+"-"+ej(k.getUTCSeconds(),2))+".0Z--"+l.address;l["x-ethers"]={client:b,gethFilename:m,path:e,locale:f,mnemonicCounter:T(i).substring(2),mnemonicCiphertext:T(j).substring(2),version:"0.1"}}return JSON.stringify(l)}async function en(a,b,c){null==c&&(c={});let d=ek(b),e=el(c);return em(O(await eh(d,e.salt,e.N,e.r,e.p,64,c.progressCallback)),e,a,c)}eh._=ed,eh.lock=function(){ec=!0},eh.register=function(a){if(ec)throw Error("scrypt is locked");ef=a},Object.freeze(eh),ei._=ee,ei.lock=function(){eb=!0},ei.register=function(a){if(eb)throw Error("scryptSync is locked");eg=a},Object.freeze(ei);let eo="m/44'/60'/0'/0/0",ep=new Uint8Array([66,105,116,99,111,105,110,32,115,101,101,100]),eq=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");function er(a,b){let c="";for(;a;)c="0123456789abcdef"[a%16]+c,a=Math.trunc(a/16);for(;c.length<2*b;)c="0"+c;return"0x"+c}function es(a){let b=O(a),c=W(ac(ac(b)),0,4),d=O(U([b,c])),e=bT(d),f="";for(;e;)f=c5[Number(e%c8)]+f,e/=c8;for(let a=0;a<d.length&&!d[a];a++)f=c5[0]+f;return f}let et={};function eu(a,b,c,d){let e=new Uint8Array(37);0x80000000&a?(I(null!=d,"cannot derive child of neutered node","UNSUPPORTED_OPERATION",{operation:"deriveChild"}),e.set(O(d),1)):e.set(O(c));for(let b=24;b>=0;b-=8)e[33+(b>>3)]=a>>24-b&255;let f=O(ah("sha512",b,e));return{IL:f.slice(0,32),IR:f.slice(32)}}function ev(a,b){let c=b.split("/");J(c.length>0,"invalid path","path",b),"m"===c[0]&&(J(0===a.depth,`cannot derive root path (i.e. path starting with "m/") for a node at non-zero depth ${a.depth}`,"path",b),c.shift());let d=a;for(let a=0;a<c.length;a++){let b=c[a];if(b.match(/^[0-9]+'$/)){let c=parseInt(b.substring(0,b.length-1));J(c<0x80000000,"invalid path index",`path[${a}]`,b),d=d.deriveChild(0x80000000+c)}else if(b.match(/^[0-9]+$/)){let c=parseInt(b);J(c<0x80000000,"invalid path index",`path[${a}]`,b),d=d.deriveChild(c)}else J(!1,"invalid path component",`path[${a}]`,b)}return d}class ew extends dy{publicKey;fingerprint;parentFingerprint;mnemonic;chainCode;path;index;depth;constructor(a,b,c,d,e,f,g,h,i){super(b,i),M(a,et,"HDNodeWallet"),F(this,{publicKey:b.compressedPublicKey}),F(this,{parentFingerprint:c,fingerprint:W(aU(ac(this.publicKey)),0,4),chainCode:d,path:e,index:f,depth:g}),F(this,{mnemonic:h})}connect(a){return new ew(et,this.signingKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,this.mnemonic,a)}#G(){let a={address:this.address,privateKey:this.privateKey},b=this.mnemonic;return this.path&&b&&"en"===b.wordlist.locale&&""===b.password&&(a.mnemonic={path:this.path,locale:"en",entropy:b.entropy}),a}async encrypt(a,b){return await en(this.#G(),a,{progressCallback:b})}encryptSync(a){return function(a,b,c){null==c&&(c={});let d=ek(b),e=el(c);return em(O(ei(d,e.salt,e.N,e.r,e.p,64)),e,a,c)}(this.#G(),a)}get extendedKey(){return I(this.depth<256,"Depth too deep","UNSUPPORTED_OPERATION",{operation:"extendedKey"}),es(U(["0x0488ADE4",er(this.depth,1),this.parentFingerprint,er(this.index,4),this.chainCode,U(["0x00",this.privateKey])]))}hasPath(){return null!=this.path}neuter(){return new ex(et,this.address,this.publicKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,this.provider)}deriveChild(a){let b=bU(a,"index");J(b<=0xffffffff,"invalid index","index",b);let c=this.path;c&&(c+="/"+(0x7fffffff&b),0x80000000&b&&(c+="'"));let{IR:d,IL:e}=eu(b,this.chainCode,this.publicKey,this.privateKey);return new ew(et,new b4(bV((bT(e)+BigInt(this.privateKey))%eq,32)),this.fingerprint,T(d),c,b,this.depth+1,this.mnemonic,this.provider)}derivePath(a){return ev(this,a)}static #H(a,b){J(R(a),"invalid seed","seed","[REDACTED]");let c=O(a,"seed");J(c.length>=16&&c.length<=64,"invalid seed","seed","[REDACTED]");let d=O(ah("sha512",ep,c));return new ew(et,new b4(T(d.slice(0,32))),"0x00000000",T(d.slice(32)),"m",0,0,b,null)}static fromExtendedKey(a){let b=bW(function(a){let b=c7;for(let c=0;c<a.length;c++)b*=c8,b+=function(a){if(null==c6){c6={};for(let a=0;a<c5.length;a++)c6[c5[a]]=BigInt(a)}let b=c6[a];return J(null!=b,"invalid base58 value","letter",a),b}(a[c]);return b}(a));J(82===b.length||es(b.slice(0,78))===a,"invalid extended key","extendedKey","[ REDACTED ]");let c=b[4],d=T(b.slice(5,9)),e=parseInt(T(b.slice(9,13)).substring(2),16),f=T(b.slice(13,45)),g=b.slice(45,78);switch(T(b.slice(0,4))){case"0x0488b21e":case"0x043587cf":{let a=T(g);return new ex(et,cM(a),a,d,f,null,e,c,null)}case"0x0488ade4":case"0x04358394 ":if(0!==g[0])break;return new ew(et,new b4(g.slice(1)),d,f,null,e,c,null,null)}J(!1,"invalid extended key prefix","extendedKey","[ REDACTED ]")}static createRandom(a,b,c){null==a&&(a=""),null==b&&(b=eo),null==c&&(c=dh.wordlist());let d=dH.fromEntropy(b8(16),a,c);return ew.#H(d.computeSeed(),d).derivePath(b)}static fromMnemonic(a,b){return b||(b=eo),ew.#H(a.computeSeed(),a).derivePath(b)}static fromPhrase(a,b,c,d){null==b&&(b=""),null==c&&(c=eo),null==d&&(d=dh.wordlist());let e=dH.fromPhrase(a,b,d);return ew.#H(e.computeSeed(),e).derivePath(c)}static fromSeed(a){return ew.#H(a,null)}}class ex extends c4{publicKey;fingerprint;parentFingerprint;chainCode;path;index;depth;constructor(a,b,c,d,e,f,g,h,i){super(b,i),M(a,et,"HDNodeVoidWallet"),F(this,{publicKey:c});let j=W(aU(ac(c)),0,4);F(this,{publicKey:c,fingerprint:j,parentFingerprint:d,chainCode:e,path:f,index:g,depth:h})}connect(a){return new ex(et,this.address,this.publicKey,this.parentFingerprint,this.chainCode,this.path,this.index,this.depth,a)}get extendedKey(){return I(this.depth<256,"Depth too deep","UNSUPPORTED_OPERATION",{operation:"extendedKey"}),es(U(["0x0488B21E",er(this.depth,1),this.parentFingerprint,er(this.index,4),this.chainCode,this.publicKey]))}hasPath(){return null!=this.path}deriveChild(a){let b=bU(a,"index");J(b<=0xffffffff,"invalid index","index",b);let c=this.path;c&&(c+="/"+(0x7fffffff&b),0x80000000&b&&(c+="'"));let{IR:d,IL:e}=eu(b,this.chainCode,this.publicKey,null),f=b4.addPoints(e,this.publicKey,!0);return new ex(et,cM(f),f,this.fingerprint,T(d),c,b,this.depth+1,this.provider)}derivePath(a){return ev(this,a)}}var ey=c(29019);let ez=async a=>{let b=parseInt((0,C.createHash)("sha256").update(a).digest("hex").slice(0,8),16)%0x80000000,c=(0,ey.kw)("legal winner thank year wave sausage worth useful legal winner thank yellow"),d=ew.fromSeed(c).derivePath(`m/44'/60'/${b}/0`);return console.log(d.address),{wallet:d,userId:a}};var eA=c(95012);let eB={randomUUID:an.randomUUID},eC=new Uint8Array(256),eD=eC.length,eE=[];for(let a=0;a<256;++a)eE.push((a+256).toString(16).slice(1));let eF=function(a,b,c){if(eB.randomUUID&&!b&&!a)return eB.randomUUID();var d=a,e=c;let f=(d=d||{}).random??d.rng?.()??(eD>eC.length-16&&((0,an.randomFillSync)(eC),eD=0),eC.slice(eD,eD+=16));if(f.length<16)throw Error("Random bytes length must be >= 16");if(f[6]=15&f[6]|64,f[8]=63&f[8]|128,b){if((e=e||0)<0||e+16>b.length)throw RangeError(`UUID byte range ${e}:${e+15} is out of buffer bounds`);for(let a=0;a<16;++a)b[e+a]=f[a];return b}return function(a,b=0){return(eE[a[b+0]]+eE[a[b+1]]+eE[a[b+2]]+eE[a[b+3]]+"-"+eE[a[b+4]]+eE[a[b+5]]+"-"+eE[a[b+6]]+eE[a[b+7]]+"-"+eE[a[b+8]]+eE[a[b+9]]+"-"+eE[a[b+10]]+eE[a[b+11]]+eE[a[b+12]]+eE[a[b+13]]+eE[a[b+14]]+eE[a[b+15]]).toLowerCase()}(f)};async function eG(a){try{let b=await a.json();if(!b.email||!b.password||!b.name)return B.NextResponse.json({error:"Missing email, password or name"},{status:400});let{email:c,password:d,name:e,extWallet:f}=b,g=eF(),h=await ez(g),i=await eA.z.user.create({data:{id:g,name:e,email:c,password:d,walletAddress:h.wallet.address,privateKey:h.wallet.privateKey,connectedWallet:f||eF()}});return B.NextResponse.json({wallet:i.walletAddress},{status:200})}catch(a){return console.log(a),B.NextResponse.json({error:a instanceof Error?a.message:"Internal server error"},{status:500})}}let eH=new l.AppRouteRouteModule({definition:{kind:m.RouteKind.APP_ROUTE,page:"/api/create-wallet/route",pathname:"/api/create-wallet",filename:"route",bundlePath:"app/api/create-wallet/route"},distDir:".next",relativeProjectDir:"",resolvedPagePath:"/home/fabxdev/arenafi/app/arenafi-fe/app/api/create-wallet/route.ts",nextConfigOutput:"",userland:k}),{workAsyncStorage:eI,workUnitAsyncStorage:eJ,serverHooks:eK}=eH;function eL(){return(0,n.patchFetch)({workAsyncStorage:eI,workUnitAsyncStorage:eJ})}async function eM(a,b,c){var d;let e="/api/create-wallet/route";"/index"===e&&(e="/");let f=await eH.prepare(a,b,{srcPage:e,multiZoneDraftMode:!1});if(!f)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:g,params:h,nextConfig:i,isDraftMode:j,prerenderManifest:k,routerServerContext:l,isOnDemandRevalidate:n,revalidateOnlyGenerated:B,resolvedPathname:C}=f,D=(0,q.normalizeAppPath)(e),E=!!(k.dynamicRoutes[D]||k.routes[C]);if(E&&!j){let a=!!k.routes[C],b=k.dynamicRoutes[D];if(b&&!1===b.fallback&&!a)throw new z.NoFallbackError}let F=null;!E||eH.isDev||j||(F="/index"===(F=C)?"/":F);let G=!0===eH.isDev||!E,H=E&&!G,I=a.method||"GET",J=(0,p.getTracer)(),K=J.getActiveScopeSpan(),L={params:h,prerenderManifest:k,renderOpts:{experimental:{cacheComponents:!!i.experimental.cacheComponents,authInterrupts:!!i.experimental.authInterrupts},supportsDynamicResponse:G,incrementalCache:(0,o.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=i.experimental)?void 0:d.cacheLife,isRevalidate:H,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>eH.onRequestError(a,b,d,l)},sharedContext:{buildId:g}},M=new r.NodeNextRequest(a),N=new r.NodeNextResponse(b),O=s.NextRequestAdapter.fromNodeNextRequest(M,(0,s.signalFromNodeResponse)(b));try{let d=async c=>eH.handle(O,L).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=J.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==t.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${I} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${I} ${a.url}`)}),f=async f=>{var g,h;let p=async({previousCacheEntry:g})=>{try{if(!(0,o.getRequestMeta)(a,"minimalMode")&&n&&B&&!g)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(f);a.fetchMetrics=L.renderOpts.fetchMetrics;let h=L.renderOpts.pendingWaitUntil;h&&c.waitUntil&&(c.waitUntil(h),h=void 0);let i=L.renderOpts.collectedTags;if(!E)return await (0,v.I)(M,N,e,L.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,w.toNodeOutgoingHttpHeaders)(e.headers);i&&(b[y.NEXT_CACHE_TAGS_HEADER]=i),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==L.renderOpts.collectedRevalidate&&!(L.renderOpts.collectedRevalidate>=y.INFINITE_CACHE)&&L.renderOpts.collectedRevalidate,d=void 0===L.renderOpts.collectedExpire||L.renderOpts.collectedExpire>=y.INFINITE_CACHE?void 0:L.renderOpts.collectedExpire;return{value:{kind:A.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==g?void 0:g.isStale)&&await eH.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,u.c)({isRevalidate:H,isOnDemandRevalidate:n})},l),b}},q=await eH.handleResponse({req:a,nextConfig:i,cacheKey:F,routeKind:m.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:k,isRoutePPREnabled:!1,isOnDemandRevalidate:n,revalidateOnlyGenerated:B,responseGenerator:p,waitUntil:c.waitUntil});if(!E)return null;if((null==q||null==(g=q.value)?void 0:g.kind)!==A.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==q||null==(h=q.value)?void 0:h.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,o.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",n?"REVALIDATED":q.isMiss?"MISS":q.isStale?"STALE":"HIT"),j&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let r=(0,w.fromNodeOutgoingHttpHeaders)(q.value.headers);return(0,o.getRequestMeta)(a,"minimalMode")&&E||r.delete(y.NEXT_CACHE_TAGS_HEADER),!q.cacheControl||b.getHeader("Cache-Control")||r.get("Cache-Control")||r.set("Cache-Control",(0,x.getCacheControlHeader)(q.cacheControl)),await (0,v.I)(M,N,new Response(q.value.body,{headers:r,status:q.value.status||200})),null};K?await f(K):await J.withPropagatedContext(a.headers,()=>J.trace(t.BaseServerSpan.handleRequest,{spanName:`${I} ${a.url}`,kind:p.SpanKind.SERVER,attributes:{"http.method":I,"http.target":a.url}},f))}catch(b){if(b instanceof z.NoFallbackError||await eH.onRequestError(a,b,{routerKind:"App Router",routePath:D,routeType:"route",revalidateReason:(0,u.c)({isRevalidate:H,isOnDemandRevalidate:n})}),E)throw b;return await (0,v.I)(M,N,new Response(null,{status:500})),null}}},29294:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},38543:(a,b)=>{"use strict";function c(a){if(!Number.isSafeInteger(a)||a<0)throw Error(`Wrong positive integer: ${a}`)}function d(a){if("boolean"!=typeof a)throw Error(`Expected boolean, not ${a}`)}function e(a,...b){if(!(a instanceof Uint8Array))throw Error("Expected Uint8Array");if(b.length>0&&!b.includes(a.length))throw Error(`Expected Uint8Array of length ${b}, not of length=${a.length}`)}function f(a){if("function"!=typeof a||"function"!=typeof a.create)throw Error("Hash should be wrapped by utils.wrapConstructor");c(a.outputLen),c(a.blockLen)}function g(a,b=!0){if(a.destroyed)throw Error("Hash instance has been destroyed");if(b&&a.finished)throw Error("Hash#digest() has already been called")}function h(a,b){e(a);let c=b.outputLen;if(a.length<c)throw Error(`digestInto() expects output buffer of length at least ${c}`)}Object.defineProperty(b,"__esModule",{value:!0}),b.output=b.exists=b.hash=b.bytes=b.bool=b.number=void 0,b.number=c,b.bool=d,b.bytes=e,b.hash=f,b.exists=g,b.output=h,b.default={number:c,bool:d,bytes:e,hash:f,exists:g,output:h}},44870:a=>{"use strict";a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},49068:a=>{"use strict";a.exports=JSON.parse('["가격","가끔","가난","가능","가득","가르침","가뭄","가방","가상","가슴","가운데","가을","가이드","가입","가장","가정","가족","가죽","각오","각자","간격","간부","간섭","간장","간접","간판","갈등","갈비","갈색","갈증","감각","감기","감소","감수성","감자","감정","갑자기","강남","강당","강도","강력히","강변","강북","강사","강수량","강아지","강원도","강의","강제","강조","같이","개구리","개나리","개방","개별","개선","개성","개인","객관적","거실","거액","거울","거짓","거품","걱정","건강","건물","건설","건조","건축","걸음","검사","검토","게시판","게임","겨울","견해","결과","결국","결론","결석","결승","결심","결정","결혼","경계","경고","경기","경력","경복궁","경비","경상도","경영","경우","경쟁","경제","경주","경찰","경치","경향","경험","계곡","계단","계란","계산","계속","계약","계절","계층","계획","고객","고구려","고궁","고급","고등학생","고무신","고민","고양이","고장","고전","고집","고춧가루","고통","고향","곡식","골목","골짜기","골프","공간","공개","공격","공군","공급","공기","공동","공무원","공부","공사","공식","공업","공연","공원","공장","공짜","공책","공통","공포","공항","공휴일","과목","과일","과장","과정","과학","관객","관계","관광","관념","관람","관련","관리","관습","관심","관점","관찰","광경","광고","광장","광주","괴로움","굉장히","교과서","교문","교복","교실","교양","교육","교장","교직","교통","교환","교훈","구경","구름","구멍","구별","구분","구석","구성","구속","구역","구입","구청","구체적","국가","국기","국내","국립","국물","국민","국수","국어","국왕","국적","국제","국회","군대","군사","군인","궁극적","권리","권위","권투","귀국","귀신","규정","규칙","균형","그날","그냥","그늘","그러나","그룹","그릇","그림","그제서야","그토록","극복","극히","근거","근교","근래","근로","근무","근본","근원","근육","근처","글씨","글자","금강산","금고","금년","금메달","금액","금연","금요일","금지","긍정적","기간","기관","기념","기능","기독교","기둥","기록","기름","기법","기본","기분","기쁨","기숙사","기술","기억","기업","기온","기운","기원","기적","기준","기침","기혼","기획","긴급","긴장","길이","김밥","김치","김포공항","깍두기","깜빡","깨달음","깨소금","껍질","꼭대기","꽃잎","나들이","나란히","나머지","나물","나침반","나흘","낙엽","난방","날개","날씨","날짜","남녀","남대문","남매","남산","남자","남편","남학생","낭비","낱말","내년","내용","내일","냄비","냄새","냇물","냉동","냉면","냉방","냉장고","넥타이","넷째","노동","노란색","노력","노인","녹음","녹차","녹화","논리","논문","논쟁","놀이","농구","농담","농민","농부","농업","농장","농촌","높이","눈동자","눈물","눈썹","뉴욕","느낌","늑대","능동적","능력","다방","다양성","다음","다이어트","다행","단계","단골","단독","단맛","단순","단어","단위","단점","단체","단추","단편","단풍","달걀","달러","달력","달리","닭고기","담당","담배","담요","담임","답변","답장","당근","당분간","당연히","당장","대규모","대낮","대단히","대답","대도시","대략","대량","대륙","대문","대부분","대신","대응","대장","대전","대접","대중","대책","대출","대충","대통령","대학","대한민국","대합실","대형","덩어리","데이트","도대체","도덕","도둑","도망","도서관","도심","도움","도입","도자기","도저히","도전","도중","도착","독감","독립","독서","독일","독창적","동화책","뒷모습","뒷산","딸아이","마누라","마늘","마당","마라톤","마련","마무리","마사지","마약","마요네즈","마을","마음","마이크","마중","마지막","마찬가지","마찰","마흔","막걸리","막내","막상","만남","만두","만세","만약","만일","만점","만족","만화","많이","말기","말씀","말투","맘대로","망원경","매년","매달","매력","매번","매스컴","매일","매장","맥주","먹이","먼저","먼지","멀리","메일","며느리","며칠","면담","멸치","명단","명령","명예","명의","명절","명칭","명함","모금","모니터","모델","모든","모범","모습","모양","모임","모조리","모집","모퉁이","목걸이","목록","목사","목소리","목숨","목적","목표","몰래","몸매","몸무게","몸살","몸속","몸짓","몸통","몹시","무관심","무궁화","무더위","무덤","무릎","무슨","무엇","무역","무용","무조건","무지개","무척","문구","문득","문법","문서","문제","문학","문화","물가","물건","물결","물고기","물론","물리학","물음","물질","물체","미국","미디어","미사일","미술","미역","미용실","미움","미인","미팅","미혼","민간","민족","민주","믿음","밀가루","밀리미터","밑바닥","바가지","바구니","바나나","바늘","바닥","바닷가","바람","바이러스","바탕","박물관","박사","박수","반대","반드시","반말","반발","반성","반응","반장","반죽","반지","반찬","받침","발가락","발걸음","발견","발달","발레","발목","발바닥","발생","발음","발자국","발전","발톱","발표","밤하늘","밥그릇","밥맛","밥상","밥솥","방금","방면","방문","방바닥","방법","방송","방식","방안","방울","방지","방학","방해","방향","배경","배꼽","배달","배드민턴","백두산","백색","백성","백인","백제","백화점","버릇","버섯","버튼","번개","번역","번지","번호","벌금","벌레","벌써","범위","범인","범죄","법률","법원","법적","법칙","베이징","벨트","변경","변동","변명","변신","변호사","변화","별도","별명","별일","병실","병아리","병원","보관","보너스","보라색","보람","보름","보상","보안","보자기","보장","보전","보존","보통","보편적","보험","복도","복사","복숭아","복습","볶음","본격적","본래","본부","본사","본성","본인","본질","볼펜","봉사","봉지","봉투","부근","부끄러움","부담","부동산","부문","부분","부산","부상","부엌","부인","부작용","부장","부정","부족","부지런히","부친","부탁","부품","부회장","북부","북한","분노","분량","분리","분명","분석","분야","분위기","분필","분홍색","불고기","불과","불교","불꽃","불만","불법","불빛","불안","불이익","불행","브랜드","비극","비난","비닐","비둘기","비디오","비로소","비만","비명","비밀","비바람","비빔밥","비상","비용","비율","비중","비타민","비판","빌딩","빗물","빗방울","빗줄기","빛깔","빨간색","빨래","빨리","사건","사계절","사나이","사냥","사람","사랑","사립","사모님","사물","사방","사상","사생활","사설","사슴","사실","사업","사용","사월","사장","사전","사진","사촌","사춘기","사탕","사투리","사흘","산길","산부인과","산업","산책","살림","살인","살짝","삼계탕","삼국","삼십","삼월","삼촌","상관","상금","상대","상류","상반기","상상","상식","상업","상인","상자","상점","상처","상추","상태","상표","상품","상황","새벽","색깔","색연필","생각","생명","생물","생방송","생산","생선","생신","생일","생활","서랍","서른","서명","서민","서비스","서양","서울","서적","서점","서쪽","서클","석사","석유","선거","선물","선배","선생","선수","선원","선장","선전","선택","선풍기","설거지","설날","설렁탕","설명","설문","설사","설악산","설치","설탕","섭씨","성공","성당","성명","성별","성인","성장","성적","성질","성함","세금","세미나","세상","세월","세종대왕","세탁","센터","센티미터","셋째","소규모","소극적","소금","소나기","소년","소득","소망","소문","소설","소속","소아과","소용","소원","소음","소중히","소지품","소질","소풍","소형","속담","속도","속옷","손가락","손길","손녀","손님","손등","손목","손뼉","손실","손질","손톱","손해","솔직히","솜씨","송아지","송이","송편","쇠고기","쇼핑","수건","수년","수단","수돗물","수동적","수면","수명","수박","수상","수석","수술","수시로","수업","수염","수영","수입","수준","수집","수출","수컷","수필","수학","수험생","수화기","숙녀","숙소","숙제","순간","순서","순수","순식간","순위","숟가락","술병","술집","숫자","스님","스물","스스로","스승","스웨터","스위치","스케이트","스튜디오","스트레스","스포츠","슬쩍","슬픔","습관","습기","승객","승리","승부","승용차","승진","시각","시간","시골","시금치","시나리오","시댁","시리즈","시멘트","시민","시부모","시선","시설","시스템","시아버지","시어머니","시월","시인","시일","시작","시장","시절","시점","시중","시즌","시집","시청","시합","시험","식구","식기","식당","식량","식료품","식물","식빵","식사","식생활","식초","식탁","식품","신고","신규","신념","신문","신발","신비","신사","신세","신용","신제품","신청","신체","신화","실감","실내","실력","실례","실망","실수","실습","실시","실장","실정","실질적","실천","실체","실컷","실태","실패","실험","실현","심리","심부름","심사","심장","심정","심판","쌍둥이","씨름","씨앗","아가씨","아나운서","아드님","아들","아쉬움","아스팔트","아시아","아울러","아저씨","아줌마","아직","아침","아파트","아프리카","아픔","아홉","아흔","악기","악몽","악수","안개","안경","안과","안내","안녕","안동","안방","안부","안주","알루미늄","알코올","암시","암컷","압력","앞날","앞문","애인","애정","액수","앨범","야간","야단","야옹","약간","약국","약속","약수","약점","약품","약혼녀","양념","양력","양말","양배추","양주","양파","어둠","어려움","어른","어젯밤","어쨌든","어쩌다가","어쩐지","언니","언덕","언론","언어","얼굴","얼른","얼음","얼핏","엄마","업무","업종","업체","엉덩이","엉망","엉터리","엊그제","에너지","에어컨","엔진","여건","여고생","여관","여군","여권","여대생","여덟","여동생","여든","여론","여름","여섯","여성","여왕","여인","여전히","여직원","여학생","여행","역사","역시","역할","연결","연구","연극","연기","연락","연설","연세","연속","연습","연애","연예인","연인","연장","연주","연출","연필","연합","연휴","열기","열매","열쇠","열심히","열정","열차","열흘","염려","엽서","영국","영남","영상","영양","영역","영웅","영원히","영하","영향","영혼","영화","옆구리","옆방","옆집","예감","예금","예방","예산","예상","예선","예술","예습","예식장","예약","예전","예절","예정","예컨대","옛날","오늘","오락","오랫동안","오렌지","오로지","오른발","오븐","오십","오염","오월","오전","오직","오징어","오페라","오피스텔","오히려","옥상","옥수수","온갖","온라인","온몸","온종일","온통","올가을","올림픽","올해","옷차림","와이셔츠","와인","완성","완전","왕비","왕자","왜냐하면","왠지","외갓집","외국","외로움","외삼촌","외출","외침","외할머니","왼발","왼손","왼쪽","요금","요일","요즘","요청","용기","용서","용어","우산","우선","우승","우연히","우정","우체국","우편","운동","운명","운반","운전","운행","울산","울음","움직임","웃어른","웃음","워낙","원고","원래","원서","원숭이","원인","원장","원피스","월급","월드컵","월세","월요일","웨이터","위반","위법","위성","위원","위험","위협","윗사람","유난히","유럽","유명","유물","유산","유적","유치원","유학","유행","유형","육군","육상","육십","육체","은행","음력","음료","음반","음성","음식","음악","음주","의견","의논","의문","의복","의식","의심","의외로","의욕","의원","의학","이것","이곳","이념","이놈","이달","이대로","이동","이렇게","이력서","이론적","이름","이민","이발소","이별","이불","이빨","이상","이성","이슬","이야기","이용","이웃","이월","이윽고","이익","이전","이중","이튿날","이틀","이혼","인간","인격","인공","인구","인근","인기","인도","인류","인물","인생","인쇄","인연","인원","인재","인종","인천","인체","인터넷","인하","인형","일곱","일기","일단","일대","일등","일반","일본","일부","일상","일생","일손","일요일","일월","일정","일종","일주일","일찍","일체","일치","일행","일회용","임금","임무","입대","입력","입맛","입사","입술","입시","입원","입장","입학","자가용","자격","자극","자동","자랑","자부심","자식","자신","자연","자원","자율","자전거","자정","자존심","자판","작가","작년","작성","작업","작용","작은딸","작품","잔디","잔뜩","잔치","잘못","잠깐","잠수함","잠시","잠옷","잠자리","잡지","장관","장군","장기간","장래","장례","장르","장마","장면","장모","장미","장비","장사","장소","장식","장애인","장인","장점","장차","장학금","재능","재빨리","재산","재생","재작년","재정","재채기","재판","재학","재활용","저것","저고리","저곳","저녁","저런","저렇게","저번","저울","저절로","저축","적극","적당히","적성","적용","적응","전개","전공","전기","전달","전라도","전망","전문","전반","전부","전세","전시","전용","전자","전쟁","전주","전철","전체","전통","전혀","전후","절대","절망","절반","절약","절차","점검","점수","점심","점원","점점","점차","접근","접시","접촉","젓가락","정거장","정도","정류장","정리","정말","정면","정문","정반대","정보","정부","정비","정상","정성","정오","정원","정장","정지","정치","정확히","제공","제과점","제대로","제목","제발","제법","제삿날","제안","제일","제작","제주도","제출","제품","제한","조각","조건","조금","조깅","조명","조미료","조상","조선","조용히","조절","조정","조직","존댓말","존재","졸업","졸음","종교","종로","종류","종소리","종업원","종종","종합","좌석","죄인","주관적","주름","주말","주머니","주먹","주문","주민","주방","주변","주식","주인","주일","주장","주전자","주택","준비","줄거리","줄기","줄무늬","중간","중계방송","중국","중년","중단","중독","중반","중부","중세","중소기업","중순","중앙","중요","중학교","즉석","즉시","즐거움","증가","증거","증권","증상","증세","지각","지갑","지경","지극히","지금","지급","지능","지름길","지리산","지방","지붕","지식","지역","지우개","지원","지적","지점","지진","지출","직선","직업","직원","직장","진급","진동","진로","진료","진리","진짜","진찰","진출","진통","진행","질문","질병","질서","짐작","집단","집안","집중","짜증","찌꺼기","차남","차라리","차량","차림","차별","차선","차츰","착각","찬물","찬성","참가","참기름","참새","참석","참여","참외","참조","찻잔","창가","창고","창구","창문","창밖","창작","창조","채널","채점","책가방","책방","책상","책임","챔피언","처벌","처음","천국","천둥","천장","천재","천천히","철도","철저히","철학","첫날","첫째","청년","청바지","청소","청춘","체계","체력","체온","체육","체중","체험","초등학생","초반","초밥","초상화","초순","초여름","초원","초저녁","초점","초청","초콜릿","촛불","총각","총리","총장","촬영","최근","최상","최선","최신","최악","최종","추석","추억","추진","추천","추측","축구","축소","축제","축하","출근","출발","출산","출신","출연","출입","출장","출판","충격","충고","충돌","충분히","충청도","취업","취직","취향","치약","친구","친척","칠십","칠월","칠판","침대","침묵","침실","칫솔","칭찬","카메라","카운터","칼국수","캐릭터","캠퍼스","캠페인","커튼","컨디션","컬러","컴퓨터","코끼리","코미디","콘서트","콜라","콤플렉스","콩나물","쾌감","쿠데타","크림","큰길","큰딸","큰소리","큰아들","큰어머니","큰일","큰절","클래식","클럽","킬로","타입","타자기","탁구","탁자","탄생","태권도","태양","태풍","택시","탤런트","터널","터미널","테니스","테스트","테이블","텔레비전","토론","토마토","토요일","통계","통과","통로","통신","통역","통일","통장","통제","통증","통합","통화","퇴근","퇴원","퇴직금","튀김","트럭","특급","특별","특성","특수","특징","특히","튼튼히","티셔츠","파란색","파일","파출소","판결","판단","판매","판사","팔십","팔월","팝송","패션","팩스","팩시밀리","팬티","퍼센트","페인트","편견","편의","편지","편히","평가","평균","평생","평소","평양","평일","평화","포스터","포인트","포장","포함","표면","표정","표준","표현","품목","품질","풍경","풍속","풍습","프랑스","프린터","플라스틱","피곤","피망","피아노","필름","필수","필요","필자","필통","핑계","하느님","하늘","하드웨어","하룻밤","하반기","하숙집","하순","하여튼","하지만","하천","하품","하필","학과","학교","학급","학기","학년","학력","학번","학부모","학비","학생","학술","학습","학용품","학원","학위","학자","학점","한계","한글","한꺼번에","한낮","한눈","한동안","한때","한라산","한마디","한문","한번","한복","한식","한여름","한쪽","할머니","할아버지","할인","함께","함부로","합격","합리적","항공","항구","항상","항의","해결","해군","해답","해당","해물","해석","해설","해수욕장","해안","핵심","핸드백","햄버거","햇볕","햇살","행동","행복","행사","행운","행위","향기","향상","향수","허락","허용","헬기","현관","현금","현대","현상","현실","현장","현재","현지","혈액","협력","형부","형사","형수","형식","형제","형태","형편","혜택","호기심","호남","호랑이","호박","호텔","호흡","혹시","홀로","홈페이지","홍보","홍수","홍차","화면","화분","화살","화요일","화장","화학","확보","확인","확장","확정","환갑","환경","환영","환율","환자","활기","활동","활발히","활용","활짝","회견","회관","회복","회색","회원","회장","회전","횟수","횡단보도","효율적","후반","후춧가루","훈련","훨씬","휴식","휴일","흉내","흐름","흑백","흑인","흔적","흔히","흥미","흥분","희곡","희망","희생","흰색","힘껏"]')},50984:a=>{"use strict";a.exports=JSON.parse('["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]')},52441:(a,b,c)=>{"use strict";Object.defineProperty(b,"__esModule",{value:!0}),b.randomBytes=b.wrapXOFConstructorWithOpts=b.wrapConstructorWithOpts=b.wrapConstructor=b.checkOpts=b.Hash=b.concatBytes=b.toBytes=b.utf8ToBytes=b.asyncLoop=b.nextTick=b.hexToBytes=b.bytesToHex=b.isLE=b.rotr=b.createView=b.u32=b.u8=void 0;let d=c(68519);if(b.u8=a=>new Uint8Array(a.buffer,a.byteOffset,a.byteLength),b.u32=a=>new Uint32Array(a.buffer,a.byteOffset,Math.floor(a.byteLength/4)),b.createView=a=>new DataView(a.buffer,a.byteOffset,a.byteLength),b.rotr=(a,b)=>a<<32-b|a>>>b,b.isLE=68===new Uint8Array(new Uint32Array([0x11223344]).buffer)[0],!b.isLE)throw Error("Non little-endian hardware is not supported");let e=Array.from({length:256},(a,b)=>b.toString(16).padStart(2,"0"));async function f(a,c,d){let e=Date.now();for(let f=0;f<a;f++){d(f);let a=Date.now()-e;a>=0&&a<c||(await (0,b.nextTick)(),e+=a)}}function g(a){if("string"!=typeof a)throw Error(`utf8ToBytes expected string, got ${typeof a}`);return new Uint8Array(new TextEncoder().encode(a))}function h(a){if("string"==typeof a&&(a=g(a)),!(a instanceof Uint8Array))throw Error(`expected Uint8Array, got ${typeof a}`);return a}b.bytesToHex=function(a){if(!(a instanceof Uint8Array))throw Error("Uint8Array expected");let b="";for(let c=0;c<a.length;c++)b+=e[a[c]];return b},b.hexToBytes=function(a){if("string"!=typeof a)throw Error("hex string expected, got "+typeof a);let b=a.length;if(b%2)throw Error("padded hex string expected, got unpadded hex of length "+b);let c=new Uint8Array(b/2);for(let b=0;b<c.length;b++){let d=2*b,e=Number.parseInt(a.slice(d,d+2),16);if(Number.isNaN(e)||e<0)throw Error("Invalid byte sequence");c[b]=e}return c},b.nextTick=async()=>{},b.asyncLoop=f,b.utf8ToBytes=g,b.toBytes=h,b.concatBytes=function(...a){let b=new Uint8Array(a.reduce((a,b)=>a+b.length,0)),c=0;return a.forEach(a=>{if(!(a instanceof Uint8Array))throw Error("Uint8Array expected");b.set(a,c),c+=a.length}),b};class i{clone(){return this._cloneInto()}}b.Hash=i;let j={}.toString;b.checkOpts=function(a,b){if(void 0!==b&&"[object Object]"!==j.call(b))throw Error("Options should be object or undefined");return Object.assign(a,b)},b.wrapConstructor=function(a){let b=b=>a().update(h(b)).digest(),c=a();return b.outputLen=c.outputLen,b.blockLen=c.blockLen,b.create=()=>a(),b},b.wrapConstructorWithOpts=function(a){let b=(b,c)=>a(c).update(h(b)).digest(),c=a({});return b.outputLen=c.outputLen,b.blockLen=c.blockLen,b.create=b=>a(b),b},b.wrapXOFConstructorWithOpts=function(a){let b=(b,c)=>a(c).update(h(b)).digest(),c=a({});return b.outputLen=c.outputLen,b.blockLen=c.blockLen,b.create=b=>a(b),b},b.randomBytes=function(a=32){if(d.crypto&&"function"==typeof d.crypto.getRandomValues)return d.crypto.getRandomValues(new Uint8Array(a));throw Error("crypto.getRandomValues must be defined")}},55511:a=>{"use strict";a.exports=require("crypto")},56461:(a,b,c)=>{"use strict";Object.defineProperty(b,"__esModule",{value:!0}),b.hmac=b.HMAC=void 0;let d=c(38543),e=c(52441);class f extends e.Hash{constructor(a,b){super(),this.finished=!1,this.destroyed=!1,(0,d.hash)(a);let c=(0,e.toBytes)(b);if(this.iHash=a.create(),"function"!=typeof this.iHash.update)throw Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let f=this.blockLen,g=new Uint8Array(f);g.set(c.length>f?a.create().update(c).digest():c);for(let a=0;a<g.length;a++)g[a]^=54;this.iHash.update(g),this.oHash=a.create();for(let a=0;a<g.length;a++)g[a]^=106;this.oHash.update(g),g.fill(0)}update(a){return(0,d.exists)(this),this.iHash.update(a),this}digestInto(a){(0,d.exists)(this),(0,d.bytes)(a,this.outputLen),this.finished=!0,this.iHash.digestInto(a),this.oHash.update(a),this.oHash.digestInto(a),this.destroy()}digest(){let a=new Uint8Array(this.oHash.outputLen);return this.digestInto(a),a}_cloneInto(a){a||(a=Object.create(Object.getPrototypeOf(this),{}));let{oHash:b,iHash:c,finished:d,destroyed:e,blockLen:f,outputLen:g}=this;return a.finished=d,a.destroyed=e,a.blockLen=f,a.outputLen=g,a.oHash=b._cloneInto(a.oHash),a.iHash=c._cloneInto(a.iHash),a}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}b.HMAC=f,b.hmac=(a,b,c)=>new f(a,b).update(c).digest(),b.hmac.create=(a,b)=>new f(a,b)},59763:a=>{"use strict";a.exports=JSON.parse('["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"]')},59840:(a,b,c)=>{"use strict";Object.defineProperty(b,"__esModule",{value:!0}),b.sha384=b.sha512_256=b.sha512_224=b.sha512=b.SHA512=void 0;let d=c(89869),e=c(8160),f=c(52441),[g,h]=e.default.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(a=>BigInt(a))),i=new Uint32Array(80),j=new Uint32Array(80);class k extends d.SHA2{constructor(){super(128,64,16,!1),this.Ah=0x6a09e667,this.Al=-0xc4336f8,this.Bh=-0x4498517b,this.Bl=-0x7b3558c5,this.Ch=0x3c6ef372,this.Cl=-0x16b07d5,this.Dh=-0x5ab00ac6,this.Dl=0x5f1d36f1,this.Eh=0x510e527f,this.El=-0x52197d2f,this.Fh=-0x64fa9774,this.Fl=0x2b3e6c1f,this.Gh=0x1f83d9ab,this.Gl=-0x4be4295,this.Hh=0x5be0cd19,this.Hl=0x137e2179}get(){let{Ah:a,Al:b,Bh:c,Bl:d,Ch:e,Cl:f,Dh:g,Dl:h,Eh:i,El:j,Fh:k,Fl:l,Gh:m,Gl:n,Hh:o,Hl:p}=this;return[a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p]}set(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){this.Ah=0|a,this.Al=0|b,this.Bh=0|c,this.Bl=0|d,this.Ch=0|e,this.Cl=0|f,this.Dh=0|g,this.Dl=0|h,this.Eh=0|i,this.El=0|j,this.Fh=0|k,this.Fl=0|l,this.Gh=0|m,this.Gl=0|n,this.Hh=0|o,this.Hl=0|p}process(a,b){for(let c=0;c<16;c++,b+=4)i[c]=a.getUint32(b),j[c]=a.getUint32(b+=4);for(let a=16;a<80;a++){let b=0|i[a-15],c=0|j[a-15],d=e.default.rotrSH(b,c,1)^e.default.rotrSH(b,c,8)^e.default.shrSH(b,c,7),f=e.default.rotrSL(b,c,1)^e.default.rotrSL(b,c,8)^e.default.shrSL(b,c,7),g=0|i[a-2],h=0|j[a-2],k=e.default.rotrSH(g,h,19)^e.default.rotrBH(g,h,61)^e.default.shrSH(g,h,6),l=e.default.rotrSL(g,h,19)^e.default.rotrBL(g,h,61)^e.default.shrSL(g,h,6),m=e.default.add4L(f,l,j[a-7],j[a-16]),n=e.default.add4H(m,d,k,i[a-7],i[a-16]);i[a]=0|n,j[a]=0|m}let{Ah:c,Al:d,Bh:f,Bl:k,Ch:l,Cl:m,Dh:n,Dl:o,Eh:p,El:q,Fh:r,Fl:s,Gh:t,Gl:u,Hh:v,Hl:w}=this;for(let a=0;a<80;a++){let b=e.default.rotrSH(p,q,14)^e.default.rotrSH(p,q,18)^e.default.rotrBH(p,q,41),x=e.default.rotrSL(p,q,14)^e.default.rotrSL(p,q,18)^e.default.rotrBL(p,q,41),y=p&r^~p&t,z=q&s^~q&u,A=e.default.add5L(w,x,z,h[a],j[a]),B=e.default.add5H(A,v,b,y,g[a],i[a]),C=0|A,D=e.default.rotrSH(c,d,28)^e.default.rotrBH(c,d,34)^e.default.rotrBH(c,d,39),E=e.default.rotrSL(c,d,28)^e.default.rotrBL(c,d,34)^e.default.rotrBL(c,d,39),F=c&f^c&l^f&l,G=d&k^d&m^k&m;v=0|t,w=0|u,t=0|r,u=0|s,r=0|p,s=0|q,({h:p,l:q}=e.default.add(0|n,0|o,0|B,0|C)),n=0|l,o=0|m,l=0|f,m=0|k,f=0|c,k=0|d;let H=e.default.add3L(C,E,G);c=e.default.add3H(H,B,D,F),d=0|H}({h:c,l:d}=e.default.add(0|this.Ah,0|this.Al,0|c,0|d)),({h:f,l:k}=e.default.add(0|this.Bh,0|this.Bl,0|f,0|k)),({h:l,l:m}=e.default.add(0|this.Ch,0|this.Cl,0|l,0|m)),({h:n,l:o}=e.default.add(0|this.Dh,0|this.Dl,0|n,0|o)),({h:p,l:q}=e.default.add(0|this.Eh,0|this.El,0|p,0|q)),({h:r,l:s}=e.default.add(0|this.Fh,0|this.Fl,0|r,0|s)),({h:t,l:u}=e.default.add(0|this.Gh,0|this.Gl,0|t,0|u)),({h:v,l:w}=e.default.add(0|this.Hh,0|this.Hl,0|v,0|w)),this.set(c,d,f,k,l,m,n,o,p,q,r,s,t,u,v,w)}roundClean(){i.fill(0),j.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}b.SHA512=k;class l extends k{constructor(){super(),this.Ah=-0x73c2c838,this.Al=0x19544da2,this.Bh=0x73e19966,this.Bl=-0x76232b2a,this.Ch=0x1dfab7ae,this.Cl=0x32ff9c82,this.Dh=0x679dd514,this.Dl=0x582f9fcf,this.Eh=0xf6d2b69,this.El=0x7bd44da8,this.Fh=0x77e36f73,this.Fl=0x4c48942,this.Gh=0x3f9d85a8,this.Gl=0x6a1d36c8,this.Hh=0x1112e6ad,this.Hl=-0x6e296d5f,this.outputLen=28}}class m extends k{constructor(){super(),this.Ah=0x22312194,this.Al=-0x3d408d4,this.Bh=-0x60aaa05d,this.Bl=-0x37b39b3e,this.Ch=0x2393b86b,this.Cl=0x6f53b151,this.Dh=-0x69c788e7,this.Dl=0x5940eabd,this.Eh=-0x69d7c11e,this.El=-0x5771001d,this.Fh=-0x41a1e1db,this.Fl=0x53863992,this.Gh=0x2b0199fc,this.Gl=0x2c85b8aa,this.Hh=0xeb72ddc,this.Hl=-0x7e3ad35e,this.outputLen=32}}class n extends k{constructor(){super(),this.Ah=-0x344462a3,this.Al=-0x3efa6128,this.Bh=0x629a292a,this.Bl=0x367cd507,this.Ch=-0x6ea6fea6,this.Cl=0x3070dd17,this.Dh=0x152fecd8,this.Dl=-0x8f1a6c7,this.Eh=0x67332667,this.El=-4191439,this.Fh=-0x714bb579,this.Fl=0x68581511,this.Gh=-0x24f3d1f3,this.Gl=0x64f98fa7,this.Hh=0x47b5481d,this.Hl=-0x4105b05c,this.outputLen=48}}b.sha512=(0,f.wrapConstructor)(()=>new k),b.sha512_224=(0,f.wrapConstructor)(()=>new l),b.sha512_256=(0,f.wrapConstructor)(()=>new m),b.sha384=(0,f.wrapConstructor)(()=>new n)},61958:a=>{"use strict";a.exports=JSON.parse('["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"]')},63033:a=>{"use strict";a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},64696:a=>{"use strict";a.exports=JSON.parse('["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]')},68519:(a,b,c)=>{"use strict";Object.defineProperty(b,"__esModule",{value:!0}),b.crypto=void 0;let d=c(77598);b.crypto=d&&"object"==typeof d&&"webcrypto"in d?d.webcrypto:void 0},73333:(a,b,c)=>{"use strict";Object.defineProperty(b,"__esModule",{value:!0}),b.sha224=b.sha256=void 0;let d=c(89869),e=c(52441),f=(a,b,c)=>a&b^~a&c,g=(a,b,c)=>a&b^a&c^b&c,h=new Uint32Array([0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5,0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5,0xd807aa98,0x12835b01,0x243185be,0x550c7dc3,0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174,0xe49b69c1,0xefbe4786,0xfc19dc6,0x240ca1cc,0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da,0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7,0xc6e00bf3,0xd5a79147,0x6ca6351,0x14292967,0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13,0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85,0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3,0xd192e819,0xd6990624,0xf40e3585,0x106aa070,0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5,0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3,0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208,0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2]),i=new Uint32Array([0x6a09e667,0xbb67ae85,0x3c6ef372,0xa54ff53a,0x510e527f,0x9b05688c,0x1f83d9ab,0x5be0cd19]),j=new Uint32Array(64);class k extends d.SHA2{constructor(){super(64,32,8,!1),this.A=0|i[0],this.B=0|i[1],this.C=0|i[2],this.D=0|i[3],this.E=0|i[4],this.F=0|i[5],this.G=0|i[6],this.H=0|i[7]}get(){let{A:a,B:b,C:c,D:d,E:e,F:f,G:g,H:h}=this;return[a,b,c,d,e,f,g,h]}set(a,b,c,d,e,f,g,h){this.A=0|a,this.B=0|b,this.C=0|c,this.D=0|d,this.E=0|e,this.F=0|f,this.G=0|g,this.H=0|h}process(a,b){for(let c=0;c<16;c++,b+=4)j[c]=a.getUint32(b,!1);for(let a=16;a<64;a++){let b=j[a-15],c=j[a-2],d=(0,e.rotr)(b,7)^(0,e.rotr)(b,18)^b>>>3,f=(0,e.rotr)(c,17)^(0,e.rotr)(c,19)^c>>>10;j[a]=f+j[a-7]+d+j[a-16]|0}let{A:c,B:d,C:i,D:k,E:l,F:m,G:n,H:o}=this;for(let a=0;a<64;a++){let b=o+((0,e.rotr)(l,6)^(0,e.rotr)(l,11)^(0,e.rotr)(l,25))+f(l,m,n)+h[a]+j[a]|0,p=((0,e.rotr)(c,2)^(0,e.rotr)(c,13)^(0,e.rotr)(c,22))+g(c,d,i)|0;o=n,n=m,m=l,l=k+b|0,k=i,i=d,d=c,c=b+p|0}c=c+this.A|0,d=d+this.B|0,i=i+this.C|0,k=k+this.D|0,l=l+this.E|0,m=m+this.F|0,n=n+this.G|0,o=o+this.H|0,this.set(c,d,i,k,l,m,n,o)}roundClean(){j.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}class l extends k{constructor(){super(),this.A=-0x3efa6128,this.B=0x367cd507,this.C=0x3070dd17,this.D=-0x8f1a6c7,this.E=-4191439,this.F=0x68581511,this.G=0x64f98fa7,this.H=-0x4105b05c,this.outputLen=28}}b.sha256=(0,e.wrapConstructor)(()=>new k),b.sha224=(0,e.wrapConstructor)(()=>new l)},77598:a=>{"use strict";a.exports=require("node:crypto")},78335:()=>{},86439:a=>{"use strict";a.exports=require("next/dist/shared/lib/no-fallback-error.external")},89869:(a,b,c)=>{"use strict";Object.defineProperty(b,"__esModule",{value:!0}),b.SHA2=void 0;let d=c(38543),e=c(52441);class f extends e.Hash{constructor(a,b,c,d){super(),this.blockLen=a,this.outputLen=b,this.padOffset=c,this.isLE=d,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(a),this.view=(0,e.createView)(this.buffer)}update(a){(0,d.exists)(this);let{view:b,buffer:c,blockLen:f}=this,g=(a=(0,e.toBytes)(a)).length;for(let d=0;d<g;){let h=Math.min(f-this.pos,g-d);if(h===f){let b=(0,e.createView)(a);for(;f<=g-d;d+=f)this.process(b,d);continue}c.set(a.subarray(d,d+h),this.pos),this.pos+=h,d+=h,this.pos===f&&(this.process(b,0),this.pos=0)}return this.length+=a.length,this.roundClean(),this}digestInto(a){(0,d.exists)(this),(0,d.output)(a,this),this.finished=!0;let{buffer:b,view:c,blockLen:f,isLE:g}=this,{pos:h}=this;b[h++]=128,this.buffer.subarray(h).fill(0),this.padOffset>f-h&&(this.process(c,0),h=0);for(let a=h;a<f;a++)b[a]=0;!function(a,b,c,d){if("function"==typeof a.setBigUint64)return a.setBigUint64(b,c,d);let e=BigInt(32),f=BigInt(0xffffffff),g=Number(c>>e&f),h=Number(c&f),i=4*!!d,j=4*!d;a.setUint32(b+i,g,d),a.setUint32(b+j,h,d)}(c,f-8,BigInt(8*this.length),g),this.process(c,0);let i=(0,e.createView)(a),j=this.outputLen;if(j%4)throw Error("_sha2: outputLen should be aligned to 32bit");let k=j/4,l=this.get();if(k>l.length)throw Error("_sha2: outputLen bigger than state");for(let a=0;a<k;a++)i.setUint32(4*a,l[a],g)}digest(){let{buffer:a,outputLen:b}=this;this.digestInto(a);let c=a.slice(0,b);return this.destroy(),c}_cloneInto(a){a||(a=new this.constructor),a.set(...this.get());let{blockLen:b,buffer:c,length:d,finished:e,destroyed:f,pos:g}=this;return a.length=d,a.pos=g,a.finished=e,a.destroyed=f,d%b&&a.buffer.set(c),a}}b.SHA2=f},91997:a=>{"use strict";a.exports=JSON.parse('["abacate","abaixo","abalar","abater","abduzir","abelha","aberto","abismo","abotoar","abranger","abreviar","abrigar","abrupto","absinto","absoluto","absurdo","abutre","acabado","acalmar","acampar","acanhar","acaso","aceitar","acelerar","acenar","acervo","acessar","acetona","achatar","acidez","acima","acionado","acirrar","aclamar","aclive","acolhida","acomodar","acoplar","acordar","acumular","acusador","adaptar","adega","adentro","adepto","adequar","aderente","adesivo","adeus","adiante","aditivo","adjetivo","adjunto","admirar","adorar","adquirir","adubo","adverso","advogado","aeronave","afastar","aferir","afetivo","afinador","afivelar","aflito","afluente","afrontar","agachar","agarrar","agasalho","agenciar","agilizar","agiota","agitado","agora","agradar","agreste","agrupar","aguardar","agulha","ajoelhar","ajudar","ajustar","alameda","alarme","alastrar","alavanca","albergue","albino","alcatra","aldeia","alecrim","alegria","alertar","alface","alfinete","algum","alheio","aliar","alicate","alienar","alinhar","aliviar","almofada","alocar","alpiste","alterar","altitude","alucinar","alugar","aluno","alusivo","alvo","amaciar","amador","amarelo","amassar","ambas","ambiente","ameixa","amenizar","amido","amistoso","amizade","amolador","amontoar","amoroso","amostra","amparar","ampliar","ampola","anagrama","analisar","anarquia","anatomia","andaime","anel","anexo","angular","animar","anjo","anomalia","anotado","ansioso","anterior","anuidade","anunciar","anzol","apagador","apalpar","apanhado","apego","apelido","apertada","apesar","apetite","apito","aplauso","aplicada","apoio","apontar","aposta","aprendiz","aprovar","aquecer","arame","aranha","arara","arcada","ardente","areia","arejar","arenito","aresta","argiloso","argola","arma","arquivo","arraial","arrebate","arriscar","arroba","arrumar","arsenal","arterial","artigo","arvoredo","asfaltar","asilado","aspirar","assador","assinar","assoalho","assunto","astral","atacado","atadura","atalho","atarefar","atear","atender","aterro","ateu","atingir","atirador","ativo","atoleiro","atracar","atrevido","atriz","atual","atum","auditor","aumentar","aura","aurora","autismo","autoria","autuar","avaliar","avante","avaria","avental","avesso","aviador","avisar","avulso","axila","azarar","azedo","azeite","azulejo","babar","babosa","bacalhau","bacharel","bacia","bagagem","baiano","bailar","baioneta","bairro","baixista","bajular","baleia","baliza","balsa","banal","bandeira","banho","banir","banquete","barato","barbado","baronesa","barraca","barulho","baseado","bastante","batata","batedor","batida","batom","batucar","baunilha","beber","beijo","beirada","beisebol","beldade","beleza","belga","beliscar","bendito","bengala","benzer","berimbau","berlinda","berro","besouro","bexiga","bezerro","bico","bicudo","bienal","bifocal","bifurcar","bigorna","bilhete","bimestre","bimotor","biologia","biombo","biosfera","bipolar","birrento","biscoito","bisneto","bispo","bissexto","bitola","bizarro","blindado","bloco","bloquear","boato","bobagem","bocado","bocejo","bochecha","boicotar","bolada","boletim","bolha","bolo","bombeiro","bonde","boneco","bonita","borbulha","borda","boreal","borracha","bovino","boxeador","branco","brasa","braveza","breu","briga","brilho","brincar","broa","brochura","bronzear","broto","bruxo","bucha","budismo","bufar","bule","buraco","busca","busto","buzina","cabana","cabelo","cabide","cabo","cabrito","cacau","cacetada","cachorro","cacique","cadastro","cadeado","cafezal","caiaque","caipira","caixote","cajado","caju","calafrio","calcular","caldeira","calibrar","calmante","calota","camada","cambista","camisa","camomila","campanha","camuflar","canavial","cancelar","caneta","canguru","canhoto","canivete","canoa","cansado","cantar","canudo","capacho","capela","capinar","capotar","capricho","captador","capuz","caracol","carbono","cardeal","careca","carimbar","carneiro","carpete","carreira","cartaz","carvalho","casaco","casca","casebre","castelo","casulo","catarata","cativar","caule","causador","cautelar","cavalo","caverna","cebola","cedilha","cegonha","celebrar","celular","cenoura","censo","centeio","cercar","cerrado","certeiro","cerveja","cetim","cevada","chacota","chaleira","chamado","chapada","charme","chatice","chave","chefe","chegada","cheiro","cheque","chicote","chifre","chinelo","chocalho","chover","chumbo","chutar","chuva","cicatriz","ciclone","cidade","cidreira","ciente","cigana","cimento","cinto","cinza","ciranda","circuito","cirurgia","citar","clareza","clero","clicar","clone","clube","coado","coagir","cobaia","cobertor","cobrar","cocada","coelho","coentro","coeso","cogumelo","coibir","coifa","coiote","colar","coleira","colher","colidir","colmeia","colono","coluna","comando","combinar","comentar","comitiva","comover","complexo","comum","concha","condor","conectar","confuso","congelar","conhecer","conjugar","consumir","contrato","convite","cooperar","copeiro","copiador","copo","coquetel","coragem","cordial","corneta","coronha","corporal","correio","cortejo","coruja","corvo","cosseno","costela","cotonete","couro","couve","covil","cozinha","cratera","cravo","creche","credor","creme","crer","crespo","criada","criminal","crioulo","crise","criticar","crosta","crua","cruzeiro","cubano","cueca","cuidado","cujo","culatra","culminar","culpar","cultura","cumprir","cunhado","cupido","curativo","curral","cursar","curto","cuspir","custear","cutelo","damasco","datar","debater","debitar","deboche","debulhar","decalque","decimal","declive","decote","decretar","dedal","dedicado","deduzir","defesa","defumar","degelo","degrau","degustar","deitado","deixar","delator","delegado","delinear","delonga","demanda","demitir","demolido","dentista","depenado","depilar","depois","depressa","depurar","deriva","derramar","desafio","desbotar","descanso","desenho","desfiado","desgaste","desigual","deslize","desmamar","desova","despesa","destaque","desviar","detalhar","detentor","detonar","detrito","deusa","dever","devido","devotado","dezena","diagrama","dialeto","didata","difuso","digitar","dilatado","diluente","diminuir","dinastia","dinheiro","diocese","direto","discreta","disfarce","disparo","disquete","dissipar","distante","ditador","diurno","diverso","divisor","divulgar","dizer","dobrador","dolorido","domador","dominado","donativo","donzela","dormente","dorsal","dosagem","dourado","doutor","drenagem","drible","drogaria","duelar","duende","dueto","duplo","duquesa","durante","duvidoso","eclodir","ecoar","ecologia","edificar","edital","educado","efeito","efetivar","ejetar","elaborar","eleger","eleitor","elenco","elevador","eliminar","elogiar","embargo","embolado","embrulho","embutido","emenda","emergir","emissor","empatia","empenho","empinado","empolgar","emprego","empurrar","emulador","encaixe","encenado","enchente","encontro","endeusar","endossar","enfaixar","enfeite","enfim","engajado","engenho","englobar","engomado","engraxar","enguia","enjoar","enlatar","enquanto","enraizar","enrolado","enrugar","ensaio","enseada","ensino","ensopado","entanto","enteado","entidade","entortar","entrada","entulho","envergar","enviado","envolver","enxame","enxerto","enxofre","enxuto","epiderme","equipar","ereto","erguido","errata","erva","ervilha","esbanjar","esbelto","escama","escola","escrita","escuta","esfinge","esfolar","esfregar","esfumado","esgrima","esmalte","espanto","espelho","espiga","esponja","espreita","espumar","esquerda","estaca","esteira","esticar","estofado","estrela","estudo","esvaziar","etanol","etiqueta","euforia","europeu","evacuar","evaporar","evasivo","eventual","evidente","evoluir","exagero","exalar","examinar","exato","exausto","excesso","excitar","exclamar","executar","exemplo","exibir","exigente","exonerar","expandir","expelir","expirar","explanar","exposto","expresso","expulsar","externo","extinto","extrato","fabricar","fabuloso","faceta","facial","fada","fadiga","faixa","falar","falta","familiar","fandango","fanfarra","fantoche","fardado","farelo","farinha","farofa","farpa","fartura","fatia","fator","favorita","faxina","fazenda","fechado","feijoada","feirante","felino","feminino","fenda","feno","fera","feriado","ferrugem","ferver","festejar","fetal","feudal","fiapo","fibrose","ficar","ficheiro","figurado","fileira","filho","filme","filtrar","firmeza","fisgada","fissura","fita","fivela","fixador","fixo","flacidez","flamingo","flanela","flechada","flora","flutuar","fluxo","focal","focinho","fofocar","fogo","foguete","foice","folgado","folheto","forjar","formiga","forno","forte","fosco","fossa","fragata","fralda","frango","frasco","fraterno","freira","frente","fretar","frieza","friso","fritura","fronha","frustrar","fruteira","fugir","fulano","fuligem","fundar","fungo","funil","furador","furioso","futebol","gabarito","gabinete","gado","gaiato","gaiola","gaivota","galega","galho","galinha","galocha","ganhar","garagem","garfo","gargalo","garimpo","garoupa","garrafa","gasoduto","gasto","gata","gatilho","gaveta","gazela","gelado","geleia","gelo","gemada","gemer","gemido","generoso","gengiva","genial","genoma","genro","geologia","gerador","germinar","gesso","gestor","ginasta","gincana","gingado","girafa","girino","glacial","glicose","global","glorioso","goela","goiaba","golfe","golpear","gordura","gorjeta","gorro","gostoso","goteira","governar","gracejo","gradual","grafite","gralha","grampo","granada","gratuito","graveto","graxa","grego","grelhar","greve","grilo","grisalho","gritaria","grosso","grotesco","grudado","grunhido","gruta","guache","guarani","guaxinim","guerrear","guiar","guincho","guisado","gula","guloso","guru","habitar","harmonia","haste","haver","hectare","herdar","heresia","hesitar","hiato","hibernar","hidratar","hiena","hino","hipismo","hipnose","hipoteca","hoje","holofote","homem","honesto","honrado","hormonal","hospedar","humorado","iate","ideia","idoso","ignorado","igreja","iguana","ileso","ilha","iludido","iluminar","ilustrar","imagem","imediato","imenso","imersivo","iminente","imitador","imortal","impacto","impedir","implante","impor","imprensa","impune","imunizar","inalador","inapto","inativo","incenso","inchar","incidir","incluir","incolor","indeciso","indireto","indutor","ineficaz","inerente","infantil","infestar","infinito","inflamar","informal","infrator","ingerir","inibido","inicial","inimigo","injetar","inocente","inodoro","inovador","inox","inquieto","inscrito","inseto","insistir","inspetor","instalar","insulto","intacto","integral","intimar","intocado","intriga","invasor","inverno","invicto","invocar","iogurte","iraniano","ironizar","irreal","irritado","isca","isento","isolado","isqueiro","italiano","janeiro","jangada","janta","jararaca","jardim","jarro","jasmim","jato","javali","jazida","jejum","joaninha","joelhada","jogador","joia","jornal","jorrar","jovem","juba","judeu","judoca","juiz","julgador","julho","jurado","jurista","juro","justa","labareda","laboral","lacre","lactante","ladrilho","lagarta","lagoa","laje","lamber","lamentar","laminar","lampejo","lanche","lapidar","lapso","laranja","lareira","largura","lasanha","lastro","lateral","latido","lavanda","lavoura","lavrador","laxante","lazer","lealdade","lebre","legado","legendar","legista","leigo","leiloar","leitura","lembrete","leme","lenhador","lentilha","leoa","lesma","leste","letivo","letreiro","levar","leveza","levitar","liberal","libido","liderar","ligar","ligeiro","limitar","limoeiro","limpador","linda","linear","linhagem","liquidez","listagem","lisura","litoral","livro","lixa","lixeira","locador","locutor","lojista","lombo","lona","longe","lontra","lorde","lotado","loteria","loucura","lousa","louvar","luar","lucidez","lucro","luneta","lustre","lutador","luva","macaco","macete","machado","macio","madeira","madrinha","magnata","magreza","maior","mais","malandro","malha","malote","maluco","mamilo","mamoeiro","mamute","manada","mancha","mandato","manequim","manhoso","manivela","manobrar","mansa","manter","manusear","mapeado","maquinar","marcador","maresia","marfim","margem","marinho","marmita","maroto","marquise","marreco","martelo","marujo","mascote","masmorra","massagem","mastigar","matagal","materno","matinal","matutar","maxilar","medalha","medida","medusa","megafone","meiga","melancia","melhor","membro","memorial","menino","menos","mensagem","mental","merecer","mergulho","mesada","mesclar","mesmo","mesquita","mestre","metade","meteoro","metragem","mexer","mexicano","micro","migalha","migrar","milagre","milenar","milhar","mimado","minerar","minhoca","ministro","minoria","miolo","mirante","mirtilo","misturar","mocidade","moderno","modular","moeda","moer","moinho","moita","moldura","moleza","molho","molinete","molusco","montanha","moqueca","morango","morcego","mordomo","morena","mosaico","mosquete","mostarda","motel","motim","moto","motriz","muda","muito","mulata","mulher","multar","mundial","munido","muralha","murcho","muscular","museu","musical","nacional","nadador","naja","namoro","narina","narrado","nascer","nativa","natureza","navalha","navegar","navio","neblina","nebuloso","negativa","negociar","negrito","nervoso","neta","neural","nevasca","nevoeiro","ninar","ninho","nitidez","nivelar","nobreza","noite","noiva","nomear","nominal","nordeste","nortear","notar","noticiar","noturno","novelo","novilho","novo","nublado","nudez","numeral","nupcial","nutrir","nuvem","obcecado","obedecer","objetivo","obrigado","obscuro","obstetra","obter","obturar","ocidente","ocioso","ocorrer","oculista","ocupado","ofegante","ofensiva","oferenda","oficina","ofuscado","ogiva","olaria","oleoso","olhar","oliveira","ombro","omelete","omisso","omitir","ondulado","oneroso","ontem","opcional","operador","oponente","oportuno","oposto","orar","orbitar","ordem","ordinal","orfanato","orgasmo","orgulho","oriental","origem","oriundo","orla","ortodoxo","orvalho","oscilar","ossada","osso","ostentar","otimismo","ousadia","outono","outubro","ouvido","ovelha","ovular","oxidar","oxigenar","pacato","paciente","pacote","pactuar","padaria","padrinho","pagar","pagode","painel","pairar","paisagem","palavra","palestra","palheta","palito","palmada","palpitar","pancada","panela","panfleto","panqueca","pantanal","papagaio","papelada","papiro","parafina","parcial","pardal","parede","partida","pasmo","passado","pastel","patamar","patente","patinar","patrono","paulada","pausar","peculiar","pedalar","pedestre","pediatra","pedra","pegada","peitoral","peixe","pele","pelicano","penca","pendurar","peneira","penhasco","pensador","pente","perceber","perfeito","pergunta","perito","permitir","perna","perplexo","persiana","pertence","peruca","pescado","pesquisa","pessoa","petiscar","piada","picado","piedade","pigmento","pilastra","pilhado","pilotar","pimenta","pincel","pinguim","pinha","pinote","pintar","pioneiro","pipoca","piquete","piranha","pires","pirueta","piscar","pistola","pitanga","pivete","planta","plaqueta","platina","plebeu","plumagem","pluvial","pneu","poda","poeira","poetisa","polegada","policiar","poluente","polvilho","pomar","pomba","ponderar","pontaria","populoso","porta","possuir","postal","pote","poupar","pouso","povoar","praia","prancha","prato","praxe","prece","predador","prefeito","premiar","prensar","preparar","presilha","pretexto","prevenir","prezar","primata","princesa","prisma","privado","processo","produto","profeta","proibido","projeto","prometer","propagar","prosa","protetor","provador","publicar","pudim","pular","pulmonar","pulseira","punhal","punir","pupilo","pureza","puxador","quadra","quantia","quarto","quase","quebrar","queda","queijo","quente","querido","quimono","quina","quiosque","rabanada","rabisco","rachar","racionar","radial","raiar","rainha","raio","raiva","rajada","ralado","ramal","ranger","ranhura","rapadura","rapel","rapidez","raposa","raquete","raridade","rasante","rascunho","rasgar","raspador","rasteira","rasurar","ratazana","ratoeira","realeza","reanimar","reaver","rebaixar","rebelde","rebolar","recado","recente","recheio","recibo","recordar","recrutar","recuar","rede","redimir","redonda","reduzida","reenvio","refinar","refletir","refogar","refresco","refugiar","regalia","regime","regra","reinado","reitor","rejeitar","relativo","remador","remendo","remorso","renovado","reparo","repelir","repleto","repolho","represa","repudiar","requerer","resenha","resfriar","resgatar","residir","resolver","respeito","ressaca","restante","resumir","retalho","reter","retirar","retomada","retratar","revelar","revisor","revolta","riacho","rica","rigidez","rigoroso","rimar","ringue","risada","risco","risonho","robalo","rochedo","rodada","rodeio","rodovia","roedor","roleta","romano","roncar","rosado","roseira","rosto","rota","roteiro","rotina","rotular","rouco","roupa","roxo","rubro","rugido","rugoso","ruivo","rumo","rupestre","russo","sabor","saciar","sacola","sacudir","sadio","safira","saga","sagrada","saibro","salada","saleiro","salgado","saliva","salpicar","salsicha","saltar","salvador","sambar","samurai","sanar","sanfona","sangue","sanidade","sapato","sarda","sargento","sarjeta","saturar","saudade","saxofone","sazonal","secar","secular","seda","sedento","sediado","sedoso","sedutor","segmento","segredo","segundo","seiva","seleto","selvagem","semanal","semente","senador","senhor","sensual","sentado","separado","sereia","seringa","serra","servo","setembro","setor","sigilo","silhueta","silicone","simetria","simpatia","simular","sinal","sincero","singular","sinopse","sintonia","sirene","siri","situado","soberano","sobra","socorro","sogro","soja","solda","soletrar","solteiro","sombrio","sonata","sondar","sonegar","sonhador","sono","soprano","soquete","sorrir","sorteio","sossego","sotaque","soterrar","sovado","sozinho","suavizar","subida","submerso","subsolo","subtrair","sucata","sucesso","suco","sudeste","sufixo","sugador","sugerir","sujeito","sulfato","sumir","suor","superior","suplicar","suposto","suprimir","surdina","surfista","surpresa","surreal","surtir","suspiro","sustento","tabela","tablete","tabuada","tacho","tagarela","talher","talo","talvez","tamanho","tamborim","tampa","tangente","tanto","tapar","tapioca","tardio","tarefa","tarja","tarraxa","tatuagem","taurino","taxativo","taxista","teatral","tecer","tecido","teclado","tedioso","teia","teimar","telefone","telhado","tempero","tenente","tensor","tentar","termal","terno","terreno","tese","tesoura","testado","teto","textura","texugo","tiara","tigela","tijolo","timbrar","timidez","tingido","tinteiro","tiragem","titular","toalha","tocha","tolerar","tolice","tomada","tomilho","tonel","tontura","topete","tora","torcido","torneio","torque","torrada","torto","tostar","touca","toupeira","toxina","trabalho","tracejar","tradutor","trafegar","trajeto","trama","trancar","trapo","traseiro","tratador","travar","treino","tremer","trepidar","trevo","triagem","tribo","triciclo","tridente","trilogia","trindade","triplo","triturar","triunfal","trocar","trombeta","trova","trunfo","truque","tubular","tucano","tudo","tulipa","tupi","turbo","turma","turquesa","tutelar","tutorial","uivar","umbigo","unha","unidade","uniforme","urologia","urso","urtiga","urubu","usado","usina","usufruir","vacina","vadiar","vagaroso","vaidoso","vala","valente","validade","valores","vantagem","vaqueiro","varanda","vareta","varrer","vascular","vasilha","vassoura","vazar","vazio","veado","vedar","vegetar","veicular","veleiro","velhice","veludo","vencedor","vendaval","venerar","ventre","verbal","verdade","vereador","vergonha","vermelho","verniz","versar","vertente","vespa","vestido","vetorial","viaduto","viagem","viajar","viatura","vibrador","videira","vidraria","viela","viga","vigente","vigiar","vigorar","vilarejo","vinco","vinheta","vinil","violeta","virada","virtude","visitar","visto","vitral","viveiro","vizinho","voador","voar","vogal","volante","voleibol","voltagem","volumoso","vontade","vulto","vuvuzela","xadrez","xarope","xeque","xeretar","xerife","xingar","zangado","zarpar","zebu","zelador","zombar","zoologia","zumbido"]')},93891:a=>{"use strict";a.exports=JSON.parse('["abdikace","abeceda","adresa","agrese","akce","aktovka","alej","alkohol","amputace","ananas","andulka","anekdota","anketa","antika","anulovat","archa","arogance","asfalt","asistent","aspirace","astma","astronom","atlas","atletika","atol","autobus","azyl","babka","bachor","bacil","baculka","badatel","bageta","bagr","bahno","bakterie","balada","baletka","balkon","balonek","balvan","balza","bambus","bankomat","barbar","baret","barman","baroko","barva","baterka","batoh","bavlna","bazalka","bazilika","bazuka","bedna","beran","beseda","bestie","beton","bezinka","bezmoc","beztak","bicykl","bidlo","biftek","bikiny","bilance","biograf","biolog","bitva","bizon","blahobyt","blatouch","blecha","bledule","blesk","blikat","blizna","blokovat","bloudit","blud","bobek","bobr","bodlina","bodnout","bohatost","bojkot","bojovat","bokorys","bolest","borec","borovice","bota","boubel","bouchat","bouda","boule","bourat","boxer","bradavka","brambora","branka","bratr","brepta","briketa","brko","brloh","bronz","broskev","brunetka","brusinka","brzda","brzy","bublina","bubnovat","buchta","buditel","budka","budova","bufet","bujarost","bukvice","buldok","bulva","bunda","bunkr","burza","butik","buvol","buzola","bydlet","bylina","bytovka","bzukot","capart","carevna","cedr","cedule","cejch","cejn","cela","celer","celkem","celnice","cenina","cennost","cenovka","centrum","cenzor","cestopis","cetka","chalupa","chapadlo","charita","chata","chechtat","chemie","chichot","chirurg","chlad","chleba","chlubit","chmel","chmura","chobot","chochol","chodba","cholera","chomout","chopit","choroba","chov","chrapot","chrlit","chrt","chrup","chtivost","chudina","chutnat","chvat","chvilka","chvost","chyba","chystat","chytit","cibule","cigareta","cihelna","cihla","cinkot","cirkus","cisterna","citace","citrus","cizinec","cizost","clona","cokoliv","couvat","ctitel","ctnost","cudnost","cuketa","cukr","cupot","cvaknout","cval","cvik","cvrkot","cyklista","daleko","dareba","datel","datum","dcera","debata","dechovka","decibel","deficit","deflace","dekl","dekret","demokrat","deprese","derby","deska","detektiv","dikobraz","diktovat","dioda","diplom","disk","displej","divadlo","divoch","dlaha","dlouho","dluhopis","dnes","dobro","dobytek","docent","dochutit","dodnes","dohled","dohoda","dohra","dojem","dojnice","doklad","dokola","doktor","dokument","dolar","doleva","dolina","doma","dominant","domluvit","domov","donutit","dopad","dopis","doplnit","doposud","doprovod","dopustit","dorazit","dorost","dort","dosah","doslov","dostatek","dosud","dosyta","dotaz","dotek","dotknout","doufat","doutnat","dovozce","dozadu","doznat","dozorce","drahota","drak","dramatik","dravec","draze","drdol","drobnost","drogerie","drozd","drsnost","drtit","drzost","duben","duchovno","dudek","duha","duhovka","dusit","dusno","dutost","dvojice","dvorec","dynamit","ekolog","ekonomie","elektron","elipsa","email","emise","emoce","empatie","epizoda","epocha","epopej","epos","esej","esence","eskorta","eskymo","etiketa","euforie","evoluce","exekuce","exkurze","expedice","exploze","export","extrakt","facka","fajfka","fakulta","fanatik","fantazie","farmacie","favorit","fazole","federace","fejeton","fenka","fialka","figurant","filozof","filtr","finance","finta","fixace","fjord","flanel","flirt","flotila","fond","fosfor","fotbal","fotka","foton","frakce","freska","fronta","fukar","funkce","fyzika","galeje","garant","genetika","geolog","gilotina","glazura","glejt","golem","golfista","gotika","graf","gramofon","granule","grep","gril","grog","groteska","guma","hadice","hadr","hala","halenka","hanba","hanopis","harfa","harpuna","havran","hebkost","hejkal","hejno","hejtman","hektar","helma","hematom","herec","herna","heslo","hezky","historik","hladovka","hlasivky","hlava","hledat","hlen","hlodavec","hloh","hloupost","hltat","hlubina","hluchota","hmat","hmota","hmyz","hnis","hnojivo","hnout","hoblina","hoboj","hoch","hodiny","hodlat","hodnota","hodovat","hojnost","hokej","holinka","holka","holub","homole","honitba","honorace","horal","horda","horizont","horko","horlivec","hormon","hornina","horoskop","horstvo","hospoda","hostina","hotovost","houba","houf","houpat","houska","hovor","hradba","hranice","hravost","hrazda","hrbolek","hrdina","hrdlo","hrdost","hrnek","hrobka","hromada","hrot","hrouda","hrozen","hrstka","hrubost","hryzat","hubenost","hubnout","hudba","hukot","humr","husita","hustota","hvozd","hybnost","hydrant","hygiena","hymna","hysterik","idylka","ihned","ikona","iluze","imunita","infekce","inflace","inkaso","inovace","inspekce","internet","invalida","investor","inzerce","ironie","jablko","jachta","jahoda","jakmile","jakost","jalovec","jantar","jarmark","jaro","jasan","jasno","jatka","javor","jazyk","jedinec","jedle","jednatel","jehlan","jekot","jelen","jelito","jemnost","jenom","jepice","jeseter","jevit","jezdec","jezero","jinak","jindy","jinoch","jiskra","jistota","jitrnice","jizva","jmenovat","jogurt","jurta","kabaret","kabel","kabinet","kachna","kadet","kadidlo","kahan","kajak","kajuta","kakao","kaktus","kalamita","kalhoty","kalibr","kalnost","kamera","kamkoliv","kamna","kanibal","kanoe","kantor","kapalina","kapela","kapitola","kapka","kaple","kapota","kapr","kapusta","kapybara","karamel","karotka","karton","kasa","katalog","katedra","kauce","kauza","kavalec","kazajka","kazeta","kazivost","kdekoliv","kdesi","kedluben","kemp","keramika","kino","klacek","kladivo","klam","klapot","klasika","klaun","klec","klenba","klepat","klesnout","klid","klima","klisna","klobouk","klokan","klopa","kloub","klubovna","klusat","kluzkost","kmen","kmitat","kmotr","kniha","knot","koalice","koberec","kobka","kobliha","kobyla","kocour","kohout","kojenec","kokos","koktejl","kolaps","koleda","kolize","kolo","komando","kometa","komik","komnata","komora","kompas","komunita","konat","koncept","kondice","konec","konfese","kongres","konina","konkurs","kontakt","konzerva","kopanec","kopie","kopnout","koprovka","korbel","korektor","kormidlo","koroptev","korpus","koruna","koryto","korzet","kosatec","kostka","kotel","kotleta","kotoul","koukat","koupelna","kousek","kouzlo","kovboj","koza","kozoroh","krabice","krach","krajina","kralovat","krasopis","kravata","kredit","krejcar","kresba","kreveta","kriket","kritik","krize","krkavec","krmelec","krmivo","krocan","krok","kronika","kropit","kroupa","krovka","krtek","kruhadlo","krupice","krutost","krvinka","krychle","krypta","krystal","kryt","kudlanka","kufr","kujnost","kukla","kulajda","kulich","kulka","kulomet","kultura","kuna","kupodivu","kurt","kurzor","kutil","kvalita","kvasinka","kvestor","kynolog","kyselina","kytara","kytice","kytka","kytovec","kyvadlo","labrador","lachtan","ladnost","laik","lakomec","lamela","lampa","lanovka","lasice","laso","lastura","latinka","lavina","lebka","leckdy","leden","lednice","ledovka","ledvina","legenda","legie","legrace","lehce","lehkost","lehnout","lektvar","lenochod","lentilka","lepenka","lepidlo","letadlo","letec","letmo","letokruh","levhart","levitace","levobok","libra","lichotka","lidojed","lidskost","lihovina","lijavec","lilek","limetka","linie","linka","linoleum","listopad","litina","litovat","lobista","lodivod","logika","logoped","lokalita","loket","lomcovat","lopata","lopuch","lord","losos","lotr","loudal","louh","louka","louskat","lovec","lstivost","lucerna","lucifer","lump","lusk","lustrace","lvice","lyra","lyrika","lysina","madam","madlo","magistr","mahagon","majetek","majitel","majorita","makak","makovice","makrela","malba","malina","malovat","malvice","maminka","mandle","manko","marnost","masakr","maskot","masopust","matice","matrika","maturita","mazanec","mazivo","mazlit","mazurka","mdloba","mechanik","meditace","medovina","melasa","meloun","mentolka","metla","metoda","metr","mezera","migrace","mihnout","mihule","mikina","mikrofon","milenec","milimetr","milost","mimika","mincovna","minibar","minomet","minulost","miska","mistr","mixovat","mladost","mlha","mlhovina","mlok","mlsat","mluvit","mnich","mnohem","mobil","mocnost","modelka","modlitba","mohyla","mokro","molekula","momentka","monarcha","monokl","monstrum","montovat","monzun","mosaz","moskyt","most","motivace","motorka","motyka","moucha","moudrost","mozaika","mozek","mozol","mramor","mravenec","mrkev","mrtvola","mrzet","mrzutost","mstitel","mudrc","muflon","mulat","mumie","munice","muset","mutace","muzeum","muzikant","myslivec","mzda","nabourat","nachytat","nadace","nadbytek","nadhoz","nadobro","nadpis","nahlas","nahnat","nahodile","nahradit","naivita","najednou","najisto","najmout","naklonit","nakonec","nakrmit","nalevo","namazat","namluvit","nanometr","naoko","naopak","naostro","napadat","napevno","naplnit","napnout","naposled","naprosto","narodit","naruby","narychlo","nasadit","nasekat","naslepo","nastat","natolik","navenek","navrch","navzdory","nazvat","nebe","nechat","necky","nedaleko","nedbat","neduh","negace","nehet","nehoda","nejen","nejprve","neklid","nelibost","nemilost","nemoc","neochota","neonka","nepokoj","nerost","nerv","nesmysl","nesoulad","netvor","neuron","nevina","nezvykle","nicota","nijak","nikam","nikdy","nikl","nikterak","nitro","nocleh","nohavice","nominace","nora","norek","nositel","nosnost","nouze","noviny","novota","nozdra","nuda","nudle","nuget","nutit","nutnost","nutrie","nymfa","obal","obarvit","obava","obdiv","obec","obehnat","obejmout","obezita","obhajoba","obilnice","objasnit","objekt","obklopit","oblast","oblek","obliba","obloha","obluda","obnos","obohatit","obojek","obout","obrazec","obrna","obruba","obrys","obsah","obsluha","obstarat","obuv","obvaz","obvinit","obvod","obvykle","obyvatel","obzor","ocas","ocel","ocenit","ochladit","ochota","ochrana","ocitnout","odboj","odbyt","odchod","odcizit","odebrat","odeslat","odevzdat","odezva","odhadce","odhodit","odjet","odjinud","odkaz","odkoupit","odliv","odluka","odmlka","odolnost","odpad","odpis","odplout","odpor","odpustit","odpykat","odrazka","odsoudit","odstup","odsun","odtok","odtud","odvaha","odveta","odvolat","odvracet","odznak","ofina","ofsajd","ohlas","ohnisko","ohrada","ohrozit","ohryzek","okap","okenice","oklika","okno","okouzlit","okovy","okrasa","okres","okrsek","okruh","okupant","okurka","okusit","olejnina","olizovat","omak","omeleta","omezit","omladina","omlouvat","omluva","omyl","onehdy","opakovat","opasek","operace","opice","opilost","opisovat","opora","opozice","opravdu","oproti","orbital","orchestr","orgie","orlice","orloj","ortel","osada","oschnout","osika","osivo","oslava","oslepit","oslnit","oslovit","osnova","osoba","osolit","ospalec","osten","ostraha","ostuda","ostych","osvojit","oteplit","otisk","otop","otrhat","otrlost","otrok","otruby","otvor","ovanout","ovar","oves","ovlivnit","ovoce","oxid","ozdoba","pachatel","pacient","padouch","pahorek","pakt","palanda","palec","palivo","paluba","pamflet","pamlsek","panenka","panika","panna","panovat","panstvo","pantofle","paprika","parketa","parodie","parta","paruka","paryba","paseka","pasivita","pastelka","patent","patrona","pavouk","pazneht","pazourek","pecka","pedagog","pejsek","peklo","peloton","penalta","pendrek","penze","periskop","pero","pestrost","petarda","petice","petrolej","pevnina","pexeso","pianista","piha","pijavice","pikle","piknik","pilina","pilnost","pilulka","pinzeta","pipeta","pisatel","pistole","pitevna","pivnice","pivovar","placenta","plakat","plamen","planeta","plastika","platit","plavidlo","plaz","plech","plemeno","plenta","ples","pletivo","plevel","plivat","plnit","plno","plocha","plodina","plomba","plout","pluk","plyn","pobavit","pobyt","pochod","pocit","poctivec","podat","podcenit","podepsat","podhled","podivit","podklad","podmanit","podnik","podoba","podpora","podraz","podstata","podvod","podzim","poezie","pohanka","pohnutka","pohovor","pohroma","pohyb","pointa","pojistka","pojmout","pokazit","pokles","pokoj","pokrok","pokuta","pokyn","poledne","polibek","polknout","poloha","polynom","pomalu","pominout","pomlka","pomoc","pomsta","pomyslet","ponechat","ponorka","ponurost","popadat","popel","popisek","poplach","poprosit","popsat","popud","poradce","porce","porod","porucha","poryv","posadit","posed","posila","poskok","poslanec","posoudit","pospolu","postava","posudek","posyp","potah","potkan","potlesk","potomek","potrava","potupa","potvora","poukaz","pouto","pouzdro","povaha","povidla","povlak","povoz","povrch","povstat","povyk","povzdech","pozdrav","pozemek","poznatek","pozor","pozvat","pracovat","prahory","praktika","prales","praotec","praporek","prase","pravda","princip","prkno","probudit","procento","prodej","profese","prohra","projekt","prolomit","promile","pronikat","propad","prorok","prosba","proton","proutek","provaz","prskavka","prsten","prudkost","prut","prvek","prvohory","psanec","psovod","pstruh","ptactvo","puberta","puch","pudl","pukavec","puklina","pukrle","pult","pumpa","punc","pupen","pusa","pusinka","pustina","putovat","putyka","pyramida","pysk","pytel","racek","rachot","radiace","radnice","radon","raft","ragby","raketa","rakovina","rameno","rampouch","rande","rarach","rarita","rasovna","rastr","ratolest","razance","razidlo","reagovat","reakce","recept","redaktor","referent","reflex","rejnok","reklama","rekord","rekrut","rektor","reputace","revize","revma","revolver","rezerva","riskovat","riziko","robotika","rodokmen","rohovka","rokle","rokoko","romaneto","ropovod","ropucha","rorejs","rosol","rostlina","rotmistr","rotoped","rotunda","roubenka","roucho","roup","roura","rovina","rovnice","rozbor","rozchod","rozdat","rozeznat","rozhodce","rozinka","rozjezd","rozkaz","rozloha","rozmar","rozpad","rozruch","rozsah","roztok","rozum","rozvod","rubrika","ruchadlo","rukavice","rukopis","ryba","rybolov","rychlost","rydlo","rypadlo","rytina","ryzost","sadista","sahat","sako","samec","samizdat","samota","sanitka","sardinka","sasanka","satelit","sazba","sazenice","sbor","schovat","sebranka","secese","sedadlo","sediment","sedlo","sehnat","sejmout","sekera","sekta","sekunda","sekvoje","semeno","seno","servis","sesadit","seshora","seskok","seslat","sestra","sesuv","sesypat","setba","setina","setkat","setnout","setrvat","sever","seznam","shoda","shrnout","sifon","silnice","sirka","sirotek","sirup","situace","skafandr","skalisko","skanzen","skaut","skeptik","skica","skladba","sklenice","sklo","skluz","skoba","skokan","skoro","skripta","skrz","skupina","skvost","skvrna","slabika","sladidlo","slanina","slast","slavnost","sledovat","slepec","sleva","slezina","slib","slina","sliznice","slon","sloupek","slovo","sluch","sluha","slunce","slupka","slza","smaragd","smetana","smilstvo","smlouva","smog","smrad","smrk","smrtka","smutek","smysl","snad","snaha","snob","sobota","socha","sodovka","sokol","sopka","sotva","souboj","soucit","soudce","souhlas","soulad","soumrak","souprava","soused","soutok","souviset","spalovna","spasitel","spis","splav","spodek","spojenec","spolu","sponzor","spornost","spousta","sprcha","spustit","sranda","sraz","srdce","srna","srnec","srovnat","srpen","srst","srub","stanice","starosta","statika","stavba","stehno","stezka","stodola","stolek","stopa","storno","stoupat","strach","stres","strhnout","strom","struna","studna","stupnice","stvol","styk","subjekt","subtropy","suchar","sudost","sukno","sundat","sunout","surikata","surovina","svah","svalstvo","svetr","svatba","svazek","svisle","svitek","svoboda","svodidlo","svorka","svrab","sykavka","sykot","synek","synovec","sypat","sypkost","syrovost","sysel","sytost","tabletka","tabule","tahoun","tajemno","tajfun","tajga","tajit","tajnost","taktika","tamhle","tampon","tancovat","tanec","tanker","tapeta","tavenina","tazatel","technika","tehdy","tekutina","telefon","temnota","tendence","tenista","tenor","teplota","tepna","teprve","terapie","termoska","textil","ticho","tiskopis","titulek","tkadlec","tkanina","tlapka","tleskat","tlukot","tlupa","tmel","toaleta","topinka","topol","torzo","touha","toulec","tradice","traktor","tramp","trasa","traverza","trefit","trest","trezor","trhavina","trhlina","trochu","trojice","troska","trouba","trpce","trpitel","trpkost","trubec","truchlit","truhlice","trus","trvat","tudy","tuhnout","tuhost","tundra","turista","turnaj","tuzemsko","tvaroh","tvorba","tvrdost","tvrz","tygr","tykev","ubohost","uboze","ubrat","ubrousek","ubrus","ubytovna","ucho","uctivost","udivit","uhradit","ujednat","ujistit","ujmout","ukazatel","uklidnit","uklonit","ukotvit","ukrojit","ulice","ulita","ulovit","umyvadlo","unavit","uniforma","uniknout","upadnout","uplatnit","uplynout","upoutat","upravit","uran","urazit","usednout","usilovat","usmrtit","usnadnit","usnout","usoudit","ustlat","ustrnout","utahovat","utkat","utlumit","utonout","utopenec","utrousit","uvalit","uvolnit","uvozovka","uzdravit","uzel","uzenina","uzlina","uznat","vagon","valcha","valoun","vana","vandal","vanilka","varan","varhany","varovat","vcelku","vchod","vdova","vedro","vegetace","vejce","velbloud","veletrh","velitel","velmoc","velryba","venkov","veranda","verze","veselka","veskrze","vesnice","vespodu","vesta","veterina","veverka","vibrace","vichr","videohra","vidina","vidle","vila","vinice","viset","vitalita","vize","vizitka","vjezd","vklad","vkus","vlajka","vlak","vlasec","vlevo","vlhkost","vliv","vlnovka","vloupat","vnucovat","vnuk","voda","vodivost","vodoznak","vodstvo","vojensky","vojna","vojsko","volant","volba","volit","volno","voskovka","vozidlo","vozovna","vpravo","vrabec","vracet","vrah","vrata","vrba","vrcholek","vrhat","vrstva","vrtule","vsadit","vstoupit","vstup","vtip","vybavit","vybrat","vychovat","vydat","vydra","vyfotit","vyhledat","vyhnout","vyhodit","vyhradit","vyhubit","vyjasnit","vyjet","vyjmout","vyklopit","vykonat","vylekat","vymazat","vymezit","vymizet","vymyslet","vynechat","vynikat","vynutit","vypadat","vyplatit","vypravit","vypustit","vyrazit","vyrovnat","vyrvat","vyslovit","vysoko","vystavit","vysunout","vysypat","vytasit","vytesat","vytratit","vyvinout","vyvolat","vyvrhel","vyzdobit","vyznat","vzadu","vzbudit","vzchopit","vzdor","vzduch","vzdychat","vzestup","vzhledem","vzkaz","vzlykat","vznik","vzorek","vzpoura","vztah","vztek","xylofon","zabrat","zabydlet","zachovat","zadarmo","zadusit","zafoukat","zahltit","zahodit","zahrada","zahynout","zajatec","zajet","zajistit","zaklepat","zakoupit","zalepit","zamezit","zamotat","zamyslet","zanechat","zanikat","zaplatit","zapojit","zapsat","zarazit","zastavit","zasunout","zatajit","zatemnit","zatknout","zaujmout","zavalit","zavelet","zavinit","zavolat","zavrtat","zazvonit","zbavit","zbrusu","zbudovat","zbytek","zdaleka","zdarma","zdatnost","zdivo","zdobit","zdroj","zdvih","zdymadlo","zelenina","zeman","zemina","zeptat","zezadu","zezdola","zhatit","zhltnout","zhluboka","zhotovit","zhruba","zima","zimnice","zjemnit","zklamat","zkoumat","zkratka","zkumavka","zlato","zlehka","zloba","zlom","zlost","zlozvyk","zmapovat","zmar","zmatek","zmije","zmizet","zmocnit","zmodrat","zmrzlina","zmutovat","znak","znalost","znamenat","znovu","zobrazit","zotavit","zoubek","zoufale","zplodit","zpomalit","zprava","zprostit","zprudka","zprvu","zrada","zranit","zrcadlo","zrnitost","zrno","zrovna","zrychlit","zrzavost","zticha","ztratit","zubovina","zubr","zvednout","zvenku","zvesela","zvon","zvrat","zvukovod","zvyk"]')},94128:a=>{"use strict";a.exports=JSON.parse('["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"]')},95012:(a,b,c)=>{"use strict";c.d(b,{cn:()=>f,z:()=>g});var d=c(81171),e=c(11167);function f(...a){return(0,e.QP)((0,d.$)(a))}let g=new(c(96330)).PrismaClient},96330:a=>{"use strict";a.exports=require("@prisma/client")},96487:()=>{}};var b=require("../../../webpack-runtime.js");b.C(a);var c=b.X(0,[996,153,692],()=>b(b.s=29127));module.exports=c})();