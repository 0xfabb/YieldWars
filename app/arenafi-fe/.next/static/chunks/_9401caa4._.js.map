{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/fabxdev/arenafi/app/arenafi-fe/lib/supabase/client.ts"],"sourcesContent":["import { createBrowserClient } from \"@supabase/ssr\";\n\nexport function createClient() {\n  return createBrowserClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY!,\n  );\n}\n"],"names":[],"mappings":";;;;AAII;AAJJ;AAAA;;AAEO,SAAS;IACd,OAAO,IAAA,oMAAmB;AAI5B","debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///home/fabxdev/arenafi/app/arenafi-fe/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\nimport {PrismaClient} from \"@prisma/client\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n// This check can be removed, it is just for tutorial purposes\nexport const hasEnvVars =\n  process.env.NEXT_PUBLIC_SUPABASE_URL &&\n  process.env.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY;\n\n\nexport const prisma = new PrismaClient();\n  "],"names":[],"mappings":";;;;;;;;AAUE;AAVF;AACA;AACA;;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB;AAGO,MAAM,aACX;AAIK,MAAM,SAAS,IAAI,yKAAY","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/fabxdev/arenafi/app/arenafi-fe/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,2KAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,2KAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,IAAA,qHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/fabxdev/arenafi/app/arenafi-fe/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EACX,yDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,2KAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,qHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,2KAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///home/fabxdev/arenafi/app/arenafi-fe/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,IAAA,qHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///home/fabxdev/arenafi/app/arenafi-fe/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Gamepad2, Wallet, ExternalLink, Copy, Trophy, Coins, TrendingUp, Users } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/navigation\";\nimport { ethers } from \"ethers\";\nimport MetaMaskSDK from \"@metamask/sdk\";\n\ninterface User {\n  id: string; \n  name: string;\n  email: string;\n  walletAddress: string;\n  connectedWallet: string;\n}\n\nexport default function Dashboard() {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isConnectingWallet, setIsConnectingWallet] = useState(false);\n  const [balance, setBalance] = useState<string | null>(null);\n  const [isCheckingBalance, setIsCheckingBalance] = useState(false);\n  const router = useRouter();\n  const supabase = createClient();\n\n\n\n\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const { data: { session } } = await supabase.auth.getSession();\n        console.log(session);\n      if (!session) {\n        router.push(\"/auth/login\");\n        return;\n      }\n\n      // Fetch user data from database\n      try {\n        const email =  session.user.email;\n        console.log(email);\n        const response = await fetch(`/api/user/${email}`);\n        if (response.ok) {\n          const userData = await response.json();\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, [router, supabase.auth]);\n\n  const handleConnectWallet = async () => {\n    setIsConnectingWallet(true);\n    try {\n          const MMSDK = new MetaMaskSDK({\n            dappMetadata: {\n              name: \"Next.js Dapp\",\n              url: typeof window !== \"undefined\" ? window.location.href : \"\",\n            },\n            infuraAPIKey: \"f302b612a16e4208b8f64973e42e3b84\",\n          });\n    \n          const ethereum = MMSDK.getProvider();\n          console.log(ethereum);\n          const accounts = await MMSDK.connect();\n          console.log(accounts);\n          console.log(accounts[0]);\n          if (user) {\n            setUser({\n              ...user,\n              connectedWallet: accounts[0]\n            });\n          }\n        } catch (err) {\n          console.error(\"MetaMask connection failed\", err);\n        }\n        setIsConnectingWallet(false);\n  };\n\n\n  const handleCheckBalance = async () => {\n    if (!user?.connectedWallet) {\n      alert(\"No wallet connected\");\n      return;\n    }\n\n    setIsCheckingBalance(true);\n    try {\n      const provider = new ethers.JsonRpcProvider(\"https://sepolia.infura.io/v3/f302b612a16e4208b8f64973e42e3b84\");\n      const balanceWei = await provider.getBalance(user.connectedWallet);\n      const balanceEth = ethers.formatEther(balanceWei);\n      setBalance(balanceEth);\n      console.log(`Balance: ${balanceEth} ETH`);\n    } catch (error) {\n      console.error(\"Error fetching balance:\", error);\n      alert(\"Failed to fetch balance. Please try again.\");\n    } finally {\n      setIsCheckingBalance(false);\n    }\n  };\n\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n    router.push(\"/\");\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen arena-gradient flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 bg-primary rounded-lg flex items-center justify-center arena-glow mx-auto mb-4\">\n            <Gamepad2 className=\"w-8 h-8 text-primary-foreground animate-pulse\" />\n          </div>\n          <p className=\"text-muted-foreground\">Loading your arena...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return (\n      <div className=\"min-h-screen arena-gradient flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-muted-foreground mb-4 animate-in duration-500\">Welcome to ArenaFi</p>\n          <Button onClick={() => router.push(\"/auth/create-wallet\")}>Create a New Wallet</Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen arena-gradient\">\n      {/* Navigation */}\n      <nav className=\"border-b border-border/40 backdrop-blur-sm bg-background/80\">\n        <div className=\"container mx-auto px-4 py-4 flex items-center justify-between\">\n          <Link href=\"/\" className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center arena-glow\">\n              <Gamepad2 className=\"w-5 h-5 text-primary-foreground\" />\n            </div>\n            <span className=\"text-xl sm:text-2xl font-bold arena-text-glow\">ArenaFi</span>\n          </Link>\n          <div className=\"flex items-center space-x-2 sm:space-x-4\">\n            <span className=\"hidden sm:block text-sm text-muted-foreground\">Welcome, {user.name}</span>\n            <span className=\"sm:hidden text-xs text-muted-foreground\">{user.name}</span>\n            <Button variant=\"outline\" onClick={handleLogout} size=\"sm\" className=\"text-xs sm:text-sm\">\n              Logout\n            </Button>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"container mx-auto px-4 py-4 sm:py-8\">\n        {/* Welcome Section */}\n        <div className=\"mb-6 sm:mb-8\">\n          <h1 className=\"text-2xl sm:text-3xl lg:text-4xl font-bold mb-2 arena-text-glow\">\n            Welcome to the Arena, {user.name}!\n          </h1>\n          <p className=\"text-base sm:text-lg lg:text-xl text-muted-foreground\">\n            Your DeFi gaming dashboard is ready. Connect your external wallet to start battling.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-6 lg:gap-8\">\n          {/* Wallet Section */}\n          <div className=\"lg:col-span-2 space-y-4 sm:space-y-6\">\n            {/* Native Wallet */}\n            <Card className=\"arena-border-glow\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Wallet className=\"w-5 h-5 text-primary\" />\n                  <span>Native ArenaFi Wallet</span>\n                  <Badge variant=\"secondary\" className=\"arena-glow\">Active</Badge>\n                </CardTitle>\n                <CardDescription>\n                  Your secure, built-in wallet created during signup\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"text-sm font-medium text-muted-foreground\">Wallet Address</label>\n                    <div className=\"flex items-center space-x-2 mt-1\">\n                      <code className=\"flex-1 p-2 bg-muted rounded text-xs sm:text-sm font-mono break-all\">\n                        {user.walletAddress}\n                      </code>\n                      <Button\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => copyToClipboard(user.walletAddress)}\n                        className=\"shrink-0\"\n                      >\n                        <Copy className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4\">\n                    <div className=\"text-center p-3 sm:p-4 bg-muted/50 rounded-lg\">\n                      <div className=\"text-xl sm:text-2xl font-bold text-primary\">0.00</div>\n                      <div className=\"text-xs sm:text-sm text-muted-foreground\">ETH Balance</div>\n                    </div>\n                    <div className=\"text-center p-3 sm:p-4 bg-muted/50 rounded-lg\">\n                      <div className=\"text-xl sm:text-2xl font-bold text-primary\">0</div>\n                      <div className=\"text-xs sm:text-sm text-muted-foreground\">$ARENA Tokens</div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* External Wallet Connection */}\n            <Card className=\"arena-border-glow\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <ExternalLink className=\"w-5 h-5 text-primary\" />\n                  <span>External Wallet</span>\n                  {user.connectedWallet && (\n                    <Badge variant=\"secondary\" className=\"arena-glow\">Connected</Badge>\n                  )}\n                </CardTitle>\n                <CardDescription>\n                  Connect your MetaMask, WalletConnect, or other Web3 wallet\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                {user.connectedWallet ? (\n                  <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"text-sm font-medium text-muted-foreground\">Connected Wallet</label>\n                      <div className=\"flex items-center space-x-2 mt-1\">\n                        <code className=\"flex-1 p-2 bg-muted rounded text-xs sm:text-sm font-mono break-all\">\n                          {user.connectedWallet}\n                        </code>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => copyToClipboard(user.connectedWallet)}\n                          className=\"shrink-0\"\n                        >\n                          <Copy className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-2 sm:gap-3\">\n                      <Button variant=\"outline\" className=\"w-full text-xs sm:text-sm\">\n                        Disconnect Wallet\n                      </Button>\n                      <Button \n                        variant=\"outline\" \n                        className=\"w-full text-xs sm:text-sm bg-primary text-primary-foreground\" \n                        onClick={handleCheckBalance}\n                        disabled={isCheckingBalance}\n                      >\n                        {isCheckingBalance ? \"Checking...\" : \"Check Balance\"}\n                      </Button>\n                    </div>\n                    {balance && (\n                      <div className=\"p-3 bg-muted/50 rounded-lg\">\n                        <div className=\"text-xs sm:text-sm text-muted-foreground\">Current Balance</div>\n                        <div className=\"text-base sm:text-lg font-bold text-primary\">{parseFloat(balance).toFixed(4)} ETH</div>\n                      </div>\n                    )}  \n                  </div>\n              ) : (\n                  <div className=\"text-center py-8\">\n                    <div className=\"w-16 h-16 bg-muted/50 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <Wallet className=\"w-8 h-8 text-muted-foreground\" />\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      No external wallet connected\n                    </p>\n                    <Button \n                      onClick={handleConnectWallet} \n                      disabled={isConnectingWallet}\n                      className=\"arena-glow\"\n                    >\n                      {isConnectingWallet ? \"Connecting...\" : \"Connect Wallet\"}\n                    </Button>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Stats & Actions */}\n          <div className=\"space-y-4 sm:space-y-6\">\n            {/* Battle Stats */}\n            <Card className=\"arena-border-glow\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Trophy className=\"w-5 h-5 text-primary\" />\n                  <span>Battle Stats</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3 sm:space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm sm:text-base text-muted-foreground\">Battles Won</span>\n                  <span className=\"text-sm sm:text-base font-bold\">0</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm sm:text-base text-muted-foreground\">Total Staked</span>\n                  <span className=\"text-sm sm:text-base font-bold\">0 ETH</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm sm:text-base text-muted-foreground\">Rewards Earned</span>\n                  <span className=\"text-sm sm:text-base font-bold text-primary\">0 $ARENA</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm sm:text-base text-muted-foreground\">Arena Rank</span>\n                  <span className=\"text-sm sm:text-base font-bold\">#--</span>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Quick Actions */}\n            <Card className=\"arena-border-glow\">\n              <CardHeader>\n                <CardTitle>Quick Actions</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-2 sm:space-y-3\">\n                <Button className=\"w-full arena-glow text-xs sm:text-sm\" disabled={!user.connectedWallet}>\n                  <Coins className=\"w-3 h-3 sm:w-4 sm:h-4 mr-2\" />\n                  Start Battle\n                </Button>\n                <Button variant=\"outline\" className=\"w-full arena-border-glow text-xs sm:text-sm\">\n                  <TrendingUp className=\"w-3 h-3 sm:w-4 sm:h-4 mr-2\" />\n                  View Leaderboard\n                </Button>\n                <Button variant=\"outline\" className=\"w-full arena-border-glow text-xs sm:text-sm\">\n                  <Users className=\"w-3 h-3 sm:w-4 sm:h-4 mr-2\" />\n                  Join Community\n                </Button>\n              </CardContent>\n            </Card>\n\n            {/* Getting Started */}\n            <Card className=\"arena-border-glow\">\n              <CardHeader>\n                <CardTitle>Getting Started</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3 text-xs sm:text-sm\">\n                <div className=\"flex items-start space-x-2\">\n                  <div className=\"w-2 h-2 bg-primary rounded-full mt-1.5 sm:mt-2 shrink-0\"></div>\n                  <div>\n                    <div className=\"font-medium text-xs sm:text-sm\">Connect External Wallet</div>\n                    <div className=\"text-muted-foreground text-xs\">Link your MetaMask or other Web3 wallet</div>\n                  </div>\n                </div>\n                <div className=\"flex items-start space-x-2\">\n                  <div className=\"w-2 h-2 bg-muted-foreground rounded-full mt-1.5 sm:mt-2 shrink-0\"></div>\n                  <div>\n                    <div className=\"font-medium text-xs sm:text-sm\">Fund Your Wallet</div>\n                    <div className=\"text-muted-foreground text-xs\">Add ETH to start battling</div>\n                  </div>\n                </div>\n                <div className=\"flex items-start space-x-2\">\n                  <div className=\"w-2 h-2 bg-muted-foreground rounded-full mt-1.5 sm:mt-2 shrink-0\"></div>\n                  <div>\n                    <div className=\"font-medium text-xs sm:text-sm\">Enter Your First Battle</div>\n                    <div className=\"text-muted-foreground text-xs\">Stake ETH and challenge opponents</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}